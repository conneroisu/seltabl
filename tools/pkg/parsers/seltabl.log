[seltabl-lsp]2024/06/13 19:11:21 Starting the server...
[seltabl-lsp]2024/06/13 19:11:21 Received message: Content-Length: 3587

{"params":{"workspaceFolders":null,"trace":"off","capabilities":{"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true}},"workspace":{"workspaceFolders":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true},"textDocument":{"formatting":{"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"dynamicRegistration":false},"rename":{"prepareSupport":true,"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"dataSupport":true},"signatureHelp":{"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"dynamicRegistration":false},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"declaration":{"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dataSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"completion":{"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":false,"dynamicRegistration":false},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"synchronization":{"didSave":true,"willSaveWaitUntil":true,"willSave":true,"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]}},"rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"processId":489120,"workDoneToken":"1","rootPath":null},"id":1,"method":"initialize","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 Received message (initialize): {"params":{"workspaceFolders":null,"trace":"off","capabilities":{"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true}},"workspace":{"workspaceFolders":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true},"textDocument":{"formatting":{"dynamicRegistration":true},"typeDefinition":{"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"dynamicRegistration":false},"rename":{"prepareSupport":true,"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"dataSupport":true},"signatureHelp":{"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"dynamicRegistration":false},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"declaration":{"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dataSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"completion":{"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":false,"dynamicRegistration":false},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"synchronization":{"didSave":true,"willSaveWaitUntil":true,"willSave":true,"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]}},"rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"processId":489120,"workDoneToken":"1","rootPath":null},"id":1,"method":"initialize","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 received initialize request:  [123 34 112 97 114 97 109 115 34 58 123 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 119 105 110 100 111 119 34 58 123 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 115 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 110 97 109 101 34 58 123 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 104 111 118 101 114 34 58 123 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 125 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 44 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 125 44 34 112 114 111 99 101 115 115 73 100 34 58 52 56 57 49 50 48 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 125 44 34 105 100 34 58 49 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:21 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 19:11:21 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 19:11:21 Received message: Content-Length: 52

{"params":{},"method":"initialized","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 Received message (initialized): {"params":{},"method":"initialized","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 received initialized request:  [123 34 112 97 114 97 109 115 34 58 123 125 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:21 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 19:11:21 Received message: Content-Length: 208

{"params":{"textDocument":{"text":"\n","languageId":"oil","version":0,"uri":"oil:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/"}},"method":"textDocument\/didOpen","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 Received message (textDocument/didOpen): {"params":{"textDocument":{"text":"\n","languageId":"oil","version":0,"uri":"oil:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/"}},"method":"textDocument\/didOpen","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 Received didOpen message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 116 101 120 116 34 58 34 92 110 34 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 111 105 108 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 111 105 108 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 34 125 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:21 Opened: oil:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/
[seltabl-lsp]2024/06/13 19:11:21 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {oil:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/ []}}
[seltabl-lsp]2024/06/13 19:11:21 Received message: Content-Length: 382

{"params":{"textDocument":{"version":4,"uri":"oil:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/"},"contentChanges":[{"text":"\/006   ignore.go\n\/002   ignore_test.go\n\/003   selectors.go\n\/005   selectors_test.go\n\/004 󰌱  seltabl.log\n\/001   url.go\n\/007   url_test.go\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 Received message (textDocument/didChange): {"params":{"textDocument":{"version":4,"uri":"oil:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/"},"contentChanges":[{"text":"\/006   ignore.go\n\/002   ignore_test.go\n\/003   selectors.go\n\/005   selectors_test.go\n\/004 󰌱  seltabl.log\n\/001   url.go\n\/007   url_test.go\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:21 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 44 34 117 114 105 34 58 34 111 105 108 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 48 48 54 32 238 152 167 32 32 105 103 110 111 114 101 46 103 111 92 110 92 47 48 48 50 32 238 152 167 32 32 105 103 110 111 114 101 95 116 101 115 116 46 103 111 92 110 92 47 48 48 51 32 238 152 167 32 32 115 101 108 101 99 116 111 114 115 46 103 111 92 110 92 47 48 48 53 32 238 152 167 32 32 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 92 110 92 47 48 48 52 32 243 176 140 177 32 32 115 101 108 116 97 98 108 46 108 111 103 92 110 92 47 48 48 49 32 238 152 167 32 32 117 114 108 46 103 111 92 110 92 47 48 48 55 32 238 152 167 32 32 117 114 108 95 116 101 115 116 46 103 111 92 110 34 125 93 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:21 Changed: oil:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/
[seltabl-lsp]2024/06/13 19:11:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {oil:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/ []}}
[seltabl-lsp]2024/06/13 19:11:22 Received message: Content-Length: 2050

{"params":{"textDocument":{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n","languageId":"go","version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"method":"textDocument\/didOpen","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:22 Received message (textDocument/didOpen): {"params":{"textDocument":{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n","languageId":"go","version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"method":"textDocument\/didOpen","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:22 Received didOpen message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 80 97 114 116 115 32 91 93 115 116 114 105 110 103 92 110 92 116 105 102 32 116 97 103 32 58 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 41 59 32 116 97 103 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 116 97 103 41 92 110 92 116 125 92 110 92 116 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 99 108 97 115 115 80 97 114 116 115 32 58 61 32 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 92 110 92 116 92 116 102 111 114 32 95 44 32 99 108 97 115 115 80 97 114 116 32 58 61 32 114 97 110 103 101 32 99 108 97 115 115 80 97 114 116 115 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 46 92 34 43 99 108 97 115 115 80 97 114 116 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 110 97 109 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 116 121 112 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 118 97 108 117 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 115 114 99 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 104 114 101 102 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 115 101 108 101 99 116 111 114 32 58 61 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 92 34 41 92 110 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 102 111 114 32 95 44 32 115 116 114 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 105 102 32 115 116 114 32 61 61 32 115 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 101 108 101 99 116 111 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:22 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:11:22 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:11:25 Received message: Content-Length: 4723

{"params":{"textDocument":{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n","languageId":"go","version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"method":"textDocument\/didOpen","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:25 Received message (textDocument/didOpen): {"params":{"textDocument":{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n","languageId":"go","version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"method":"textDocument\/didOpen","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:25 Received didOpen message
[seltabl-lsp]2024/06/13 19:11:25 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:25 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:27 Received message: Content-Length: 166

{"params":{"textDocument":{"uri":"oil:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/"}},"method":"textDocument\/didClose","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:27 Received message (textDocument/didClose): {"params":{"textDocument":{"uri":"oil:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/"}},"method":"textDocument\/didClose","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:27 Received message: Content-Length: 3587
 [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 111 105 108 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 34 125 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 108 111 115 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:27 Received message (didClose) and replied:  Content-Length: 29

{"jsonrpc":"2.0","method":""}
[seltabl-lsp]2024/06/13 19:11:30 Received message: Content-Length: 4729

{"params":{"textDocument":{"version":3,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found,)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:30 Received message (textDocument/didChange): {"params":{"textDocument":{"version":3,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found,)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:30 Received didChange message
[seltabl-lsp]2024/06/13 19:11:30 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:30 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:30 Received message: Content-Length: 4730

{"params":{"textDocument":{"version":4,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, )\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:30 Received message (textDocument/didChange): {"params":{"textDocument":{"version":4,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, )\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:30 Received didChange message
[seltabl-lsp]2024/06/13 19:11:30 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:30 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:31 Received message: Content-Length: 4731

{"params":{"textDocument":{"version":5,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, f)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:31 Received message (textDocument/didChange): {"params":{"textDocument":{"version":5,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, f)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:31 Received didChange message
[seltabl-lsp]2024/06/13 19:11:31 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:31 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:31 Received message: Content-Length: 260

{"params":{"context":{"triggerKind":1},"position":{"character":28,"line":172},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"id":2,"method":"textDocument\/completion","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:31 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"character":28,"line":172},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"id":2,"method":"textDocument\/completion","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:31 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 50 56 44 34 108 105 110 101 34 58 49 55 50 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 125 44 34 105 100 34 58 50 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:31 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:31 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:11:31 Received message (textDocument/completion) and replied:  {{2.0 0xc000015e48} []}
[seltabl-lsp]2024/06/13 19:11:32 Received message: Content-Length: 4732

{"params":{"textDocument":{"version":6,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fm)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:32 Received message (textDocument/didChange): {"params":{"textDocument":{"version":6,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fm)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:32 Received didChange message
[seltabl-lsp]2024/06/13 19:11:32 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:32 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:32 Received message: Content-Length: 4733

{"params":{"textDocument":{"version":7,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:32 Received message (textDocument/didChange): {"params":{"textDocument":{"version":7,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:32 Received didChange message
[seltabl-lsp]2024/06/13 19:11:32 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:32 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:32 Received message: Content-Length: 4734

{"params":{"textDocument":{"version":8,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:32 Received message (textDocument/didChange): {"params":{"textDocument":{"version":8,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:32 Received didChange message
[seltabl-lsp]2024/06/13 19:11:32 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:32 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:34 Received message: Content-Length: 4789

{"params":{"textDocument":{"version":9,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange): {"params":{"textDocument":{"version":9,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received didChange message
[seltabl-lsp]2024/06/13 19:11:34 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:34 Received message: Content-Length: 4790

{"params":{"textDocument":{"version":11,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange): {"params":{"textDocument":{"version":11,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received didChange message
[seltabl-lsp]2024/06/13 19:11:34 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:34 Received message: Content-Length: 4791

{"params":{"textDocument":{"version":12,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))j\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange): {"params":{"textDocument":{"version":12,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))j\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 97 32 58 61 32 114 97 110 103 101 32 116 116 46 119 97 110 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 32 58 61 32 114 97 110 103 101 32 103 111 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 105 102 32 119 32 61 61 32 119 97 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 84 114 117 101 40 116 44 32 102 111 117 110 100 44 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 69 120 112 101 99 116 101 100 32 37 115 32 116 111 32 98 101 32 102 111 117 110 100 32 105 110 32 37 115 92 34 44 32 119 97 44 32 116 116 46 110 97 109 101 41 41 106 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:34 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:34 Received message: Content-Length: 260

{"params":{"context":{"triggerKind":1},"position":{"character":86,"line":172},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"id":3,"method":"textDocument\/completion","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"character":86,"line":172},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"id":3,"method":"textDocument\/completion","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 56 54 44 34 108 105 110 101 34 58 49 55 50 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 125 44 34 105 100 34 58 51 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:34 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:34 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f8760} []}
[seltabl-lsp]2024/06/13 19:11:34 Received message: Content-Length: 4790

{"params":{"textDocument":{"version":15,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange): {"params":{"textDocument":{"version":15,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:34 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 97 32 58 61 32 114 97 110 103 101 32 116 116 46 119 97 110 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 32 58 61 32 114 97 110 103 101 32 103 111 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 105 102 32 119 32 61 61 32 119 97 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 84 114 117 101 40 116 44 32 102 111 117 110 100 44 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 69 120 112 101 99 116 101 100 32 37 115 32 116 111 32 98 101 32 102 111 117 110 100 32 105 110 32 37 115 92 34 44 32 119 97 44 32 116 116 46 110 97 109 101 41 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:34 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:35 Received message: Content-Length: 4780

{"params":{"textDocument":{"version":16,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:35 Received message (textDocument/didChange): {"params":{"textDocument":{"version":16,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:35 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 97 32 58 61 32 114 97 110 103 101 32 116 116 46 119 97 110 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 32 58 61 32 114 97 110 103 101 32 103 111 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 105 102 32 119 32 61 61 32 119 97 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 84 114 117 101 40 116 44 32 102 111 117 110 100 44 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 69 120 112 101 99 116 101 100 32 37 115 32 116 111 32 98 101 32 102 111 117 110 100 32 105 110 32 37 115 92 34 44 32 119 97 44 32 116 116 46 110 97 109 101 41 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 125 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:11:35 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:35 Received message: Content-Length: 4801

{"params":{"textDocument":{"version":18,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:35 Received message (textDocument/didChange): {"params":{"textDocument":{"version":18,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"method":"textDocument\/didChange","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:35 Received didChange message
[seltabl-lsp]2024/06/13 19:11:35 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:11:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:11:35 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"method":"textDocument\/didSave","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:35 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"method":"textDocument\/didSave","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:35 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:11:40 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"method":"textDocument\/didSave","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:40 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"method":"textDocument\/didSave","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:40 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:11:40 Received message: Content-Length: 44

{"id":4,"method":"shutdown","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:40 Received message (shutdown): {"id":4,"method":"shutdown","jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:11:40 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 19:11:56 Starting the server...
[seltabl-lsp]2024/06/13 19:11:56 Received message: Content-Length: 3587

{"jsonrpc":"2.0","method":"initialize","id":1,"params":{"trace":"off","workspaceFolders":null,"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":491332,"workDoneToken":"1","capabilities":{"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"workspace":{"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeWatchedFiles":{"dynamicRegistration":false,"relativePatternSupport":true}},"textDocument":{"documentHighlight":{"dynamicRegistration":false},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"full":{"delta":true},"range":false},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true},"completion":{"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false}},"callHierarchy":{"dynamicRegistration":false},"typeDefinition":{"linkSupport":true},"formatting":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false,"hierarchicalDocumentSymbolSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"declaration":{"linkSupport":true},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"diagnostic":{"dynamicRegistration":false},"rename":{"dynamicRegistration":true,"prepareSupport":true},"references":{"dynamicRegistration":false},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"]}},"synchronization":{"didSave":true,"willSaveWaitUntil":true,"willSave":true,"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]}},"rootPath":null}}
[seltabl-lsp]2024/06/13 19:11:56 Received message (initialize): {"jsonrpc":"2.0","method":"initialize","id":1,"params":{"trace":"off","workspaceFolders":null,"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":491332,"workDoneToken":"1","capabilities":{"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"workspace":{"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeWatchedFiles":{"dynamicRegistration":false,"relativePatternSupport":true}},"textDocument":{"documentHighlight":{"dynamicRegistration":false},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"full":{"delta":true},"range":false},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true},"completion":{"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false}},"callHierarchy":{"dynamicRegistration":false},"typeDefinition":{"linkSupport":true},"formatting":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false,"hierarchicalDocumentSymbolSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"declaration":{"linkSupport":true},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"diagnostic":{"dynamicRegistration":false},"rename":{"dynamicRegistration":true,"prepareSupport":true},"references":{"dynamicRegistration":false},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"isPreferredSupport":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"]}},"synchronization":{"didSave":true,"willSaveWaitUntil":true,"willSave":true,"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]}},"rootPath":null}}
[seltabl-lsp]2024/06/13 19:11:56 received initialize request:  [123 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 105 100 34 58 49 44 34 112 97 114 97 109 115 34 58 123 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 44 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 125 44 34 112 114 111 99 101 115 115 73 100 34 58 52 57 49 51 51 50 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 115 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 104 111 118 101 114 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 44 34 114 97 110 103 101 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 110 97 109 101 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 125 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 125 125]
[seltabl-lsp]2024/06/13 19:11:56 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 19:11:56 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 19:11:56 Received message: Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}
[seltabl-lsp]2024/06/13 19:11:56 Received message (initialized): {"jsonrpc":"2.0","method":"initialized","params":{}}
[seltabl-lsp]2024/06/13 19:11:56 received initialized request:  [123 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 112 97 114 97 109 115 34 58 123 125 125]
[seltabl-lsp]2024/06/13 19:11:56 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 19:11:56 Received message: Content-Length: 2050

{"jsonrpc":"2.0","method":"textDocument\/didOpen","params":{"textDocument":{"version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n","languageId":"go"}}}
[seltabl-lsp]2024/06/13 19:11:56 Received message (textDocument/didOpen): {"jsonrpc":"2.0","method":"textDocument\/didOpen","params":{"textDocument":{"version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n","languageId":"go"}}}
[seltabl-lsp]2024/06/13 19:11:56 Received didOpen message:  [123 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 80 97 114 116 115 32 91 93 115 116 114 105 110 103 92 110 92 116 105 102 32 116 97 103 32 58 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 41 59 32 116 97 103 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 116 97 103 41 92 110 92 116 125 92 110 92 116 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 99 108 97 115 115 80 97 114 116 115 32 58 61 32 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 92 110 92 116 92 116 102 111 114 32 95 44 32 99 108 97 115 115 80 97 114 116 32 58 61 32 114 97 110 103 101 32 99 108 97 115 115 80 97 114 116 115 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 46 92 34 43 99 108 97 115 115 80 97 114 116 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 110 97 109 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 116 121 112 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 118 97 108 117 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 115 114 99 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 104 114 101 102 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 115 101 108 101 99 116 111 114 32 58 61 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 92 34 41 92 110 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 102 111 114 32 95 44 32 115 116 114 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 105 102 32 115 116 114 32 61 61 32 115 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 101 108 101 99 116 111 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 125 125 125]
[seltabl-lsp]2024/06/13 19:11:56 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:11:56 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:12:11 Received message: Content-Length: 1004

{"jsonrpc":"2.0","method":"textDocument\/didOpen","params":{"textDocument":{"version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\tfmt.Println(err)\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","languageId":"go"}}}
[seltabl-lsp]2024/06/13 19:12:11 Received message (textDocument/didOpen): {"jsonrpc":"2.0","method":"textDocument\/didOpen","params":{"textDocument":{"version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\tfmt.Println(err)\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","languageId":"go"}}}
[seltabl-lsp]2024/06/13 19:12:11 Received didOpen message:  [123 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 125 125 125]
[seltabl-lsp]2024/06/13 19:12:11 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 19:12:11 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 19:12:17 Received message: Content-Length: 44

{"jsonrpc":"2.0","method":"shutdown","id":2}
[seltabl-lsp]2024/06/13 19:12:17 Received message (shutdown): {"jsonrpc":"2.0","method":"shutdown","id":2}
[seltabl-lsp]2024/06/13 19:12:17 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 19:12:30 Starting the server...
[seltabl-lsp]2024/06/13 19:12:30 Received message: Content-Length: 3587

{"params":{"processId":492407,"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"capabilities":{"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"positionEncodings":["utf-16"]},"textDocument":{"definition":{"linkSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"semanticTokens":{"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"augmentsSyntaxTokens":true},"declaration":{"linkSupport":true},"completion":{"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]}},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"rename":{"dynamicRegistration":true,"prepareSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"diagnostic":{"dynamicRegistration":false},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"references":{"dynamicRegistration":false},"synchronization":{"willSaveWaitUntil":true,"didSave":true,"willSave":true,"dynamicRegistration":false},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"typeDefinition":{"linkSupport":true},"documentHighlight":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"implementation":{"linkSupport":true}},"workspace":{"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"didChangeWatchedFiles":{"dynamicRegistration":false,"relativePatternSupport":true},"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"workspaceEdit":{"resourceOperations":["rename","create","delete"]}}},"rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"trace":"off"},"jsonrpc":"2.0","method":"initialize","id":1}
[seltabl-lsp]2024/06/13 19:12:30 Received message (initialize): {"params":{"processId":492407,"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"capabilities":{"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"general":{"positionEncodings":["utf-16"]},"textDocument":{"definition":{"linkSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"semanticTokens":{"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"augmentsSyntaxTokens":true},"declaration":{"linkSupport":true},"completion":{"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]}},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"rename":{"dynamicRegistration":true,"prepareSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"dataSupport":true,"resolveSupport":{"properties":["edit"]},"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"diagnostic":{"dynamicRegistration":false},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"references":{"dynamicRegistration":false},"synchronization":{"willSaveWaitUntil":true,"didSave":true,"willSave":true,"dynamicRegistration":false},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"typeDefinition":{"linkSupport":true},"documentHighlight":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"implementation":{"linkSupport":true}},"workspace":{"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"didChangeWatchedFiles":{"dynamicRegistration":false,"relativePatternSupport":true},"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"workspaceEdit":{"resourceOperations":["rename","create","delete"]}}},"rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"trace":"off"},"jsonrpc":"2.0","method":"initialize","id":1}
[seltabl-lsp]2024/06/13 19:12:30 received initialize request:  [123 34 112 97 114 97 109 115 34 58 123 34 112 114 111 99 101 115 115 73 100 34 58 52 57 50 52 48 55 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 125 44 34 114 101 110 97 109 101 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 104 111 118 101 114 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 125 125 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 44 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 125 44 34 116 114 97 99 101 34 58 34 111 102 102 34 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 105 100 34 58 49 125]
[seltabl-lsp]2024/06/13 19:12:30 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 19:12:30 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 19:12:30 Received message: Content-Length: 52

{"params":{},"jsonrpc":"2.0","method":"initialized"}
[seltabl-lsp]2024/06/13 19:12:30 Received message (initialized): {"params":{},"jsonrpc":"2.0","method":"initialized"}
[seltabl-lsp]2024/06/13 19:12:30 received initialized request:  [123 34 112 97 114 97 109 115 34 58 123 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 125]
[seltabl-lsp]2024/06/13 19:12:30 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 19:12:30 Received message: Content-Length: 4795

{"params":{"textDocument":{"version":0,"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n","languageId":"go","uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 19:12:30 Received message (textDocument/didOpen): {"params":{"textDocument":{"version":0,"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n","languageId":"go","uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 19:12:30 Received didOpen message
[seltabl-lsp]2024/06/13 19:12:30 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:30 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:45 Received message: Content-Length: 4816

{"params":{"textDocument":{"version":5,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:45 Received message (textDocument/didChange): {"params":{"textDocument":{"version":5,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:45 Received didChange message
[seltabl-lsp]2024/06/13 19:12:45 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:47 Received message: Content-Length: 4817

{"params":{"textDocument":{"version":6,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tj\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/didChange): {"params":{"textDocument":{"version":6,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tj\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:47 Received didChange message
[seltabl-lsp]2024/06/13 19:12:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:47 Received message: Content-Length: 259

{"params":{"position":{"line":170,"character":8},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":2}
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/completion): {"params":{"position":{"line":170,"character":8},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":2}
[seltabl-lsp]2024/06/13 19:12:47 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 55 48 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 50 125]
[seltabl-lsp]2024/06/13 19:12:47 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:47 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/completion) and replied:  {{2.0 0xc0002e0658} []}
[seltabl-lsp]2024/06/13 19:12:47 Received message: Content-Length: 4818

{"params":{"textDocument":{"version":7,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tjk\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/didChange): {"params":{"textDocument":{"version":7,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tjk\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:47 Received didChange message
[seltabl-lsp]2024/06/13 19:12:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:47 Received message: Content-Length: 4816

{"params":{"textDocument":{"version":9,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/didChange): {"params":{"textDocument":{"version":9,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:47 Received didChange message
[seltabl-lsp]2024/06/13 19:12:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:50 Received message: Content-Length: 4829

{"params":{"textDocument":{"version":10,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/didChange): {"params":{"textDocument":{"version":10,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:50 Received didChange message
[seltabl-lsp]2024/06/13 19:12:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:50 Received message: Content-Length: 4831

{"params":{"textDocument":{"version":11,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/didChange): {"params":{"textDocument":{"version":11,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:50 Received didChange message
[seltabl-lsp]2024/06/13 19:12:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:50 Received message: Content-Length: 4832

{"params":{"textDocument":{"version":12,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tj\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/didChange): {"params":{"textDocument":{"version":12,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tj\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:50 Received didChange message
[seltabl-lsp]2024/06/13 19:12:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:12:50 Received message: Content-Length: 259

{"params":{"position":{"line":169,"character":7},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":3}
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/completion): {"params":{"position":{"line":169,"character":7},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":3}
[seltabl-lsp]2024/06/13 19:12:50 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 57 44 34 99 104 97 114 97 99 116 101 114 34 58 55 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 51 125]
[seltabl-lsp]2024/06/13 19:12:50 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:50 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:12:50 Received message (textDocument/completion) and replied:  {{2.0 0xc0003840a8} []}
[seltabl-lsp]2024/06/13 19:12:51 Received message: Content-Length: 4831

{"params":{"textDocument":{"version":15,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:51 Received message (textDocument/didChange): {"params":{"textDocument":{"version":15,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:12:51 Received didChange message
[seltabl-lsp]2024/06/13 19:12:51 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:12:51 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:00 Received message: Content-Length: 4832

{"params":{"textDocument":{"version":16,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:00 Received message (textDocument/didChange): {"params":{"textDocument":{"version":16,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:00 Received didChange message
[seltabl-lsp]2024/06/13 19:13:00 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:00 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:00 Received message: Content-Length: 259

{"params":{"position":{"line":169,"character":7},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":4}
[seltabl-lsp]2024/06/13 19:13:00 Received message (textDocument/completion): {"params":{"position":{"line":169,"character":7},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":4}
[seltabl-lsp]2024/06/13 19:13:00 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 57 44 34 99 104 97 114 97 99 116 101 114 34 58 55 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 52 125]
[seltabl-lsp]2024/06/13 19:13:00 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:00 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:00 Received message (textDocument/completion) and replied:  {{2.0 0xc000112380} []}
[seltabl-lsp]2024/06/13 19:13:00 Received message: Content-Length: 4833

{"params":{"textDocument":{"version":17,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:00 Received message (textDocument/didChange): {"params":{"textDocument":{"version":17,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:00 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 97 32 58 61 32 114 97 110 103 101 32 116 116 46 119 97 110 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 32 58 61 32 114 97 110 103 101 32 103 111 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 116 46 92 110 92 116 92 116 92 116 92 116 92 116 92 116 105 102 32 119 32 61 61 32 119 97 32 123 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 84 114 117 101 40 116 44 32 102 111 117 110 100 44 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 69 120 112 101 99 116 101 100 32 37 115 32 116 111 32 98 101 32 102 111 117 110 100 32 105 110 32 37 115 92 34 44 32 119 97 44 32 116 116 46 110 97 109 101 41 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:00 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:00 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:01 Received message: Content-Length: 4834

{"params":{"textDocument":{"version":18,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.L\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:01 Received message (textDocument/didChange): {"params":{"textDocument":{"version":18,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.L\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:01 Received didChange message
[seltabl-lsp]2024/06/13 19:13:01 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:01 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:01 Received message: Content-Length: 259

{"params":{"position":{"line":169,"character":9},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":5}
[seltabl-lsp]2024/06/13 19:13:01 Received message (textDocument/completion): {"params":{"position":{"line":169,"character":9},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":5}
[seltabl-lsp]2024/06/13 19:13:01 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 57 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 53 125]
[seltabl-lsp]2024/06/13 19:13:01 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:01 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:01 Received message (textDocument/completion) and replied:  {{2.0 0xc000112a50} []}
[seltabl-lsp]2024/06/13 19:13:02 Received message: Content-Length: 4851

{"params":{"textDocument":{"version":19,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange): {"params":{"textDocument":{"version":19,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received didChange message
[seltabl-lsp]2024/06/13 19:13:02 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:02 Received message: Content-Length: 4851

{"params":{"textDocument":{"version":21,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange): {"params":{"textDocument":{"version":21,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received didChange message
[seltabl-lsp]2024/06/13 19:13:02 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:02 Received message: Content-Length: 4852

{"params":{"textDocument":{"version":22,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)j\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange): {"params":{"textDocument":{"version":22,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)j\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received didChange message
[seltabl-lsp]2024/06/13 19:13:02 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:02 Received message: Content-Length: 260

{"params":{"position":{"line":169,"character":25},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":6}
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/completion): {"params":{"position":{"line":169,"character":25},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"context":{"triggerKind":1}},"jsonrpc":"2.0","method":"textDocument\/completion","id":6}
[seltabl-lsp]2024/06/13 19:13:02 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 57 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 54 125]
[seltabl-lsp]2024/06/13 19:13:02 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:02 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/completion) and replied:  {{2.0 0xc0002e0fb0} []}
[seltabl-lsp]2024/06/13 19:13:02 Received message: Content-Length: 4851

{"params":{"textDocument":{"version":25,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange): {"params":{"textDocument":{"version":25,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:02 Received didChange message
[seltabl-lsp]2024/06/13 19:13:02 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:02 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:04 Received message: Content-Length: 4835

{"params":{"textDocument":{"version":26,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:04 Received message (textDocument/didChange): {"params":{"textDocument":{"version":26,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:04 Received didChange message
[seltabl-lsp]2024/06/13 19:13:04 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:04 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:04 Received message: Content-Length: 4837

{"params":{"textDocument":{"version":27,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:04 Received message (textDocument/didChange): {"params":{"textDocument":{"version":27,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:04 Received didChange message
[seltabl-lsp]2024/06/13 19:13:04 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:04 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:04 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:04 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:04 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:13:08 Received message: Content-Length: 4835

{"params":{"textDocument":{"version":29,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:08 Received message (textDocument/didChange): {"params":{"textDocument":{"version":29,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"}]},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:08 Received didChange message
[seltabl-lsp]2024/06/13 19:13:08 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:08 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:08 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:08 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:08 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:13:14 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:14 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:14 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:13:14 Received message: Content-Length: 44

{"jsonrpc":"2.0","method":"shutdown","id":7}
[seltabl-lsp]2024/06/13 19:13:14 Received message (shutdown): {"jsonrpc":"2.0","method":"shutdown","id":7}
[seltabl-lsp]2024/06/13 19:13:14 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 19:13:32 Starting the server...
[seltabl-lsp]2024/06/13 19:13:32 Received message: Content-Length: 3587

{"params":{"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"trace":"off","rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"capabilities":{"workspace":{"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false}},"textDocument":{"documentHighlight":{"dynamicRegistration":false},"completion":{"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false}},"synchronization":{"didSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true,"willSave":true},"typeDefinition":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"full":{"delta":true},"range":false},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"dataSupport":true},"references":{"dynamicRegistration":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"dynamicRegistration":false},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"implementation":{"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]}},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"declaration":{"linkSupport":true}},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"general":{"positionEncodings":["utf-16"]}},"processId":494116},"jsonrpc":"2.0","id":1,"method":"initialize"}
[seltabl-lsp]2024/06/13 19:13:32 Received message (initialize): {"params":{"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"trace":"off","rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"capabilities":{"workspace":{"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false}},"textDocument":{"documentHighlight":{"dynamicRegistration":false},"completion":{"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false}},"synchronization":{"didSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true,"willSave":true},"typeDefinition":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"full":{"delta":true},"range":false},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"dataSupport":true},"references":{"dynamicRegistration":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"dynamicRegistration":false},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"implementation":{"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]}},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"declaration":{"linkSupport":true}},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"general":{"positionEncodings":["utf-16"]}},"processId":494116},"jsonrpc":"2.0","id":1,"method":"initialize"}
[seltabl-lsp]2024/06/13 19:13:32 received initialize request:  [123 34 112 97 114 97 109 115 34 58 123 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 44 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 125 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 119 111 114 107 115 112 97 99 101 34 58 123 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 101 110 97 109 101 34 58 123 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 44 34 114 97 110 103 101 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 104 111 118 101 114 34 58 123 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 125 44 34 112 114 111 99 101 115 115 73 100 34 58 52 57 52 49 49 54 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 125]
[seltabl-lsp]2024/06/13 19:13:32 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 19:13:32 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 19:13:32 Received message: Content-Length: 52

{"params":{},"jsonrpc":"2.0","method":"initialized"}
[seltabl-lsp]2024/06/13 19:13:32 Received message (initialized): {"params":{},"jsonrpc":"2.0","method":"initialized"}
[seltabl-lsp]2024/06/13 19:13:32 received initialized request:  [123 34 112 97 114 97 109 115 34 58 123 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 125]
[seltabl-lsp]2024/06/13 19:13:32 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 19:13:32 Received message: Content-Length: 4829

{"params":{"textDocument":{"version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n","languageId":"go"}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 19:13:32 Received message (textDocument/didOpen): {"params":{"textDocument":{"version":0,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t\t\tfor _, w := range got {\n\t\t\t\t\t\tt.Logf(\"w: %s\", w)\n\t\t\t\t\t\tif w == wa {\n\t\t\t\t\t\t\tfound = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert.True(t, found, fmt.Sprintf(\"Expected %s to be found in %s\", wa, tt.name))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n","languageId":"go"}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 19:13:32 Received didOpen message
[seltabl-lsp]2024/06/13 19:13:32 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:32 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:38 Received message: Content-Length: 4578

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":4}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:38 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\tfound := false\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":4}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:38 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 102 111 114 32 95 44 32 119 97 32 58 61 32 114 97 110 103 101 32 116 116 46 119 97 110 116 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:38 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:38 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:39 Received message: Content-Length: 4552

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":5}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:39 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":5}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:39 Received didChange message
[seltabl-lsp]2024/06/13 19:13:39 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:39 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:40 Received message: Content-Length: 4562

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":6}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:40 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":6}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:40 Received didChange message
[seltabl-lsp]2024/06/13 19:13:40 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:40 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:40 Received message: Content-Length: 4560

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":7}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:40 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":7}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:40 Received didChange message
[seltabl-lsp]2024/06/13 19:13:40 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:40 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:41 Received message: Content-Length: 4558

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":8}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":8}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received didChange message
[seltabl-lsp]2024/06/13 19:13:41 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:41 Received message: Content-Length: 4555

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":10}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":10}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received didChange message
[seltabl-lsp]2024/06/13 19:13:41 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:41 Received message: Content-Length: 4556

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>j\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":11}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>j\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":11}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received didChange message
[seltabl-lsp]2024/06/13 19:13:41 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:41 Received message: Content-Length: 260

{"params":{"position":{"line":143,"character":19},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":2,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/completion): {"params":{"position":{"line":143,"character":19},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":2,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:41 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 50 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 125]
[seltabl-lsp]2024/06/13 19:13:41 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:41 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/completion) and replied:  {{2.0 0xc0001123a0} []}
[seltabl-lsp]2024/06/13 19:13:41 Received message: Content-Length: 4555

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":14}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":14}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:41 Received didChange message
[seltabl-lsp]2024/06/13 19:13:41 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:42 Received message: Content-Length: 4555

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":15}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:42 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":15}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:42 Received didChange message
[seltabl-lsp]2024/06/13 19:13:42 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:42 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:44 Received message: Content-Length: 4553

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":17}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:44 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tfor _, wa := range tt.want {\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":17}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:44 Received didChange message
[seltabl-lsp]2024/06/13 19:13:44 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:45 Received message: Content-Length: 4515

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":18}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:45 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":18}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:45 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:45 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:45 Received message: Content-Length: 4525

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":19}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:45 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":19}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:45 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:45 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:46 Received message: Content-Length: 4526

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\ta\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":20}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\ta\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":20}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:46 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:46 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:46 Received message: Content-Length: 259

{"params":{"position":{"line":166,"character":5},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":3,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/completion): {"params":{"position":{"line":166,"character":5},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":3,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:46 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 54 44 34 99 104 97 114 97 99 116 101 114 34 58 53 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 51 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 125]
[seltabl-lsp]2024/06/13 19:13:46 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:46 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/completion) and replied:  {{2.0 0xc000112d40} []}
[seltabl-lsp]2024/06/13 19:13:46 Received message: Content-Length: 4527

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tas\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":21}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tas\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":21}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:46 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:46 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:46 Received message: Content-Length: 4528

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tass\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":22}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tass\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":22}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:46 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 50 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:46 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:47 Received message: Content-Length: 4529

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tasse\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":23}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:47 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tasse\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":23}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:47 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 101 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:47 Received message: Content-Length: 4530

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tasser\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":24}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:47 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tasser\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":24}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:47 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 101 114 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:48 Received message: Content-Length: 4531

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":25}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":25}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:48 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 101 114 116 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 53 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:48 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:48 Received message: Content-Length: 4532

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":26}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":26}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:48 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 54 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:48 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:48 Received message: Content-Length: 4533

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.C\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":27}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.C\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":27}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:48 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 67 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:48 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:48 Received message: Content-Length: 260

{"params":{"position":{"line":166,"character":12},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":4,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/completion): {"params":{"position":{"line":166,"character":12},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":4,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:48 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 52 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 125]
[seltabl-lsp]2024/06/13 19:13:48 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:48 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:48 Received message (textDocument/completion) and replied:  {{2.0 0xc000113508} []}
[seltabl-lsp]2024/06/13 19:13:49 Received message: Content-Length: 4534

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Co\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":28}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Co\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":28}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 116 92 34 116 101 115 116 105 110 103 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 116 114 101 116 99 104 114 92 47 116 101 115 116 105 102 121 92 47 97 115 115 101 114 116 92 34 92 110 41 92 110 92 110 92 47 92 47 32 84 101 115 116 83 101 108 101 99 116 111 114 115 32 116 101 115 116 115 32 116 104 101 32 115 101 108 101 99 116 111 114 115 32 102 117 110 99 116 105 111 110 92 110 102 117 110 99 32 84 101 115 116 83 101 108 101 99 116 111 114 115 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 116 46 82 117 110 40 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 116 101 115 116 115 32 58 61 32 91 93 115 116 114 117 99 116 32 123 92 110 92 116 92 116 92 116 110 97 109 101 32 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 105 110 112 117 116 32 115 116 114 105 110 103 92 110 92 116 92 116 92 116 119 97 110 116 32 32 91 93 115 116 114 105 110 103 92 110 92 116 92 116 125 123 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 97 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 92 34 44 32 92 34 98 111 100 121 32 116 97 98 108 101 32 116 114 32 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 98 111 100 121 32 100 105 118 92 34 44 32 92 34 100 105 118 32 104 49 92 34 44 32 92 34 100 105 118 32 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 50 62 84 101 115 116 60 92 47 104 50 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 98 111 100 121 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 92 116 123 92 110 92 116 92 116 92 116 92 116 110 97 109 101 58 32 92 34 84 101 115 116 83 101 108 101 99 116 111 114 115 92 34 44 92 110 92 116 92 116 92 116 92 116 105 110 112 117 116 58 32 96 92 110 92 116 92 116 92 116 92 116 60 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 92 116 60 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 105 116 108 101 62 84 101 115 116 60 92 47 116 105 116 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 104 101 97 100 62 92 110 92 116 92 116 92 116 92 116 92 116 60 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 104 49 62 84 101 115 116 60 92 47 104 49 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 112 62 84 101 115 116 60 92 47 112 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 100 105 118 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 97 32 104 114 101 102 61 92 34 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 92 34 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 84 101 115 116 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 97 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 98 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 49 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 50 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 51 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 116 100 62 52 60 92 47 116 100 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 114 62 92 110 92 116 92 116 92 116 92 116 92 116 92 116 60 92 47 116 97 98 108 101 62 92 110 92 116 92 116 92 116 92 116 92 116 60 92 47 98 111 100 121 62 92 110 92 116 92 116 92 116 92 116 60 92 47 104 116 109 108 62 92 110 92 116 92 116 92 116 92 116 96 44 92 110 92 116 92 116 92 116 92 116 119 97 110 116 58 32 91 93 115 116 114 105 110 103 123 92 34 104 101 97 100 92 34 44 32 92 34 98 111 100 121 92 34 44 32 92 34 116 97 98 108 101 92 34 44 32 92 34 116 114 92 34 44 32 92 34 116 100 92 34 44 32 92 34 104 116 109 108 92 34 44 32 92 34 100 105 118 92 34 44 32 92 34 104 49 92 34 44 32 92 34 112 92 34 44 32 92 34 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 34 44 32 92 34 100 97 115 102 115 100 102 92 34 125 44 92 110 92 116 92 116 92 116 125 44 92 110 92 116 92 116 125 92 110 92 116 92 116 102 111 114 32 95 44 32 116 116 32 58 61 32 114 97 110 103 101 32 116 101 115 116 115 32 123 92 110 92 116 92 116 92 116 116 46 82 117 110 40 116 116 46 110 97 109 101 44 32 102 117 110 99 40 116 32 42 116 101 115 116 105 110 103 46 84 41 32 123 92 110 92 116 92 116 92 116 92 116 100 111 99 44 32 101 114 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 82 101 97 100 101 114 40 92 110 92 116 92 116 92 116 92 116 92 116 115 116 114 105 110 103 115 46 78 101 119 82 101 97 100 101 114 40 116 116 46 105 110 112 117 116 41 44 92 110 92 116 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 92 116 116 46 70 97 116 97 108 102 40 92 34 102 97 105 108 101 100 32 116 111 32 99 114 101 97 116 101 32 100 111 99 117 109 101 110 116 58 32 37 118 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 92 116 103 111 116 32 58 61 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 41 92 110 92 116 92 116 92 116 92 116 97 115 115 101 114 116 46 67 111 92 110 92 116 92 116 92 116 125 41 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 19:13:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:49 Received message: Content-Length: 4535

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Con\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":29}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Con\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":29}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received didChange message
[seltabl-lsp]2024/06/13 19:13:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:49 Received message: Content-Length: 4536

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Cont\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":30}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Cont\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":30}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received didChange message
[seltabl-lsp]2024/06/13 19:13:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:49 Received message: Content-Length: 4537

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Conta\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":31}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Conta\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":31}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:49 Received didChange message
[seltabl-lsp]2024/06/13 19:13:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:50 Received message: Content-Length: 4538

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contai\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":32}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contai\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":32}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received didChange message
[seltabl-lsp]2024/06/13 19:13:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:50 Received message: Content-Length: 4539

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contain\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":33}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contain\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":33}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received didChange message
[seltabl-lsp]2024/06/13 19:13:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:50 Received message: Content-Length: 4540

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contains\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":34}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contains\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":34}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received didChange message
[seltabl-lsp]2024/06/13 19:13:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:50 Received message: Content-Length: 4541

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":35}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":35}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:50 Received didChange message
[seltabl-lsp]2024/06/13 19:13:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:52 Received message: Content-Length: 4540

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contains\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":36}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:52 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Contains\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":36}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:52 Received didChange message
[seltabl-lsp]2024/06/13 19:13:52 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:52 Received message: Content-Length: 4543

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf()\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":61}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:52 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf()\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":61}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:52 Received didChange message
[seltabl-lsp]2024/06/13 19:13:52 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:53 Received message: Content-Length: 4611

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":62}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":62}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received didChange message
[seltabl-lsp]2024/06/13 19:13:53 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:53 Received message: Content-Length: 4611

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":64}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":64}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received didChange message
[seltabl-lsp]2024/06/13 19:13:53 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:53 Received message: Content-Length: 4612

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)j\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":65}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)j\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":65}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received didChange message
[seltabl-lsp]2024/06/13 19:13:53 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:53 Received message: Content-Length: 260

{"params":{"position":{"line":166,"character":89},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":5,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/completion): {"params":{"position":{"line":166,"character":89},"context":{"triggerKind":1},"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","id":5,"method":"textDocument\/completion"}
[seltabl-lsp]2024/06/13 19:13:53 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 54 54 44 34 99 104 97 114 97 99 116 101 114 34 58 56 57 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 95 116 101 115 116 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 53 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 125]
[seltabl-lsp]2024/06/13 19:13:53 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:53 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/completion) and replied:  {{2.0 0xc000113c70} []}
[seltabl-lsp]2024/06/13 19:13:53 Received message: Content-Length: 4611

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":68}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":68}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:53 Received didChange message
[seltabl-lsp]2024/06/13 19:13:53 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:54 Received message: Content-Length: 4590

{"params":{"contentChanges":[{"text":"package parsers\n\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":69}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:54 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":69}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:54 Received didChange message
[seltabl-lsp]2024/06/13 19:13:54 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:54 Received message: Content-Length: 4600

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":70}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:54 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n\t\"github.com\/stretchr\/testify\/assert\"\n)\n\n\/\/ TestSelectors tests the selectors function\nfunc TestSelectors(t *testing.T) {\n\tt.Run(\"TestSelectors\", func(t *testing.T) {\n\t\ttests := []struct {\n\t\t\tname  string\n\t\t\tinput string\n\t\t\twant  []string\n\t\t}{\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<table>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>a<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"body table tr\", \"body table tr td\", \"html\", \"body div\", \"div h1\", \"div p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>Test<\/h2>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tbody\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\"},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"TestSelectors\",\n\t\t\t\tinput: `\n\t\t\t\t<html>\n\t\t\t\t\t<head>\n\t\t\t\t\t\t<title>Test<\/title>\n\t\t\t\t\t<\/head>\n\t\t\t\t\t<body>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1>Test<\/h1>\n\t\t\t\t\t\t\t<p>Test<\/p>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<a href=\"https:\/\/example.com\">\n\t\t\t\t\t\t\t\t\t\tTest\n\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t<td>b<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>1<\/td>\n\t\t\t\t\t\t\t\t<td>2<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>3<\/td>\n\t\t\t\t\t\t\t\t<td>4<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t<\/body>\n\t\t\t\t<\/html>\n\t\t\t\t`,\n\t\t\t\twant: []string{\"head\", \"body\", \"table\", \"tr\", \"td\", \"html\", \"div\", \"h1\", \"p\", \"td a[href=https:\/\/example.com]\", \"dasfsdf\"},\n\t\t\t},\n\t\t}\n\t\tfor _, tt := range tests {\n\t\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\t\tdoc, err := goquery.NewDocumentFromReader(\n\t\t\t\t\tstrings.NewReader(tt.input),\n\t\t\t\t)\n\t\t\t\tif err != nil {\n\t\t\t\t\tt.Fatalf(\"failed to create document: %v\", err)\n\t\t\t\t}\n\t\t\t\tgot := GetAllSelectors(doc)\n\t\t\t\tassert.Containsf(t, got, tt.want, \"Expected %s to be found in %s\", tt.want, tt.name)\n\t\t\t})\n\t\t}\n\t})\n}\n"}],"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go","version":70}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 19:13:54 Received didChange message
[seltabl-lsp]2024/06/13 19:13:54 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go
[seltabl-lsp]2024/06/13 19:13:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors_test.go []}}
[seltabl-lsp]2024/06/13 19:13:54 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:54 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:54 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:13:55 Received message: Content-Length: 183

{"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:55 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors_test.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 19:13:55 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:13:55 Received message: Content-Length: 44

{"jsonrpc":"2.0","id":6,"method":"shutdown"}
[seltabl-lsp]2024/06/13 19:13:55 Received message (shutdown): {"jsonrpc":"2.0","id":6,"method":"shutdown"}
[seltabl-lsp]2024/06/13 19:13:55 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 19:14:15 Starting the server...
[seltabl-lsp]2024/06/13 19:14:15 Received message: Content-Length: 3587

{"method":"initialize","jsonrpc":"2.0","id":1,"params":{"rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"trace":"off","processId":495867,"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"capabilities":{"textDocument":{"diagnostic":{"dynamicRegistration":false},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"full":{"delta":true},"range":false},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"serverCancelSupport":false,"augmentsSyntaxTokens":true,"dynamicRegistration":false},"callHierarchy":{"dynamicRegistration":false},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dataSupport":true,"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":false},"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true,"dynamicRegistration":false},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"documentHighlight":{"dynamicRegistration":false},"declaration":{"linkSupport":true},"typeDefinition":{"linkSupport":true},"signatureHelp":{"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":false},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"completion":{"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]},"workspace":{"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true}}}}}
[seltabl-lsp]2024/06/13 19:14:15 Received message (initialize): {"method":"initialize","jsonrpc":"2.0","id":1,"params":{"rootUri":null,"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"trace":"off","processId":495867,"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"capabilities":{"textDocument":{"diagnostic":{"dynamicRegistration":false},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"full":{"delta":true},"range":false},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"serverCancelSupport":false,"augmentsSyntaxTokens":true,"dynamicRegistration":false},"callHierarchy":{"dynamicRegistration":false},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dataSupport":true,"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":false},"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true,"dynamicRegistration":false},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"documentHighlight":{"dynamicRegistration":false},"declaration":{"linkSupport":true},"typeDefinition":{"linkSupport":true},"signatureHelp":{"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":false},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"completion":{"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]},"workspace":{"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true}}}}}
[seltabl-lsp]2024/06/13 19:14:15 received initialize request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 44 34 112 97 114 97 109 115 34 58 123 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 44 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 125 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 112 114 111 99 101 115 115 73 100 34 58 52 57 53 56 54 55 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 110 97 109 101 34 58 123 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 44 34 114 97 110 103 101 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 104 111 118 101 114 34 58 123 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 119 105 110 100 111 119 34 58 123 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 125 125 125 125]
[seltabl-lsp]2024/06/13 19:14:15 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 19:14:15 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 19:14:15 Received message: Content-Length: 52

{"method":"initialized","jsonrpc":"2.0","params":{}}
[seltabl-lsp]2024/06/13 19:14:15 Received message (initialized): {"method":"initialized","jsonrpc":"2.0","params":{}}
[seltabl-lsp]2024/06/13 19:14:15 received initialized request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 125 125]
[seltabl-lsp]2024/06/13 19:14:15 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 19:14:15 Received message: Content-Length: 2050

{"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"languageId":"go","uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n","version":0}}}
[seltabl-lsp]2024/06/13 19:14:15 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"languageId":"go","uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n","version":0}}}
[seltabl-lsp]2024/06/13 19:14:15 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 80 97 114 116 115 32 91 93 115 116 114 105 110 103 92 110 92 116 105 102 32 116 97 103 32 58 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 41 59 32 116 97 103 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 116 97 103 41 92 110 92 116 125 92 110 92 116 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 99 108 97 115 115 80 97 114 116 115 32 58 61 32 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 92 110 92 116 92 116 102 111 114 32 95 44 32 99 108 97 115 115 80 97 114 116 32 58 61 32 114 97 110 103 101 32 99 108 97 115 115 80 97 114 116 115 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 46 92 34 43 99 108 97 115 115 80 97 114 116 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 110 97 109 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 116 121 112 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 118 97 108 117 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 115 114 99 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 104 114 101 102 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 115 101 108 101 99 116 111 114 32 58 61 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 92 34 41 92 110 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 102 111 114 32 95 44 32 115 116 114 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 105 102 32 115 116 114 32 61 61 32 115 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 101 108 101 99 116 111 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 44 34 118 101 114 115 105 111 110 34 58 48 125 125 125]
[seltabl-lsp]2024/06/13 19:14:15 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:14:15 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:25 Received message: Content-Length: 2057

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":4,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n\n"}]}}
[seltabl-lsp]2024/06/13 19:17:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":4,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n\n"}]}}
[seltabl-lsp]2024/06/13 19:17:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 80 97 114 116 115 32 91 93 115 116 114 105 110 103 92 110 92 116 105 102 32 116 97 103 32 58 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 41 59 32 116 97 103 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 116 97 103 41 92 110 92 116 125 92 110 92 116 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 99 108 97 115 115 80 97 114 116 115 32 58 61 32 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 92 110 92 116 92 116 102 111 114 32 95 44 32 99 108 97 115 115 80 97 114 116 32 58 61 32 114 97 110 103 101 32 99 108 97 115 115 80 97 114 116 115 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 46 92 34 43 99 108 97 115 115 80 97 114 116 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 110 97 109 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 116 121 112 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 118 97 108 117 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 115 114 99 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 104 114 101 102 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 115 101 108 101 99 116 111 114 32 58 61 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 92 34 41 92 110 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 102 111 114 32 95 44 32 115 116 114 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 105 102 32 115 116 114 32 61 61 32 115 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 101 108 101 99 116 111 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:25 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:25 Received message: Content-Length: 3285

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":5,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":5,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectorParts []string\n\tif tag := goquery.NodeName(s); tag != \"\" {\n\t\tselectorParts = append(selectorParts, tag)\n\t}\n\tif class, exists := s.Attr(\"class\"); exists {\n\t\tclassParts := strings.Fields(class)\n\t\tfor _, classPart := range classParts {\n\t\t\tselectorParts = append(selectorParts, \".\"+classPart)\n\t\t}\n\t}\n\tif attr, exists := s.Attr(\"name\"); exists {\n\t\tselectorParts = append(selectorParts, \"[name=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"type\"); exists {\n\t\tselectorParts = append(selectorParts, \"[type=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"placeholder\"); exists {\n\t\tselectorParts = append(selectorParts, \"[placeholder=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"value\"); exists {\n\t\tselectorParts = append(selectorParts, \"[value=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"src\"); exists {\n\t\tselectorParts = append(selectorParts, \"[src=\"+attr+\"]\")\n\t}\n\tif attr, exists := s.Attr(\"href\"); exists {\n\t\tselectorParts = append(selectorParts, \"[href=\"+attr+\"]\")\n\t}\n\tselector := strings.Join(selectorParts, \"\")\n\tfound := false\n\tstrs := []string{}\n\tfor _, str := range strs {\n\t\tif str == selector {\n\t\t\tfound = true\n\t\t\tbreak\n\t\t}\n\t}\n\tif !found {\n\t\tstrs = append(strs, selector)\n\t}\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 80 97 114 116 115 32 91 93 115 116 114 105 110 103 92 110 92 116 105 102 32 116 97 103 32 58 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 41 59 32 116 97 103 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 116 97 103 41 92 110 92 116 125 92 110 92 116 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 99 108 97 115 115 80 97 114 116 115 32 58 61 32 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 92 110 92 116 92 116 102 111 114 32 95 44 32 99 108 97 115 115 80 97 114 116 32 58 61 32 114 97 110 103 101 32 99 108 97 115 115 80 97 114 116 115 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 46 92 34 43 99 108 97 115 115 80 97 114 116 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 110 97 109 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 116 121 112 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 118 97 108 117 101 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 115 114 99 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 80 97 114 116 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 91 104 114 101 102 61 92 34 43 97 116 116 114 43 92 34 93 92 34 41 92 110 92 116 125 92 110 92 116 115 101 108 101 99 116 111 114 32 58 61 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 80 97 114 116 115 44 32 92 34 92 34 41 92 110 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 102 111 114 32 95 44 32 115 116 114 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 105 102 32 115 116 114 32 61 61 32 115 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 101 108 101 99 116 111 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:25 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:34 Received message: Content-Length: 1841

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":6,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:34 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":6,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:34 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:34 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:36 Received message: Content-Length: 1831

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":7,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":7,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:36 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:36 Received message: Content-Length: 1852

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":9,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":9,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:36 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:36 Received message: Content-Length: 178

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:17:36 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:17:36 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:17:41 Received message: Content-Length: 1859

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":11,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t\t\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:41 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":11,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t\t\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:41 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 92 116 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:41 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:42 Received message: Content-Length: 1857

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":12,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:42 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":12,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:42 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:42 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:42 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:43 Received message: Content-Length: 1912

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":13,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:43 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":13,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:43 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:43 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:43 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:43 Received message: Content-Length: 1912

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":15,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:43 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":15,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:43 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:43 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:43 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:44 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":16,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":16,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:44 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:44 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":18,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":18,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:44 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:44 Received message: Content-Length: 1993

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":19,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}j\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":19,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}j\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 106 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:44 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:44 Received message: Content-Length: 253

{"method":"textDocument\/completion","jsonrpc":"2.0","id":2,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":49,"character":3},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":2,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":49,"character":3},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:17:44 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 50 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 51 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:17:44 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:44 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:17:44 Received message (textDocument/completion) and replied:  {{2.0 0xc0003b2390} []}
[seltabl-lsp]2024/06/13 19:17:45 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":22,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:45 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":22,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t}\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:45 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:45 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:46 Received message: Content-Length: 1987

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":23,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:46 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":23,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:46 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:46 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:17:47 Received message: Content-Length: 178

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:17:47 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:17:47 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:17:51 Received message: Content-Length: 178

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:17:51 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:17:51 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:17:53 Received message: Content-Length: 1985

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":25,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:53 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":25,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:17:53 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:17:53 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:17:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:02 Received message: Content-Length: 221

{"method":"textDocument\/hover","jsonrpc":"2.0","id":3,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":24,"character":29}}}
[seltabl-lsp]2024/06/13 19:18:02 Received message (textDocument/hover): {"method":"textDocument\/hover","jsonrpc":"2.0","id":3,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":24,"character":29}}}
[seltabl-lsp]2024/06/13 19:18:02 Received hover message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 104 111 118 101 114 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 51 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 52 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 125]
[seltabl-lsp]2024/06/13 19:18:02 Received message (textDocument/didChange) and replied:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 104 111 118 101 114 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 51 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 52 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 125]
[seltabl-lsp]2024/06/13 19:18:11 Received message: Content-Length: 1981

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":26,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:11 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":26,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:11 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:11 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:11 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:13 Received message: Content-Length: 1982

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":27,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(j)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:13 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":27,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(j)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:13 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 106 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:13 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:13 Received message: Content-Length: 254

{"method":"textDocument\/completion","jsonrpc":"2.0","id":4,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":24,"character":70},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:13 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":4,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":24,"character":70},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:13 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 52 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 52 44 34 99 104 97 114 97 99 116 101 114 34 58 55 48 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:13 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:13 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:13 Received message (textDocument/completion) and replied:  {{2.0 0xc000113008} []}
[seltabl-lsp]2024/06/13 19:18:13 Received message: Content-Length: 1981

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":30,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:13 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":30,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:13 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:13 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:17 Received message: Content-Length: 1989

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":31,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":31,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:17 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:17 Received message: Content-Length: 1990

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":32,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node)\n\t\t\tj.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":32,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node)\n\t\t\tj.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 106 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:17 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:17 Received message: Content-Length: 253

{"method":"textDocument\/completion","jsonrpc":"2.0","id":5,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":4},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":5,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":4},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:17 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 53 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 52 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:17 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:17 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/completion) and replied:  {{2.0 0xc000015d48} []}
[seltabl-lsp]2024/06/13 19:18:17 Received message: Content-Length: 1989

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":35,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":35,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:17 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:18 Received message: Content-Length: 1975

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":36,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\t := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:18 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":36,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\t := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:18 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:18 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:18 Received message: Content-Length: 1976

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":37,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\td := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:18 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":37,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\td := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:18 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:18 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:18 Received message: Content-Length: 253

{"method":"textDocument\/completion","jsonrpc":"2.0","id":6,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":24,"character":4},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:18 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":6,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":24,"character":4},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:18 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 54 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 52 44 34 99 104 97 114 97 99 116 101 114 34 58 52 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:18 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:18 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:18 Received message (textDocument/completion) and replied:  {{2.0 0xc000015ea0} []}
[seltabl-lsp]2024/06/13 19:18:19 Received message: Content-Length: 1977

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":38,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdo := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":38,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdo := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:19 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:19 Received message: Content-Length: 1978

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":39,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":39,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:19 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:19 Received message: Content-Length: 1979

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":40,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdocj := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":40,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdocj := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 106 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:19 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:19 Received message: Content-Length: 1978

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":43,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":43,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\t.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:19 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:19 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:19 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:20 Received message: Content-Length: 1979

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":44,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\ts.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:20 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":44,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\ts.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:20 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:20 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:20 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:20 Received message: Content-Length: 253

{"method":"textDocument\/completion","jsonrpc":"2.0","id":7,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":4},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:20 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":7,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":4},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:20 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 55 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 52 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:20 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:20 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:20 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f2020} []}
[seltabl-lsp]2024/06/13 19:18:20 Received message: Content-Length: 1980

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":45,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsi.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:20 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":45,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsi.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:20 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:20 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:20 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:21 Received message: Content-Length: 1981

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":46,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsin.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":46,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsin.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:21 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:21 Received message: Content-Length: 1982

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":47,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsing.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":47,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsing.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:21 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:21 Received message: Content-Length: 1983

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":48,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingl.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":48,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingl.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:21 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:21 Received message: Content-Length: 1982

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":49,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsing.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":49,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsing.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:21 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:21 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":71,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":71,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:21 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:24 Received message: Content-Length: 2003

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":72,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":72,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:24 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:24 Received message: Content-Length: 2003

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":74,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":74,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:24 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:24 Received message: Content-Length: 2004

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":75,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)j\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":75,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)j\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 106 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:24 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:24 Received message: Content-Length: 254

{"method":"textDocument\/completion","jsonrpc":"2.0","id":8,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":45},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":8,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":45},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:24 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 56 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 52 53 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:24 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:24 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f2280} []}
[seltabl-lsp]2024/06/13 19:18:24 Received message: Content-Length: 2003

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":78,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":78,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:24 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:24 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:26 Received message: Content-Length: 1999

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":79,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:26 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":79,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:26 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:26 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:26 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:27 Received message: Content-Length: 2000

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":80,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(j)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":80,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(j)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 106 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:27 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:27 Received message: Content-Length: 254

{"method":"textDocument\/completion","jsonrpc":"2.0","id":9,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":40},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:27 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":9,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":40},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:27 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 57 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 52 48 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:27 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:27 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:27 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f23c8} []}
[seltabl-lsp]2024/06/13 19:18:27 Received message: Content-Length: 1999

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":83,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":83,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection()\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:27 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:28 Received message: Content-Length: 222

{"method":"textDocument\/hover","jsonrpc":"2.0","id":10,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":37}}}
[seltabl-lsp]2024/06/13 19:18:28 Received message (textDocument/hover): {"method":"textDocument\/hover","jsonrpc":"2.0","id":10,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":37}}}
[seltabl-lsp]2024/06/13 19:18:28 Received hover message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 104 111 118 101 114 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 48 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 51 55 125 125 125]
[seltabl-lsp]2024/06/13 19:18:28 Received message (textDocument/didChange) and replied:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 104 111 118 101 114 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 48 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 51 55 125 125 125]
[seltabl-lsp]2024/06/13 19:18:31 Received message: Content-Length: 2001

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":84,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\")\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:31 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":84,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\")\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:31 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:31 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:31 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:32 Received message: Content-Length: 2002

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":85,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:32 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":85,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:32 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:32 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:32 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:32 Received message: Content-Length: 2004

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":86,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:32 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":86,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:32 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:32 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:32 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:33 Received message: Content-Length: 2005

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":87,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\"j)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":87,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\"j)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:33 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 106 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:33 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:33 Received message: Content-Length: 255

{"method":"textDocument\/completion","jsonrpc":"2.0","id":11,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":43},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":11,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":25,"character":43},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:33 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 49 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 53 44 34 99 104 97 114 97 99 116 101 114 34 58 52 51 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:33 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:33 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f25a0} []}
[seltabl-lsp]2024/06/13 19:18:33 Received message: Content-Length: 2006

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":88,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\"jk)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":88,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\"jk)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:33 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 106 107 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:33 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:33 Received message: Content-Length: 2004

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":90,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":90,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:33 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:33 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:33 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:46 Received message: Content-Length: 1975

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":91,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, \n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:46 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":91,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, \n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:46 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:46 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:46 Received message: Content-Length: 1976

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":92,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, s\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:46 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":92,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, s\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:46 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:46 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:46 Received message: Content-Length: 255

{"method":"textDocument\/completion","jsonrpc":"2.0","id":12,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":34},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:46 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":12,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":34},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:46 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 50 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 54 44 34 99 104 97 114 97 99 116 101 114 34 58 51 52 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:46 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:46 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:46 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f2738} []}
[seltabl-lsp]2024/06/13 19:18:47 Received message: Content-Length: 1977

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":93,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, si\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":93,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, si\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:47 Received message: Content-Length: 1978

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":94,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, sin\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":94,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, sin\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:47 Received message: Content-Length: 1977

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":95,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, si\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":95,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, si\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:47 Received message: Content-Length: 1999

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":124,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.AttrOr()\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":124,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.AttrOr()\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 116 116 114 79 114 40 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:47 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:48 Received message: Content-Length: 1998

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":125,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.AttrOr)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:48 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":125,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.AttrOr)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:48 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 116 116 114 79 114 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:48 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:48 Received message: Content-Length: 255

{"method":"textDocument\/completion","jsonrpc":"2.0","id":13,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":54},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:48 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":13,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":54},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:48 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 51 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 54 44 34 99 104 97 114 97 99 116 101 114 34 58 53 52 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:48 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:48 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:48 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f2870} []}
[seltabl-lsp]2024/06/13 19:18:48 Received message: Content-Length: 1997

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":126,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.AttrO)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:48 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":126,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.AttrO)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:48 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 116 116 114 79 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:48 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:49 Received message: Content-Length: 1996

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":127,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.Attr)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":127,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.Attr)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 116 116 114 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:49 Received message: Content-Length: 1995

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":128,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.Att)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":128,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.Att)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 116 116 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:49 Received message: Content-Length: 1994

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":129,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.At)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":129,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.At)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 116 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:49 Received message: Content-Length: 1993

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":130,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.A)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":130,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.A)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 65 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:49 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":131,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":131,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:49 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:50 Received message: Content-Length: 1993

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":132,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.N)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:50 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":132,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.N)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:50 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 78 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:50 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:50 Received message: Content-Length: 255

{"method":"textDocument\/completion","jsonrpc":"2.0","id":14,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":49},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:50 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":14,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":49},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:18:50 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 52 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 54 44 34 99 104 97 114 97 99 116 101 114 34 58 52 57 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:18:50 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:50 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:18:50 Received message (textDocument/completion) and replied:  {{2.0 0xc0003b28f0} []}
[seltabl-lsp]2024/06/13 19:18:51 Received message: Content-Length: 1994

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":133,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.Na)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:51 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":133,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.Na)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:51 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 78 97 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:51 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:51 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:51 Received message: Content-Length: 1993

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":134,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.N)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:51 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":134,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.N)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:51 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 78 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:51 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:51 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:18:51 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":135,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:51 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":135,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:18:51 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:18:51 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:18:51 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:00 Received message: Content-Length: 1993

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":136,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.h)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:00 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":136,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.h)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:00 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 104 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:00 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:00 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:00 Received message: Content-Length: 255

{"method":"textDocument\/completion","jsonrpc":"2.0","id":15,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":49},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:19:00 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":15,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":26,"character":49},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:19:00 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 53 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 54 44 34 99 104 97 114 97 99 116 101 114 34 58 52 57 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:19:00 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:00 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:19:00 Received message (textDocument/completion) and replied:  {{2.0 0xc000113258} []}
[seltabl-lsp]2024/06/13 19:19:14 Received message: Content-Length: 1995

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":137,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.h)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n"}]}}
[seltabl-lsp]2024/06/13 19:19:14 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":137,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.h)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n"}]}}
[seltabl-lsp]2024/06/13 19:19:14 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 104 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:14 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:14 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:14 Received message: Content-Length: 3223

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":138,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.h)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:14 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":138,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tdoc := goquery.NewDocumentFromNode(node)\n\t\t\tsingleSelector := doc.FindSelection(\"*\")\n\t\t\tselectors = append(selectors, singleSelector.h)\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:14 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 100 111 99 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 100 111 99 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 92 34 42 92 34 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 46 104 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:14 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:14 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:19 Received message: Content-Length: 2474

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":139,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:19 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":139,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:19 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:19 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:19 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:24 Received message: Content-Length: 2324

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":140,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:24 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":140,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:24 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:24 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:25 Received message: Content-Length: 2010

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":141,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":141,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:25 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:25 Received message: Content-Length: 1986

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":142,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":142,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:25 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:27 Received message: Content-Length: 1897

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":143,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":143,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:27 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:27 Received message: Content-Length: 1988

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":145,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":145,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:27 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:27 Received message: Content-Length: 178

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:19:27 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:19:27 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:19:34 Received message: Content-Length: 1987

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":147,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelecto(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:34 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":147,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelecto(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:34 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 111 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:34 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:34 Received message: Content-Length: 255

{"method":"textDocument\/completion","jsonrpc":"2.0","id":16,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":43,"character":54},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:19:34 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":16,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":43,"character":54},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:19:34 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 54 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 53 52 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:19:34 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:34 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:19:34 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f2a88} []}
[seltabl-lsp]2024/06/13 19:19:35 Received message: Content-Length: 1986

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":148,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelect(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":148,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSelect(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 101 99 116 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:35 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:35 Received message: Content-Length: 1983

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":151,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSel(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":151,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorSel(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 83 101 108 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:35 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:35 Received message: Content-Length: 1979

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":155,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelecto(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":155,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelecto(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:35 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:36 Received message: Content-Length: 1980

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":156,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":156,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:36 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:36 Received message: Content-Length: 1981

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":157,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorj(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":157,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelectorj(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 106 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:36 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:19:36 Received message: Content-Length: 1980

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":160,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":160,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor i := 0; i <= j; i++ {\n\t\tfor _, node := range s.Nodes {\n\t\t\tsingleSelector := goquery.NewDocumentFromNode(node).FindSelection(node)\n\t\t\tselectors = append(selectors, singleSelector(node))\n\t\t\ts = s.Parent()\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:19:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 92 116 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 58 61 32 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 70 105 110 100 83 101 108 101 99 116 105 111 110 40 110 111 100 101 41 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:19:36 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:19:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:22:27 Received message: Content-Length: 1244

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":161,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":161,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:22:27 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:22:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:22:27 Received message: Content-Length: 1990

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":162,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":162,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 83 101 108 101 99 116 105 111 110 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:22:27 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:22:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:22:28 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":163,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":163,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:28 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 83 101 108 101 99 116 105 111 110 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:22:28 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:22:28 Received message: Content-Length: 1993

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":164,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\nj\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":164,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\nj\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:28 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 106 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 83 101 108 101 99 116 105 111 110 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:22:28 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:22:28 Received message: Content-Length: 254

{"method":"textDocument\/completion","jsonrpc":"2.0","id":17,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":34,"character":1},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","id":17,"params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"position":{"line":34,"character":1},"context":{"triggerKind":1}}}
[seltabl-lsp]2024/06/13 19:22:28 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 105 100 34 58 49 55 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 51 52 44 34 99 104 97 114 97 99 116 101 114 34 58 49 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 125]
[seltabl-lsp]2024/06/13 19:22:28 Received text document completion uri: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:22:28 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/completion) and replied:  {{2.0 0xc0002f2c20} []}
[seltabl-lsp]2024/06/13 19:22:28 Received message: Content-Length: 1992

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":167,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":167,"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstrs = append(strs, getSelectorsFromSelection(i, s))\n\t})\n\treturn strs\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(node *goquery.Selection) string {\n\tvar selector string\n\n\tif node.Is(\"id\") {\n\t\tselector = fmt.Sprintf(\"#%s\", node.AttrOr(\"id\", \"\"))\n\t} else if class, exists := node.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(node), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := node.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(node), attr)\n\t} else {\n\t\tselector = goquery.NodeName(node)\n\t}\n\n\treturn selector\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(j int, s *goquery.Selection) string {\n\tvar selectors []string\n\n\t\/\/ Iterate over the current selection and its parents\n\tfor _, node := range s.Nodes {\n\t\tfor i := 0; i <= j; i++ {\n\t\t\tselectors = append(selectors, singleSelector(goquery.NewDocumentFromNode(node).Selection))\n\t\t\ts = s.Parent()\n\t\t\tif s.Length() == 0 {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\t\/\/ Reverse the order of selectors to have the parent selectors first\n\tfor i, j := 0, len(selectors)-1; i < j; i, j = i+1, j-1 {\n\t\tselectors[i], selectors[j] = selectors[j], selectors[i]\n\t}\n\n\treturn strings.Join(selectors, \" > \")\n}\n"}]}}
[seltabl-lsp]2024/06/13 19:22:28 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 105 44 32 115 41 41 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 110 111 100 101 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 110 111 100 101 46 73 115 40 92 34 105 100 92 34 41 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 110 111 100 101 46 65 116 116 114 79 114 40 92 34 105 100 92 34 44 32 92 34 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 110 111 100 101 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 110 111 100 101 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 106 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 115 32 91 93 115 116 114 105 110 103 92 110 92 110 92 116 92 47 92 47 32 73 116 101 114 97 116 101 32 111 118 101 114 32 116 104 101 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 105 111 110 32 97 110 100 32 105 116 115 32 112 97 114 101 110 116 115 92 110 92 116 102 111 114 32 95 44 32 110 111 100 101 32 58 61 32 114 97 110 103 101 32 115 46 78 111 100 101 115 32 123 92 110 92 116 92 116 102 111 114 32 105 32 58 61 32 48 59 32 105 32 60 61 32 106 59 32 105 43 43 32 123 92 110 92 116 92 116 92 116 115 101 108 101 99 116 111 114 115 32 61 32 97 112 112 101 110 100 40 115 101 108 101 99 116 111 114 115 44 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 103 111 113 117 101 114 121 46 78 101 119 68 111 99 117 109 101 110 116 70 114 111 109 78 111 100 101 40 110 111 100 101 41 46 83 101 108 101 99 116 105 111 110 41 41 92 110 92 116 92 116 92 116 115 32 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 116 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 92 110 92 110 92 116 92 47 92 47 32 82 101 118 101 114 115 101 32 116 104 101 32 111 114 100 101 114 32 111 102 32 115 101 108 101 99 116 111 114 115 32 116 111 32 104 97 118 101 32 116 104 101 32 112 97 114 101 110 116 32 115 101 108 101 99 116 111 114 115 32 102 105 114 115 116 92 110 92 116 102 111 114 32 105 44 32 106 32 58 61 32 48 44 32 108 101 110 40 115 101 108 101 99 116 111 114 115 41 45 49 59 32 105 32 60 32 106 59 32 105 44 32 106 32 61 32 105 43 49 44 32 106 45 49 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 115 91 105 93 44 32 115 101 108 101 99 116 111 114 115 91 106 93 32 61 32 115 101 108 101 99 116 111 114 115 91 106 93 44 32 115 101 108 101 99 116 111 114 115 91 105 93 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 101 108 101 99 116 111 114 115 44 32 92 34 32 62 32 92 34 41 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 19:22:28 Changed: file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 19:22:28 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 19:22:29 Received message: Content-Length: 178

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:22:29 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:22:29 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:22:37 Received message: Content-Length: 178

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:22:37 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 19:22:37 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 19:22:37 Received message: Content-Length: 45

{"method":"shutdown","jsonrpc":"2.0","id":18}
[seltabl-lsp]2024/06/13 19:22:37 Received message (shutdown): {"method":"shutdown","jsonrpc":"2.0","id":18}
[seltabl-lsp]2024/06/13 19:22:37 Unknown method:  shutdown
