[seltabl-lsp]2024/06/15 11:32:04 Starting the server...
[seltabl-lsp]2024/06/15 11:32:04 Received message: Content-Length: 3587

{"method":"initialize","id":1,"params":{"rootPath":null,"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"capabilities":{"workspace":{"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"textDocument":{"typeDefinition":{"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]},"dataSupport":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"declaration":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"multilineTokenSupport":false,"dynamicRegistration":false,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"overlappingTokenSupport":true,"augmentsSyntaxTokens":true,"serverCancelSupport":false},"synchronization":{"willSaveWaitUntil":true,"didSave":true,"dynamicRegistration":false,"willSave":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"dataSupport":true},"diagnostic":{"dynamicRegistration":false},"completion":{"dynamicRegistration":false,"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"dynamicRegistration":false},"formatting":{"dynamicRegistration":true}}},"processId":864137,"workDoneToken":"1","workspaceFolders":null,"trace":"off"},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:04 Received message (initialize): {"method":"initialize","id":1,"params":{"rootPath":null,"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"capabilities":{"workspace":{"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true},"applyEdit":true,"workspaceFolders":true,"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false}},"general":{"positionEncodings":["utf-16"]},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"textDocument":{"typeDefinition":{"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]},"dataSupport":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"declaration":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"semanticTokens":{"multilineTokenSupport":false,"dynamicRegistration":false,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"overlappingTokenSupport":true,"augmentsSyntaxTokens":true,"serverCancelSupport":false},"synchronization":{"willSaveWaitUntil":true,"didSave":true,"dynamicRegistration":false,"willSave":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"dataSupport":true},"diagnostic":{"dynamicRegistration":false},"completion":{"dynamicRegistration":false,"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"signatureHelp":{"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true},"dynamicRegistration":false},"formatting":{"dynamicRegistration":true}}},"processId":864137,"workDoneToken":"1","workspaceFolders":null,"trace":"off"},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:04 received initialize request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 105 100 34 58 49 44 34 112 97 114 97 109 115 34 58 123 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 44 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 125 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 119 111 114 107 115 112 97 99 101 34 58 123 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 115 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 101 110 97 109 101 34 58 123 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 125 44 34 104 111 118 101 114 34 58 123 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 125 125 44 34 112 114 111 99 101 115 115 73 100 34 58 56 54 52 49 51 55 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/15 11:32:04 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/15 11:32:04 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/15 11:32:06 Received message: Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:06 Received message (initialized): {"method":"initialized","params":{},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:06 received initialized request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 112 97 114 97 109 115 34 58 123 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/15 11:32:06 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/15 11:32:06 Received message: Content-Length: 3767

{"method":"textDocument\/didOpen","params":{"textDocument":{"version":0,"uri":"file:\/\/\/home\/conner\/.config\/nvim\/init.lua","text":"--@module \"nvim\"\n---@author Conner Ohnesorge\n---@license WTFPL\n--  (otherwise wrong leader will be used)\nvim.g.mapleader = \"\\\\\"\nvim.g.maplocalleader = \" \"\nlocal lazypath = vim.fn.stdpath \"data\" .. \"\/lazy\/lazy.nvim\"\n\nif not (vim.uv or vim.loop).fs_stat(lazypath) then\n\tvim.fn.system {\n\t\t\"git\",\n\t\t\"clone\",\n\t\t\"--filter=blob:none\",\n\t\t\"https:\/\/github.com\/folke\/lazy.nvim.git\",\n\t\t\"--branch=stable\",\n\t\tlazypath\n\t}\nend\nvim.opt.rtp:prepend(vim.env.LAZY or lazypath)\nrequire(\"lazy\").setup {\n\t{\n\t\t\"folke\/neodev.nvim\",\n\t\tinit = function()\n\t\t\trequire(\"neodev\").setup()\n\t\tend,\n\t},\n\t\"tpope\/vim-sleuth\",\n\t{\n\t\timport = \"plugins\",\n\t},\n}\n\nrequire \"config.options\"\nrequire \"misc.ts-config\"\n\nlocal highlight_group = vim.api.nvim_create_augroup(\n\t\"YankHighlight\",\n\t{ clear = true }\n)\n\nvim.api.nvim_create_autocmd(\"TextYankPost\", {\n\tcallback = function()\n\t\tvim.highlight.on_yank()\n\tend,\n\tgroup = highlight_group,\n\tpattern = \"*\",\n})\nvim.cmd \"syntax on\"\nvim.cmd \"set wrap!\"\nrequire \"keymaps.visual-keymaps\"\nrequire \"keymaps.insert-keymaps\"\nrequire \"keymaps.normal-keymaps\"\nvim.o.statusline = vim.o.statusline .. \"%F\"\nvim.cmd \"set rtp^='\/home\/conner\/.opam\/default\/share\/ocp-indent\/vim'\"\nrequire \"misc.markdown\"\n-- Register the .templ filetype\nvim.filetype.add { extension = { templ = \"templ\", } }\nvim.treesitter.language.register(\"templ\", \"templ\")\n\n-- -- Format SQL files with sleek\n-- vim.api.nvim_create_autocmd(\"BufWritePre\", {\n--         pattern = \"*.sql\",\n--         group = vim.api.nvim_create_augroup(\"FormatSQL\", { clear = true }),\n--         callback = function()\n--                 local content = vim.api.nvim_buf_get_lines(0, 0, -1, false)\n--                 local bufr_content = table.concat(content, \"\\n\")\n--                 local cmd = \"echo \\\"\" .. bufr_content .. \"\\\" | sleek -i 4\"\n--                 local handle, err = io.popen(cmd, \"r\")\n--                 if handle then\n--                         local result = handle:read(\"*a\")\n--                         handle:close()\n--                         local active_file = io.open(vim.fn.expand \"%\", \"w\")\n--                         if not active_file then\n--                                 print(\"Failed to open file for writing\")\n--                                 return\n--                         end\n--                         active_file:write(result)\n--                         active_file:close()\n--                         vim.cmd \"e!\"\n--                 else\n--                         print(\"Error running command:\", err)\n--                 end\n--         end,\n-- })\n\n-- vim.cmd \"set list\"\n-- vim.cmd(\"set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<\")\n\nvim.api.nvim_create_autocmd({ 'BufEnter', 'BufNewFile' }, {\n  pattern = '*.db.sql',\n  command = 'setlocal buftype=nofile',\n})\n\nlocal function clear_lsp_log()\n    local log_path = vim.fn.expand(\"~\/.local\/state\/nvim\/lsp.log\")\n    local file = io.open(log_path, \"w\")\n    if file then\n        file:close()\n        print(\"lsp.log cleared.\")\n    else\n        print(\"Error: Could not open lsp.log.\")\n    end\nend\n\n-- Registering the command\nvim.api.nvim_create_user_command('LspLogClear', clear_lsp_log, {})\n\nvim.api.nvim_create_user_command(\"Cppath\", function()\n    local path = vim.fn.expand(\"%:p\")\n    vim.fn.setreg(\"+\", path)\n    vim.notify('Copied \"' .. path .. '\" to the clipboard!')\nend, {})\n\n\n","languageId":"lua"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:06 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","params":{"textDocument":{"version":0,"uri":"file:\/\/\/home\/conner\/.config\/nvim\/init.lua","text":"--@module \"nvim\"\n---@author Conner Ohnesorge\n---@license WTFPL\n--  (otherwise wrong leader will be used)\nvim.g.mapleader = \"\\\\\"\nvim.g.maplocalleader = \" \"\nlocal lazypath = vim.fn.stdpath \"data\" .. \"\/lazy\/lazy.nvim\"\n\nif not (vim.uv or vim.loop).fs_stat(lazypath) then\n\tvim.fn.system {\n\t\t\"git\",\n\t\t\"clone\",\n\t\t\"--filter=blob:none\",\n\t\t\"https:\/\/github.com\/folke\/lazy.nvim.git\",\n\t\t\"--branch=stable\",\n\t\tlazypath\n\t}\nend\nvim.opt.rtp:prepend(vim.env.LAZY or lazypath)\nrequire(\"lazy\").setup {\n\t{\n\t\t\"folke\/neodev.nvim\",\n\t\tinit = function()\n\t\t\trequire(\"neodev\").setup()\n\t\tend,\n\t},\n\t\"tpope\/vim-sleuth\",\n\t{\n\t\timport = \"plugins\",\n\t},\n}\n\nrequire \"config.options\"\nrequire \"misc.ts-config\"\n\nlocal highlight_group = vim.api.nvim_create_augroup(\n\t\"YankHighlight\",\n\t{ clear = true }\n)\n\nvim.api.nvim_create_autocmd(\"TextYankPost\", {\n\tcallback = function()\n\t\tvim.highlight.on_yank()\n\tend,\n\tgroup = highlight_group,\n\tpattern = \"*\",\n})\nvim.cmd \"syntax on\"\nvim.cmd \"set wrap!\"\nrequire \"keymaps.visual-keymaps\"\nrequire \"keymaps.insert-keymaps\"\nrequire \"keymaps.normal-keymaps\"\nvim.o.statusline = vim.o.statusline .. \"%F\"\nvim.cmd \"set rtp^='\/home\/conner\/.opam\/default\/share\/ocp-indent\/vim'\"\nrequire \"misc.markdown\"\n-- Register the .templ filetype\nvim.filetype.add { extension = { templ = \"templ\", } }\nvim.treesitter.language.register(\"templ\", \"templ\")\n\n-- -- Format SQL files with sleek\n-- vim.api.nvim_create_autocmd(\"BufWritePre\", {\n--         pattern = \"*.sql\",\n--         group = vim.api.nvim_create_augroup(\"FormatSQL\", { clear = true }),\n--         callback = function()\n--                 local content = vim.api.nvim_buf_get_lines(0, 0, -1, false)\n--                 local bufr_content = table.concat(content, \"\\n\")\n--                 local cmd = \"echo \\\"\" .. bufr_content .. \"\\\" | sleek -i 4\"\n--                 local handle, err = io.popen(cmd, \"r\")\n--                 if handle then\n--                         local result = handle:read(\"*a\")\n--                         handle:close()\n--                         local active_file = io.open(vim.fn.expand \"%\", \"w\")\n--                         if not active_file then\n--                                 print(\"Failed to open file for writing\")\n--                                 return\n--                         end\n--                         active_file:write(result)\n--                         active_file:close()\n--                         vim.cmd \"e!\"\n--                 else\n--                         print(\"Error running command:\", err)\n--                 end\n--         end,\n-- })\n\n-- vim.cmd \"set list\"\n-- vim.cmd(\"set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<\")\n\nvim.api.nvim_create_autocmd({ 'BufEnter', 'BufNewFile' }, {\n  pattern = '*.db.sql',\n  command = 'setlocal buftype=nofile',\n})\n\nlocal function clear_lsp_log()\n    local log_path = vim.fn.expand(\"~\/.local\/state\/nvim\/lsp.log\")\n    local file = io.open(log_path, \"w\")\n    if file then\n        file:close()\n        print(\"lsp.log cleared.\")\n    else\n        print(\"Error: Could not open lsp.log.\")\n    end\nend\n\n-- Registering the command\nvim.api.nvim_create_user_command('LspLogClear', clear_lsp_log, {})\n\nvim.api.nvim_create_user_command(\"Cppath\", function()\n    local path = vim.fn.expand(\"%:p\")\n    vim.fn.setreg(\"+\", path)\n    vim.notify('Copied \"' .. path .. '\" to the clipboard!')\nend, {})\n\n\n","languageId":"lua"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:06 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///home/conner/.config/nvim/init.lua []}}
[seltabl-lsp]2024/06/15 11:32:08 Received message: Content-Length: 44

{"method":"shutdown","id":2,"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:08 Received message (shutdown): {"method":"shutdown","id":2,"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/15 11:32:08 Unknown method:  shutdown
