[seltabl-lsp]2024/06/13 19:50:59 Starting the server...
[seltabl-lsp]2024/06/13 19:50:59 Received message: Content-Length: 3587

{"id":1,"method":"initialize","params":{"workspaceFolders":null,"rootPath":null,"trace":"off","rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":528362,"workDoneToken":"1","capabilities":{"general":{"positionEncodings":["utf-16"]},"workspace":{"applyEdit":true,"workspaceFolders":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"didChangeWatchedFiles":{"dynamicRegistration":false,"relativePatternSupport":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true}},"textDocument":{"completion":{"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"completionItem":{"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false}},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true,"isPreferredSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"definition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true},"declaration":{"linkSupport":true},"typeDefinition":{"linkSupport":true},"formatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"synchronization":{"willSave":true,"didSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"semanticTokens":{"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"formats":["relative"],"requests":{"full":{"delta":true},"range":false}}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true}}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:50:59 Received message (initialize): {"id":1,"method":"initialize","params":{"workspaceFolders":null,"rootPath":null,"trace":"off","rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":528362,"workDoneToken":"1","capabilities":{"general":{"positionEncodings":["utf-16"]},"workspace":{"applyEdit":true,"workspaceFolders":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"didChangeWatchedFiles":{"dynamicRegistration":false,"relativePatternSupport":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"configuration":true,"inlayHint":{"refreshSupport":true},"semanticTokens":{"refreshSupport":true}},"textDocument":{"completion":{"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"completionItem":{"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false}},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]}},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true,"isPreferredSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"definition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true},"declaration":{"linkSupport":true},"typeDefinition":{"linkSupport":true},"formatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"synchronization":{"willSave":true,"didSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"semanticTokens":{"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"formats":["relative"],"requests":{"full":{"delta":true},"range":false}}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true}}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:50:59 received initialize request:  [123 34 105 100 34 58 49 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 112 97 114 97 109 115 34 58 123 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 44 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 125 44 34 112 114 111 99 101 115 115 73 100 34 58 53 50 56 51 54 50 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 115 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 114 101 110 97 109 101 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 125 44 34 104 111 118 101 114 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 44 34 114 97 110 103 101 34 58 102 97 108 115 101 125 125 125 44 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 125 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:50:59 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 19:50:59 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 19:50:59 Received message: Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:50:59 Received message (initialized): {"method":"initialized","params":{},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:50:59 received initialized request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 112 97 114 97 109 115 34 58 123 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:50:59 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 19:50:59 Received message: Content-Length: 1070

{"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:50:59 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","uri":"file:\/\/\/run\/media\/conner\/source\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 19:50:59 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 114 117 110 92 47 109 101 100 105 97 92 47 99 111 110 110 101 114 92 47 115 111 117 114 99 101 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 19:50:59 Opened: file:///run/media/conner/source/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 19:50:59 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///run/media/conner/source/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:11:27 Starting the server...
[seltabl-lsp]2024/06/13 20:36:41 Starting the server...
[seltabl-lsp]2024/06/13 20:36:41 Received message: Content-Length: 3585

{"method":"initialize","id":1,"jsonrpc":"2.0","params":{"processId":36026,"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"trace":"off","rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"capabilities":{"textDocument":{"completion":{"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"formatting":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"]},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"dataSupport":true,"tagSupport":{"valueSet":[1,2]}},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"isPreferredSupport":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"documentHighlight":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"synchronization":{"dynamicRegistration":false,"willSaveWaitUntil":true,"didSave":true,"willSave":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentSymbol":{"dynamicRegistration":false,"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"references":{"dynamicRegistration":false},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"typeDefinition":{"linkSupport":true},"declaration":{"linkSupport":true}},"general":{"positionEncodings":["utf-16"]},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"workspace":{"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"inlayHint":{"refreshSupport":true},"configuration":true,"semanticTokens":{"refreshSupport":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true}}}}}
[seltabl-lsp]2024/06/13 20:36:41 Received message (initialize): {"method":"initialize","id":1,"jsonrpc":"2.0","params":{"processId":36026,"workDoneToken":"1","workspaceFolders":null,"rootPath":null,"trace":"off","rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"capabilities":{"textDocument":{"completion":{"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"definition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"linkSupport":true},"formatting":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"]},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"dataSupport":true,"tagSupport":{"valueSet":[1,2]}},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"isPreferredSupport":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"documentHighlight":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"synchronization":{"dynamicRegistration":false,"willSaveWaitUntil":true,"didSave":true,"willSave":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentSymbol":{"dynamicRegistration":false,"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"references":{"dynamicRegistration":false},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"typeDefinition":{"linkSupport":true},"declaration":{"linkSupport":true}},"general":{"positionEncodings":["utf-16"]},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"workspace":{"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"inlayHint":{"refreshSupport":true},"configuration":true,"semanticTokens":{"refreshSupport":true},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true}}}}}
[seltabl-lsp]2024/06/13 20:36:41 received initialize request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 105 100 34 58 49 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 112 114 111 99 101 115 115 73 100 34 58 51 54 48 50 54 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 44 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 125 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 125 44 34 104 111 118 101 114 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 125 44 34 114 101 110 97 109 101 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 115 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 125 125 125]
[seltabl-lsp]2024/06/13 20:36:41 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 20:36:41 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 20:36:43 Received message: Content-Length: 52

{"method":"initialized","params":{},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:36:43 Received message (initialized): {"method":"initialized","params":{},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:36:43 received initialized request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 112 97 114 97 109 115 34 58 123 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:36:43 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 20:36:43 Received message: Content-Length: 1077

{"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:36:43 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:36:43 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:36:43 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:36:43 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:09 Received message: Content-Length: 1088

{"method":"textDocument\/didChange","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:09 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:09 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:09 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:09 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:09 Received message: Content-Length: 1090

{"method":"textDocument\/didChange","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:09 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:09 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 47 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:09 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:09 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:09 Received message: Content-Length: 1092

{"method":"textDocument\/didChange","params":{"textDocument":{"version":6,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:09 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":6,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:09 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 47 92 47 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:09 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:09 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:11 Received message: Content-Length: 1093

{"method":"textDocument\/didChange","params":{"textDocument":{"version":7,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ \n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:11 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":7,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ \n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:11 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:11 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:11 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:12 Received message: Content-Length: 241

{"method":"textDocument\/completion","id":2,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"context":{"triggerKind":1},"position":{"line":19,"character":5}}}
[seltabl-lsp]2024/06/13 20:37:12 Received message (textDocument/completion): {"method":"textDocument\/completion","id":2,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"context":{"triggerKind":1},"position":{"line":19,"character":5}}}
[seltabl-lsp]2024/06/13 20:37:12 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 50 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 57 44 34 99 104 97 114 97 99 116 101 114 34 58 53 125 125 125]
[seltabl-lsp]2024/06/13 20:37:12 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:13 Received message (textDocument/completion) and replied:  {{2.0 0x140001c4810} [{Neovim (BTW) Very cool editor Fun to watch in videos. Don't forget to like & subscribe to streamers using it :)} {html from: https://stats.ncaa.org/game_upload/team_codes A selector for the html} {html head from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head} {html head title from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head title} {html head [name=csrf-param] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head [name=csrf-param]} {html head [name=csrf-token] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head [name=csrf-token]} {html body from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body} {html body #contentArea from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea} {html body #contentArea table from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table} {html body #contentArea table tbody from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody} {html body #contentArea table tbody tr.heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.heading} {html body #contentArea table tbody tr.heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.heading td} {html body #contentArea table tbody tr.grey_heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.grey_heading} {html body #contentArea table tbody tr.grey_heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.grey_heading td} {html body #contentArea table tbody tr.row_even from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_even} {html body #contentArea table tbody tr.row_even td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_even td} {html body #contentArea table tbody tr.row_odd from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_odd} {html body #contentArea table tbody tr.row_odd td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_odd td} {html body #footer from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer} {html body #footer div from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div} {html body #footer div span from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div span} {html body #footer div span [href=http://web1.ncaa.org/web_files/terms_and_conditions.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div span [href=http://web1.ncaa.org/web_files/terms_and_conditions.html]} {html body #footer div span [href=http://web1.ncaa.org/web_files/privacy.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div span [href=http://web1.ncaa.org/web_files/privacy.html]}]}
[seltabl-lsp]2024/06/13 20:37:44 Received message: Content-Length: 1094

{"method":"textDocument\/didChange","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ j\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ j\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 47 92 47 32 106 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:44 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:45 Received message: Content-Length: 1095

{"method":"textDocument\/didChange","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ jk\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:45 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ jk\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:45 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 47 92 47 32 106 107 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:45 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:45 Received message: Content-Length: 1094

{"method":"textDocument\/didChange","params":{"textDocument":{"version":11,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ \n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:45 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":11,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\t\/\/ \n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:45 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:45 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:46 Received message: Content-Length: 1083

{"method":"textDocument\/didChange","params":{"textDocument":{"version":12,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:46 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":12,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:46 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:46 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:37:46 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:37:50 Received message: Content-Length: 2543

{"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go","text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:50 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go","text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:50 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 47 114 111 111 116 46 103 111 34 44 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 99 109 100 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 98 117 102 105 111 92 34 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 105 111 92 34 92 110 92 116 92 34 108 111 103 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 97 110 97 108 121 115 105 115 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 114 112 99 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 112 102 49 51 92 47 99 111 98 114 97 92 34 92 110 41 92 110 92 110 92 47 92 47 32 69 120 101 99 117 116 101 32 114 117 110 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 92 110 102 117 110 99 32 69 120 101 99 117 116 101 40 41 32 101 114 114 111 114 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 114 111 111 116 67 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 120 101 99 117 116 101 32 114 111 111 116 32 99 111 109 109 97 110 100 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 119 114 105 116 101 82 101 115 112 111 110 115 101 32 119 114 105 116 101 115 32 97 32 109 101 115 115 97 103 101 32 116 111 32 116 104 101 32 119 114 105 116 101 114 92 110 102 117 110 99 32 119 114 105 116 101 82 101 115 112 111 110 115 101 40 119 114 105 116 101 114 32 105 111 46 87 114 105 116 101 114 44 32 109 115 103 32 97 110 121 41 32 101 114 114 111 114 32 123 92 110 92 116 114 101 112 108 121 44 32 101 114 114 32 58 61 32 114 112 99 46 69 110 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 110 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 115 44 32 101 114 114 32 58 61 32 119 114 105 116 101 114 46 87 114 105 116 101 40 91 93 98 121 116 101 40 114 101 112 108 121 41 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 105 102 32 114 101 115 32 33 61 32 108 101 110 40 114 101 112 108 121 41 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 97 108 108 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 114 111 111 116 67 109 100 32 105 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 118 97 114 32 114 111 111 116 67 109 100 32 61 32 38 99 111 98 114 97 46 67 111 109 109 97 110 100 123 92 110 92 116 85 115 101 58 32 32 32 92 34 115 101 108 116 97 98 108 45 108 115 112 92 34 44 32 92 47 92 47 32 116 104 101 32 110 97 109 101 32 111 102 32 116 104 101 32 99 111 109 109 97 110 100 92 110 92 116 83 104 111 114 116 58 32 92 34 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 92 34 44 92 110 92 116 76 111 110 103 58 32 96 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 46 92 110 92 110 96 44 92 110 92 116 82 117 110 69 58 32 102 117 110 99 40 99 109 100 32 42 99 111 98 114 97 46 67 111 109 109 97 110 100 44 32 97 114 103 115 32 91 93 115 116 114 105 110 103 41 32 101 114 114 111 114 32 123 92 110 92 116 92 116 108 111 103 103 101 114 32 58 61 32 103 101 116 76 111 103 103 101 114 40 92 34 46 92 47 115 101 108 116 97 98 108 46 108 111 103 92 34 41 92 110 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 108 110 40 92 34 83 116 97 114 116 105 110 103 32 116 104 101 32 115 101 114 118 101 114 46 46 46 92 34 41 92 110 92 116 92 116 115 99 97 110 110 101 114 32 58 61 32 98 117 102 105 111 46 78 101 119 83 99 97 110 110 101 114 40 111 115 46 83 116 100 105 110 41 92 110 92 116 92 116 115 99 97 110 110 101 114 46 83 112 108 105 116 40 114 112 99 46 83 112 108 105 116 41 92 110 92 116 92 116 115 116 97 116 101 32 58 61 32 97 110 97 108 121 115 105 115 46 78 101 119 83 116 97 116 101 40 41 92 110 92 110 92 116 92 116 102 111 114 32 115 99 97 110 110 101 114 46 83 99 97 110 40 41 32 123 92 110 92 116 92 116 92 116 109 115 103 32 58 61 32 115 99 97 110 110 101 114 46 66 121 116 101 115 40 41 92 110 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 82 101 99 101 105 118 101 100 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 109 115 103 41 92 110 92 116 92 116 92 116 109 101 116 104 111 100 44 32 99 111 110 116 101 110 116 44 32 101 114 114 32 58 61 32 114 112 99 46 68 101 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 100 101 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 101 114 114 32 61 32 104 97 110 100 108 101 77 101 115 115 97 103 101 40 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 44 92 110 92 116 92 116 92 116 92 116 111 115 46 83 116 100 111 117 116 44 92 110 92 116 92 116 92 116 92 116 38 115 116 97 116 101 44 92 110 92 116 92 116 92 116 92 116 109 101 116 104 111 100 44 92 110 92 116 92 116 92 116 92 116 99 111 110 116 101 110 116 44 92 110 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 104 97 110 100 108 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 92 116 114 101 116 117 114 110 32 110 105 108 92 110 92 116 125 44 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 76 111 103 103 101 114 32 114 101 116 117 114 110 115 32 97 32 108 111 103 103 101 114 32 116 104 97 116 32 119 114 105 116 101 115 32 116 111 32 97 32 102 105 108 101 92 110 102 117 110 99 32 103 101 116 76 111 103 103 101 114 40 102 105 108 101 78 97 109 101 32 115 116 114 105 110 103 41 32 42 108 111 103 46 76 111 103 103 101 114 32 123 92 110 92 116 108 111 103 70 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 110 92 116 92 116 102 105 108 101 78 97 109 101 44 92 110 92 116 92 116 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 92 110 92 116 92 116 48 54 54 54 44 92 110 92 116 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 108 111 103 46 70 97 116 97 108 40 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 108 111 103 46 78 101 119 40 108 111 103 70 105 108 101 44 32 92 34 91 115 101 108 116 97 98 108 45 108 115 112 93 92 34 44 32 108 111 103 46 76 115 116 100 70 108 97 103 115 41 92 110 125 92 110 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:50 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go
[seltabl-lsp]2024/06/13 20:37:50 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go []}}
[seltabl-lsp]2024/06/13 20:37:53 Received message: Content-Length: 2559

{"method":"textDocument\/didChange","params":{"textDocument":{"version":3,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"},"contentChanges":[{"text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\t\/\/ \n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:53 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":3,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"},"contentChanges":[{"text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\t\/\/ \n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:53 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 47 114 111 111 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 99 109 100 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 98 117 102 105 111 92 34 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 105 111 92 34 92 110 92 116 92 34 108 111 103 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 97 110 97 108 121 115 105 115 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 114 112 99 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 112 102 49 51 92 47 99 111 98 114 97 92 34 92 110 41 92 110 92 110 92 47 92 47 32 69 120 101 99 117 116 101 32 114 117 110 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 92 110 102 117 110 99 32 69 120 101 99 117 116 101 40 41 32 101 114 114 111 114 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 114 111 111 116 67 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 120 101 99 117 116 101 32 114 111 111 116 32 99 111 109 109 97 110 100 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 119 114 105 116 101 82 101 115 112 111 110 115 101 32 119 114 105 116 101 115 32 97 32 109 101 115 115 97 103 101 32 116 111 32 116 104 101 32 119 114 105 116 101 114 92 110 102 117 110 99 32 119 114 105 116 101 82 101 115 112 111 110 115 101 40 119 114 105 116 101 114 32 105 111 46 87 114 105 116 101 114 44 32 109 115 103 32 97 110 121 41 32 101 114 114 111 114 32 123 92 110 92 116 114 101 112 108 121 44 32 101 114 114 32 58 61 32 114 112 99 46 69 110 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 110 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 115 44 32 101 114 114 32 58 61 32 119 114 105 116 101 114 46 87 114 105 116 101 40 91 93 98 121 116 101 40 114 101 112 108 121 41 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 105 102 32 114 101 115 32 33 61 32 108 101 110 40 114 101 112 108 121 41 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 97 108 108 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 114 111 111 116 67 109 100 32 105 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 118 97 114 32 114 111 111 116 67 109 100 32 61 32 38 99 111 98 114 97 46 67 111 109 109 97 110 100 123 92 110 92 116 85 115 101 58 32 32 32 92 34 115 101 108 116 97 98 108 45 108 115 112 92 34 44 32 92 47 92 47 32 116 104 101 32 110 97 109 101 32 111 102 32 116 104 101 32 99 111 109 109 97 110 100 92 110 92 116 83 104 111 114 116 58 32 92 34 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 92 34 44 92 110 92 116 76 111 110 103 58 32 96 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 46 92 110 92 110 96 44 92 110 92 116 82 117 110 69 58 32 102 117 110 99 40 99 109 100 32 42 99 111 98 114 97 46 67 111 109 109 97 110 100 44 32 97 114 103 115 32 91 93 115 116 114 105 110 103 41 32 101 114 114 111 114 32 123 92 110 92 116 92 116 108 111 103 103 101 114 32 58 61 32 103 101 116 76 111 103 103 101 114 40 92 34 46 92 47 115 101 108 116 97 98 108 46 108 111 103 92 34 41 92 110 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 108 110 40 92 34 83 116 97 114 116 105 110 103 32 116 104 101 32 115 101 114 118 101 114 46 46 46 92 34 41 92 110 92 116 92 116 115 99 97 110 110 101 114 32 58 61 32 98 117 102 105 111 46 78 101 119 83 99 97 110 110 101 114 40 111 115 46 83 116 100 105 110 41 92 110 92 116 92 116 115 99 97 110 110 101 114 46 83 112 108 105 116 40 114 112 99 46 83 112 108 105 116 41 92 110 92 116 92 116 115 116 97 116 101 32 58 61 32 97 110 97 108 121 115 105 115 46 78 101 119 83 116 97 116 101 40 41 92 110 92 110 92 116 92 116 102 111 114 32 115 99 97 110 110 101 114 46 83 99 97 110 40 41 32 123 92 110 92 116 92 116 92 116 109 115 103 32 58 61 32 115 99 97 110 110 101 114 46 66 121 116 101 115 40 41 92 110 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 82 101 99 101 105 118 101 100 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 109 115 103 41 92 110 92 116 92 116 92 116 109 101 116 104 111 100 44 32 99 111 110 116 101 110 116 44 32 101 114 114 32 58 61 32 114 112 99 46 68 101 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 100 101 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 101 114 114 32 61 32 104 97 110 100 108 101 77 101 115 115 97 103 101 40 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 44 92 110 92 116 92 116 92 116 92 116 111 115 46 83 116 100 111 117 116 44 92 110 92 116 92 116 92 116 92 116 38 115 116 97 116 101 44 92 110 92 116 92 116 92 116 92 116 109 101 116 104 111 100 44 92 110 92 116 92 116 92 116 92 116 99 111 110 116 101 110 116 44 92 110 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 104 97 110 100 108 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 92 116 114 101 116 117 114 110 32 110 105 108 92 110 92 116 125 44 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 76 111 103 103 101 114 32 114 101 116 117 114 110 115 32 97 32 108 111 103 103 101 114 32 116 104 97 116 32 119 114 105 116 101 115 32 116 111 32 97 32 102 105 108 101 92 110 102 117 110 99 32 103 101 116 76 111 103 103 101 114 40 102 105 108 101 78 97 109 101 32 115 116 114 105 110 103 41 32 42 108 111 103 46 76 111 103 103 101 114 32 123 92 110 92 116 108 111 103 70 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 110 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 102 105 108 101 78 97 109 101 44 92 110 92 116 92 116 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 92 110 92 116 92 116 48 54 54 54 44 92 110 92 116 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 108 111 103 46 70 97 116 97 108 40 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 108 111 103 46 78 101 119 40 108 111 103 70 105 108 101 44 32 92 34 91 115 101 108 116 97 98 108 45 108 115 112 93 92 34 44 32 108 111 103 46 76 115 116 100 70 108 97 103 115 41 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:53 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go
[seltabl-lsp]2024/06/13 20:37:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go []}}
[seltabl-lsp]2024/06/13 20:37:54 Received message: Content-Length: 2548

{"method":"textDocument\/didChange","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"},"contentChanges":[{"text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:54 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"},"contentChanges":[{"text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:54 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 47 114 111 111 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 99 109 100 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 98 117 102 105 111 92 34 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 105 111 92 34 92 110 92 116 92 34 108 111 103 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 97 110 97 108 121 115 105 115 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 114 112 99 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 112 102 49 51 92 47 99 111 98 114 97 92 34 92 110 41 92 110 92 110 92 47 92 47 32 69 120 101 99 117 116 101 32 114 117 110 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 92 110 102 117 110 99 32 69 120 101 99 117 116 101 40 41 32 101 114 114 111 114 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 114 111 111 116 67 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 120 101 99 117 116 101 32 114 111 111 116 32 99 111 109 109 97 110 100 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 119 114 105 116 101 82 101 115 112 111 110 115 101 32 119 114 105 116 101 115 32 97 32 109 101 115 115 97 103 101 32 116 111 32 116 104 101 32 119 114 105 116 101 114 92 110 102 117 110 99 32 119 114 105 116 101 82 101 115 112 111 110 115 101 40 119 114 105 116 101 114 32 105 111 46 87 114 105 116 101 114 44 32 109 115 103 32 97 110 121 41 32 101 114 114 111 114 32 123 92 110 92 116 114 101 112 108 121 44 32 101 114 114 32 58 61 32 114 112 99 46 69 110 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 110 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 115 44 32 101 114 114 32 58 61 32 119 114 105 116 101 114 46 87 114 105 116 101 40 91 93 98 121 116 101 40 114 101 112 108 121 41 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 105 102 32 114 101 115 32 33 61 32 108 101 110 40 114 101 112 108 121 41 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 97 108 108 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 114 111 111 116 67 109 100 32 105 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 118 97 114 32 114 111 111 116 67 109 100 32 61 32 38 99 111 98 114 97 46 67 111 109 109 97 110 100 123 92 110 92 116 85 115 101 58 32 32 32 92 34 115 101 108 116 97 98 108 45 108 115 112 92 34 44 32 92 47 92 47 32 116 104 101 32 110 97 109 101 32 111 102 32 116 104 101 32 99 111 109 109 97 110 100 92 110 92 116 83 104 111 114 116 58 32 92 34 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 92 34 44 92 110 92 116 76 111 110 103 58 32 96 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 46 92 110 92 110 96 44 92 110 92 116 82 117 110 69 58 32 102 117 110 99 40 99 109 100 32 42 99 111 98 114 97 46 67 111 109 109 97 110 100 44 32 97 114 103 115 32 91 93 115 116 114 105 110 103 41 32 101 114 114 111 114 32 123 92 110 92 116 92 116 108 111 103 103 101 114 32 58 61 32 103 101 116 76 111 103 103 101 114 40 92 34 46 92 47 115 101 108 116 97 98 108 46 108 111 103 92 34 41 92 110 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 108 110 40 92 34 83 116 97 114 116 105 110 103 32 116 104 101 32 115 101 114 118 101 114 46 46 46 92 34 41 92 110 92 116 92 116 115 99 97 110 110 101 114 32 58 61 32 98 117 102 105 111 46 78 101 119 83 99 97 110 110 101 114 40 111 115 46 83 116 100 105 110 41 92 110 92 116 92 116 115 99 97 110 110 101 114 46 83 112 108 105 116 40 114 112 99 46 83 112 108 105 116 41 92 110 92 116 92 116 115 116 97 116 101 32 58 61 32 97 110 97 108 121 115 105 115 46 78 101 119 83 116 97 116 101 40 41 92 110 92 110 92 116 92 116 102 111 114 32 115 99 97 110 110 101 114 46 83 99 97 110 40 41 32 123 92 110 92 116 92 116 92 116 109 115 103 32 58 61 32 115 99 97 110 110 101 114 46 66 121 116 101 115 40 41 92 110 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 82 101 99 101 105 118 101 100 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 109 115 103 41 92 110 92 116 92 116 92 116 109 101 116 104 111 100 44 32 99 111 110 116 101 110 116 44 32 101 114 114 32 58 61 32 114 112 99 46 68 101 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 100 101 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 101 114 114 32 61 32 104 97 110 100 108 101 77 101 115 115 97 103 101 40 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 44 92 110 92 116 92 116 92 116 92 116 111 115 46 83 116 100 111 117 116 44 92 110 92 116 92 116 92 116 92 116 38 115 116 97 116 101 44 92 110 92 116 92 116 92 116 92 116 109 101 116 104 111 100 44 92 110 92 116 92 116 92 116 92 116 99 111 110 116 101 110 116 44 92 110 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 104 97 110 100 108 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 92 116 114 101 116 117 114 110 32 110 105 108 92 110 92 116 125 44 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 76 111 103 103 101 114 32 114 101 116 117 114 110 115 32 97 32 108 111 103 103 101 114 32 116 104 97 116 32 119 114 105 116 101 115 32 116 111 32 97 32 102 105 108 101 92 110 102 117 110 99 32 103 101 116 76 111 103 103 101 114 40 102 105 108 101 78 97 109 101 32 115 116 114 105 110 103 41 32 42 108 111 103 46 76 111 103 103 101 114 32 123 92 110 92 116 108 111 103 70 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 110 92 116 92 116 102 105 108 101 78 97 109 101 44 92 110 92 116 92 116 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 92 110 92 116 92 116 48 54 54 54 44 92 110 92 116 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 108 111 103 46 70 97 116 97 108 40 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 108 111 103 46 78 101 119 40 108 111 103 70 105 108 101 44 32 92 34 91 115 101 108 116 97 98 108 45 108 115 112 93 92 34 44 32 108 111 103 46 76 115 116 100 70 108 97 103 115 41 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go
[seltabl-lsp]2024/06/13 20:37:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go []}}
[seltabl-lsp]2024/06/13 20:37:54 Received message: Content-Length: 2548

{"method":"textDocument\/didChange","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"},"contentChanges":[{"text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:54 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"},"contentChanges":[{"text":"package cmd\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/analysis\"\n\t\"github.com\/conneroisu\/seltabl\/tools\/pkg\/rpc\"\n\t\"github.com\/spf13\/cobra\"\n)\n\n\/\/ Execute runs the root command\nfunc Execute() error {\n\tif err := rootCmd.Execute(); err != nil {\n\t\treturn fmt.Errorf(\"failed to execute root command: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ writeResponse writes a message to the writer\nfunc writeResponse(writer io.Writer, msg any) error {\n\treply, err := rpc.EncodeMessage(msg)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to encode message: %w\", err)\n\t}\n\tres, err := writer.Write([]byte(reply))\n\tif err != nil {\n\t\treturn fmt.Errorf(\"failed to write response: %w\", err)\n\t}\n\tif res != len(reply) {\n\t\treturn fmt.Errorf(\"failed to write all response: %w\", err)\n\t}\n\treturn nil\n}\n\n\/\/ rootCmd is the root command for the command line tool\nvar rootCmd = &cobra.Command{\n\tUse:   \"seltabl-lsp\", \/\/ the name of the command\n\tShort: \"A command line tool for parsing html tables into structs\",\n\tLong: `A command line tool for parsing html tables into structs.\n\n`,\n\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\tlogger := getLogger(\".\/seltabl.log\")\n\t\tlogger.Println(\"Starting the server...\")\n\t\tscanner := bufio.NewScanner(os.Stdin)\n\t\tscanner.Split(rpc.Split)\n\t\tstate := analysis.NewState()\n\n\t\tfor scanner.Scan() {\n\t\t\tmsg := scanner.Bytes()\n\t\t\tlogger.Printf(\"Received message: %s\\n\", msg)\n\t\t\tmethod, content, err := rpc.DecodeMessage(msg)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to decode message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\terr = handleMessage(\n\t\t\t\tlogger,\n\t\t\t\tos.Stdout,\n\t\t\t\t&state,\n\t\t\t\tmethod,\n\t\t\t\tcontent,\n\t\t\t)\n\t\t\tif err != nil {\n\t\t\t\tlogger.Printf(\"failed to handle message: %s\\n\", err)\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\t\treturn nil\n\t},\n}\n\n\/\/ getLogger returns a logger that writes to a file\nfunc getLogger(fileName string) *log.Logger {\n\tlogFile, err := os.OpenFile(\n\t\tfileName,\n\t\tos.O_CREATE|os.O_APPEND|os.O_WRONLY,\n\t\t0666,\n\t)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\treturn log.New(logFile, \"[seltabl-lsp]\", log.LstdFlags)\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:54 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 47 114 111 111 116 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 99 109 100 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 98 117 102 105 111 92 34 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 105 111 92 34 92 110 92 116 92 34 108 111 103 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 97 110 97 108 121 115 105 115 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 114 112 99 92 34 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 115 112 102 49 51 92 47 99 111 98 114 97 92 34 92 110 41 92 110 92 110 92 47 92 47 32 69 120 101 99 117 116 101 32 114 117 110 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 92 110 102 117 110 99 32 69 120 101 99 117 116 101 40 41 32 101 114 114 111 114 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 114 111 111 116 67 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 120 101 99 117 116 101 32 114 111 111 116 32 99 111 109 109 97 110 100 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 119 114 105 116 101 82 101 115 112 111 110 115 101 32 119 114 105 116 101 115 32 97 32 109 101 115 115 97 103 101 32 116 111 32 116 104 101 32 119 114 105 116 101 114 92 110 102 117 110 99 32 119 114 105 116 101 82 101 115 112 111 110 115 101 40 119 114 105 116 101 114 32 105 111 46 87 114 105 116 101 114 44 32 109 115 103 32 97 110 121 41 32 101 114 114 111 114 32 123 92 110 92 116 114 101 112 108 121 44 32 101 114 114 32 58 61 32 114 112 99 46 69 110 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 101 110 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 115 44 32 101 114 114 32 58 61 32 119 114 105 116 101 114 46 87 114 105 116 101 40 91 93 98 121 116 101 40 114 101 112 108 121 41 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 105 102 32 114 101 115 32 33 61 32 108 101 110 40 114 101 112 108 121 41 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 102 109 116 46 69 114 114 111 114 102 40 92 34 102 97 105 108 101 100 32 116 111 32 119 114 105 116 101 32 97 108 108 32 114 101 115 112 111 110 115 101 58 32 37 119 92 34 44 32 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 110 105 108 92 110 125 92 110 92 110 92 47 92 47 32 114 111 111 116 67 109 100 32 105 115 32 116 104 101 32 114 111 111 116 32 99 111 109 109 97 110 100 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 118 97 114 32 114 111 111 116 67 109 100 32 61 32 38 99 111 98 114 97 46 67 111 109 109 97 110 100 123 92 110 92 116 85 115 101 58 32 32 32 92 34 115 101 108 116 97 98 108 45 108 115 112 92 34 44 32 92 47 92 47 32 116 104 101 32 110 97 109 101 32 111 102 32 116 104 101 32 99 111 109 109 97 110 100 92 110 92 116 83 104 111 114 116 58 32 92 34 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 92 34 44 92 110 92 116 76 111 110 103 58 32 96 65 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 32 102 111 114 32 112 97 114 115 105 110 103 32 104 116 109 108 32 116 97 98 108 101 115 32 105 110 116 111 32 115 116 114 117 99 116 115 46 92 110 92 110 96 44 92 110 92 116 82 117 110 69 58 32 102 117 110 99 40 99 109 100 32 42 99 111 98 114 97 46 67 111 109 109 97 110 100 44 32 97 114 103 115 32 91 93 115 116 114 105 110 103 41 32 101 114 114 111 114 32 123 92 110 92 116 92 116 108 111 103 103 101 114 32 58 61 32 103 101 116 76 111 103 103 101 114 40 92 34 46 92 47 115 101 108 116 97 98 108 46 108 111 103 92 34 41 92 110 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 108 110 40 92 34 83 116 97 114 116 105 110 103 32 116 104 101 32 115 101 114 118 101 114 46 46 46 92 34 41 92 110 92 116 92 116 115 99 97 110 110 101 114 32 58 61 32 98 117 102 105 111 46 78 101 119 83 99 97 110 110 101 114 40 111 115 46 83 116 100 105 110 41 92 110 92 116 92 116 115 99 97 110 110 101 114 46 83 112 108 105 116 40 114 112 99 46 83 112 108 105 116 41 92 110 92 116 92 116 115 116 97 116 101 32 58 61 32 97 110 97 108 121 115 105 115 46 78 101 119 83 116 97 116 101 40 41 92 110 92 110 92 116 92 116 102 111 114 32 115 99 97 110 110 101 114 46 83 99 97 110 40 41 32 123 92 110 92 116 92 116 92 116 109 115 103 32 58 61 32 115 99 97 110 110 101 114 46 66 121 116 101 115 40 41 92 110 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 82 101 99 101 105 118 101 100 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 109 115 103 41 92 110 92 116 92 116 92 116 109 101 116 104 111 100 44 32 99 111 110 116 101 110 116 44 32 101 114 114 32 58 61 32 114 112 99 46 68 101 99 111 100 101 77 101 115 115 97 103 101 40 109 115 103 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 100 101 99 111 100 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 101 114 114 32 61 32 104 97 110 100 108 101 77 101 115 115 97 103 101 40 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 44 92 110 92 116 92 116 92 116 92 116 111 115 46 83 116 100 111 117 116 44 92 110 92 116 92 116 92 116 92 116 38 115 116 97 116 101 44 92 110 92 116 92 116 92 116 92 116 109 101 116 104 111 100 44 92 110 92 116 92 116 92 116 92 116 99 111 110 116 101 110 116 44 92 110 92 116 92 116 92 116 41 92 110 92 116 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 116 108 111 103 103 101 114 46 80 114 105 110 116 102 40 92 34 102 97 105 108 101 100 32 116 111 32 104 97 110 100 108 101 32 109 101 115 115 97 103 101 58 32 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 92 116 92 116 99 111 110 116 105 110 117 101 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 92 116 114 101 116 117 114 110 32 110 105 108 92 110 92 116 125 44 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 76 111 103 103 101 114 32 114 101 116 117 114 110 115 32 97 32 108 111 103 103 101 114 32 116 104 97 116 32 119 114 105 116 101 115 32 116 111 32 97 32 102 105 108 101 92 110 102 117 110 99 32 103 101 116 76 111 103 103 101 114 40 102 105 108 101 78 97 109 101 32 115 116 114 105 110 103 41 32 42 108 111 103 46 76 111 103 103 101 114 32 123 92 110 92 116 108 111 103 70 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 110 92 116 92 116 102 105 108 101 78 97 109 101 44 92 110 92 116 92 116 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 92 110 92 116 92 116 48 54 54 54 44 92 110 92 116 41 92 110 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 108 111 103 46 70 97 116 97 108 40 101 114 114 41 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 108 111 103 46 78 101 119 40 108 111 103 70 105 108 101 44 32 92 34 91 115 101 108 116 97 98 108 45 108 115 112 93 92 34 44 32 108 111 103 46 76 115 116 100 70 108 97 103 115 41 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:37:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go
[seltabl-lsp]2024/06/13 20:37:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/cmd/root.go []}}
[seltabl-lsp]2024/06/13 20:37:57 Received message: Content-Length: 171

{"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:57 Received message (textDocument/didSave): {"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:57 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:37:58 Received message: Content-Length: 171

{"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:58 Received message (textDocument/didSave): {"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/cmd\/root.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:37:58 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:38:04 Starting the server...
[seltabl-lsp]2024/06/13 20:38:07 Received message: Content-Length: 2736

{"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:38:07 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","params":{"textDocument":{"languageId":"go","version":0,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:38:07 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:38:07 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:38:07 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:09 Received message: Content-Length: 2534

{"method":"textDocument\/didChange","params":{"textDocument":{"version":3,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:09 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":3,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:09 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:09 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:09 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:09 Received message: Content-Length: 2538

{"method":"textDocument\/didChange","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:09 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:09 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:09 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:09 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:12 Received message: Content-Length: 2629

{"method":"textDocument\/didChange","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:12 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:12 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:12 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:12 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:12 Received message: Content-Length: 2629

{"method":"textDocument\/didChange","params":{"textDocument":{"version":7,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:12 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":7,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:12 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:12 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:12 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:13 Received message: Content-Length: 2633

{"method":"textDocument\/didChange","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:13 Received message: Content-Length: 2635

{"method":"textDocument\/didChange","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:13 Received message: Content-Length: 2683

{"method":"textDocument\/didChange","params":{"textDocument":{"version":10,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":10,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:13 Received message: Content-Length: 2683

{"method":"textDocument\/didChange","params":{"textDocument":{"version":12,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":12,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:13 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:13 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":3,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":43,"character":47}}}
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/completion): {"method":"textDocument\/completion","id":3,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":43,"character":47}}}
[seltabl-lsp]2024/06/13 20:39:13 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 51 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 52 55 125 125 125]
[seltabl-lsp]2024/06/13 20:39:13 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:13 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:13 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2c1f8} []}
[seltabl-lsp]2024/06/13 20:39:14 Received message: Content-Length: 2682

{"method":"textDocument\/didChange","params":{"textDocument":{"version":13,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelecto\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":13,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelecto\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:14 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:14 Received message: Content-Length: 2683

{"method":"textDocument\/didChange","params":{"textDocument":{"version":46,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":46,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:14 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:14 Received message: Content-Length: 2688

{"method":"textDocument\/didChange","params":{"textDocument":{"version":47,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":47,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:14 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:14 Received message: Content-Length: 2688

{"method":"textDocument\/didChange","params":{"textDocument":{"version":49,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":49,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:14 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:14 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:14 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:15 Received message: Content-Length: 2748

{"method":"textDocument\/didChange","params":{"textDocument":{"version":50,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:15 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":50,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:15 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:15 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:15 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:15 Received message: Content-Length: 2748

{"method":"textDocument\/didChange","params":{"textDocument":{"version":52,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:15 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":52,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:15 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:15 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:15 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:16 Received message: Content-Length: 2752

{"method":"textDocument\/didChange","params":{"textDocument":{"version":53,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":53,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:16 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:16 Received message: Content-Length: 2754

{"method":"textDocument\/didChange","params":{"textDocument":{"version":54,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":54,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:16 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:16 Received message: Content-Length: 2801

{"method":"textDocument\/didChange","params":{"textDocument":{"version":55,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":55,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:16 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:16 Received message: Content-Length: 2801

{"method":"textDocument\/didChange","params":{"textDocument":{"version":57,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":57,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:16 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:16 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:16 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":4,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":45,"character":47}}}
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/completion): {"method":"textDocument\/completion","id":4,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":45,"character":47}}}
[seltabl-lsp]2024/06/13 20:39:16 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 52 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 53 44 34 99 104 97 114 97 99 116 101 114 34 58 52 55 125 125 125]
[seltabl-lsp]2024/06/13 20:39:16 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:16 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:16 Received message (textDocument/completion) and replied:  {{2.0 0x14000a80258} []}
[seltabl-lsp]2024/06/13 20:39:17 Received message: Content-Length: 2801

{"method":"textDocument\/didChange","params":{"textDocument":{"version":58,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":58,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:17 Received message: Content-Length: 2801

{"method":"textDocument\/didChange","params":{"textDocument":{"version":60,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":60,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:18 Received message: Content-Length: 2802

{"method":"textDocument\/didChange","params":{"textDocument":{"version":61,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelectorj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:18 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":61,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelectorj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:18 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:18 Received message: Content-Length: 2801

{"method":"textDocument\/didChange","params":{"textDocument":{"version":64,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:18 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":64,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\tif parentSelector != \"\" && currentSelector != \"\" && parentSelector != currentSelector {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:18 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:20 Received message: Content-Length: 2535

{"method":"textDocument\/didChange","params":{"textDocument":{"version":65,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:20 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":65,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:20 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:20 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:20 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:20 Received message: Content-Length: 2539

{"method":"textDocument\/didChange","params":{"textDocument":{"version":66,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:20 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":66,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:20 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:20 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:20 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:21 Received message: Content-Length: 2541

{"method":"textDocument\/didChange","params":{"textDocument":{"version":67,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":67,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:21 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:21 Received message: Content-Length: 2543

{"method":"textDocument\/didChange","params":{"textDocument":{"version":68,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":68,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:21 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:21 Received message: Content-Length: 2544

{"method":"textDocument\/didChange","params":{"textDocument":{"version":69,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":69,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:21 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:21 Received message: Content-Length: 2545

{"method":"textDocument\/didChange","params":{"textDocument":{"version":70,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ s\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":70,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ s\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:21 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:21 Received message: Content-Length: 260

{"method":"textDocument\/completion","id":5,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":5}}}
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/completion): {"method":"textDocument\/completion","id":5,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":5}}}
[seltabl-lsp]2024/06/13 20:39:21 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 53 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 53 125 125 125]
[seltabl-lsp]2024/06/13 20:39:21 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:21 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/completion) and replied:  {{2.0 0x14000a80508} []}
[seltabl-lsp]2024/06/13 20:39:21 Received message: Content-Length: 2546

{"method":"textDocument\/didChange","params":{"textDocument":{"version":71,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ sh\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":71,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ sh\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:21 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2547

{"method":"textDocument\/didChange","params":{"textDocument":{"version":72,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ sho\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":72,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ sho\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2548

{"method":"textDocument\/didChange","params":{"textDocument":{"version":73,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ shou\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":73,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ shou\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2549

{"method":"textDocument\/didChange","params":{"textDocument":{"version":74,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ shoul\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":74,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ shoul\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2550

{"method":"textDocument\/didChange","params":{"textDocument":{"version":75,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":75,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2551

{"method":"textDocument\/didChange","params":{"textDocument":{"version":76,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":76,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2552

{"method":"textDocument\/didChange","params":{"textDocument":{"version":77,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should o\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":77,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should o\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":6,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":12}}}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/completion): {"method":"textDocument\/completion","id":6,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":12}}}
[seltabl-lsp]2024/06/13 20:39:22 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 54 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 125 125]
[seltabl-lsp]2024/06/13 20:39:22 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2c568} []}
[seltabl-lsp]2024/06/13 20:39:22 Received message: Content-Length: 2553

{"method":"textDocument\/didChange","params":{"textDocument":{"version":78,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should ou\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":78,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should ou\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:23 Received message: Content-Length: 2554

{"method":"textDocument\/didChange","params":{"textDocument":{"version":79,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should out\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":79,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should out\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:23 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:23 Received message: Content-Length: 2555

{"method":"textDocument\/didChange","params":{"textDocument":{"version":80,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should outp\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":80,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should outp\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:23 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:23 Received message: Content-Length: 2556

{"method":"textDocument\/didChange","params":{"textDocument":{"version":81,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should outpu\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":81,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should outpu\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:23 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:23 Received message: Content-Length: 2557

{"method":"textDocument\/didChange","params":{"textDocument":{"version":82,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":82,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:23 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:23 Received message: Content-Length: 2558

{"method":"textDocument\/didChange","params":{"textDocument":{"version":83,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":83,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:23 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:23 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:23 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:25 Received message: Content-Length: 2559

{"method":"textDocument\/didChange","params":{"textDocument":{"version":84,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output h\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":84,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output h\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:25 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":7,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":19}}}
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/completion): {"method":"textDocument\/completion","id":7,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":19}}}
[seltabl-lsp]2024/06/13 20:39:25 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 55 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 125]
[seltabl-lsp]2024/06/13 20:39:25 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:25 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2c6d8} []}
[seltabl-lsp]2024/06/13 20:39:25 Received message: Content-Length: 2560

{"method":"textDocument\/didChange","params":{"textDocument":{"version":85,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output ht\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":85,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output ht\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:25 Received message: Content-Length: 2561

{"method":"textDocument\/didChange","params":{"textDocument":{"version":86,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output htm\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":86,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output htm\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:25 Received message: Content-Length: 2562

{"method":"textDocument\/didChange","params":{"textDocument":{"version":87,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":87,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:26 Received message: Content-Length: 2563

{"method":"textDocument\/didChange","params":{"textDocument":{"version":88,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:26 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":88,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:26 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:26 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:26 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:27 Received message: Content-Length: 2564

{"method":"textDocument\/didChange","params":{"textDocument":{"version":89,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html b\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":89,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html b\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:27 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:27 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":8,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":24}}}
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/completion): {"method":"textDocument\/completion","id":8,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":24}}}
[seltabl-lsp]2024/06/13 20:39:27 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 56 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 125]
[seltabl-lsp]2024/06/13 20:39:27 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:27 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2c8e0} []}
[seltabl-lsp]2024/06/13 20:39:27 Received message: Content-Length: 2565

{"method":"textDocument\/didChange","params":{"textDocument":{"version":90,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html bo\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":90,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html bo\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:27 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:27 Received message: Content-Length: 2566

{"method":"textDocument\/didChange","params":{"textDocument":{"version":91,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html bod\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":91,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html bod\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:27 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:27 Received message: Content-Length: 2567

{"method":"textDocument\/didChange","params":{"textDocument":{"version":92,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":92,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:27 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:30 Received message: Content-Length: 2568

{"method":"textDocument\/didChange","params":{"textDocument":{"version":93,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":93,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:30 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:30 Received message: Content-Length: 2569

{"method":"textDocument\/didChange","params":{"textDocument":{"version":94,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body d\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":94,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body d\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:30 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:30 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":9,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":29}}}
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/completion): {"method":"textDocument\/completion","id":9,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":29}}}
[seltabl-lsp]2024/06/13 20:39:30 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 57 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 125]
[seltabl-lsp]2024/06/13 20:39:30 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:30 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/completion) and replied:  {{2.0 0x14000a80880} []}
[seltabl-lsp]2024/06/13 20:39:30 Received message: Content-Length: 2570

{"method":"textDocument\/didChange","params":{"textDocument":{"version":95,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body di\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":95,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body di\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:30 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:30 Received message: Content-Length: 2571

{"method":"textDocument\/didChange","params":{"textDocument":{"version":96,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":96,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:30 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:30 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:30 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:31 Received message: Content-Length: 2572

{"method":"textDocument\/didChange","params":{"textDocument":{"version":97,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:31 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":97,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:31 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:31 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:31 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:34 Received message: Content-Length: 2573

{"method":"textDocument\/didChange","params":{"textDocument":{"version":98,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#C\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:34 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":98,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#C\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:34 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:34 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:34 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":10,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":33}}}
[seltabl-lsp]2024/06/13 20:39:34 Received message (textDocument/completion): {"method":"textDocument\/completion","id":10,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":33}}}
[seltabl-lsp]2024/06/13 20:39:34 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 48 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 51 51 125 125 125]
[seltabl-lsp]2024/06/13 20:39:34 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:34 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:34 Received message (textDocument/completion) and replied:  {{2.0 0x14000a80a48} []}
[seltabl-lsp]2024/06/13 20:39:35 Received message: Content-Length: 2574

{"method":"textDocument\/didChange","params":{"textDocument":{"version":99,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Co\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":99,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Co\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:35 Received message: Content-Length: 2576

{"method":"textDocument\/didChange","params":{"textDocument":{"version":100,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Con\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":100,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Con\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:35 Received message: Content-Length: 2577

{"method":"textDocument\/didChange","params":{"textDocument":{"version":101,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Cont\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":101,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Cont\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:35 Received message: Content-Length: 2578

{"method":"textDocument\/didChange","params":{"textDocument":{"version":102,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Conte\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":102,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Conte\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:35 Received message: Content-Length: 2579

{"method":"textDocument\/didChange","params":{"textDocument":{"version":103,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Conten\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":103,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Conten\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:36 Received message: Content-Length: 2580

{"method":"textDocument\/didChange","params":{"textDocument":{"version":104,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Content\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":104,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#Content\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:36 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:36 Received message: Content-Length: 2581

{"method":"textDocument\/didChange","params":{"textDocument":{"version":105,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentA\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:36 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":105,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentA\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:36 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:36 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:37 Received message: Content-Length: 2640

{"method":"textDocument\/didChange","params":{"textDocument":{"version":106,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:37 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":106,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:37 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:37 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:37 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:37 Received message: Content-Length: 2640

{"method":"textDocument\/didChange","params":{"textDocument":{"version":108,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:37 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":108,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:37 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:37 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:37 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:38 Received message: Content-Length: 2641

{"method":"textDocument\/didChange","params":{"textDocument":{"version":109,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]j\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":109,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]j\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:38 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:38 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:38 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":11,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":98}}}
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/completion): {"method":"textDocument\/completion","id":11,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":42,"character":98}}}
[seltabl-lsp]2024/06/13 20:39:38 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 49 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 57 56 125 125 125]
[seltabl-lsp]2024/06/13 20:39:38 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:38 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/completion) and replied:  {{2.0 0x14000a80c68} []}
[seltabl-lsp]2024/06/13 20:39:38 Received message: Content-Length: 2640

{"method":"textDocument\/didChange","params":{"textDocument":{"version":112,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":112,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:38 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:38 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:38 Received message: Content-Length: 2644

{"method":"textDocument\/didChange","params":{"textDocument":{"version":113,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":113,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:38 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:38 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:38 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:41 Received message: Content-Length: 2698

{"method":"textDocument\/didChange","params":{"textDocument":{"version":114,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":114,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:41 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:41 Received message: Content-Length: 2698

{"method":"textDocument\/didChange","params":{"textDocument":{"version":116,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":116,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:41 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:41 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":117,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":117,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:41 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:41 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":119,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":119,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:41 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:41 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:41 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:42 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":122,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":122,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:42 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:42 Received message: Content-Length: 2761

{"method":"textDocument\/didChange","params":{"textDocument":{"version":128,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":128,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:42 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:42 Received message: Content-Length: 2762

{"method":"textDocument\/didChange","params":{"textDocument":{"version":129,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\tj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":129,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\tj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 116 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:42 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:42 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":12,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":55}}}
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/completion): {"method":"textDocument\/completion","id":12,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":55}}}
[seltabl-lsp]2024/06/13 20:39:42 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 50 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 52 44 34 99 104 97 114 97 99 116 101 114 34 58 53 53 125 125 125]
[seltabl-lsp]2024/06/13 20:39:42 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:42 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2cb80} []}
[seltabl-lsp]2024/06/13 20:39:42 Received message: Content-Length: 2761

{"method":"textDocument\/didChange","params":{"textDocument":{"version":132,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":132,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:42 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:42 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:42 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:43 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":133,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":133,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:43 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:43 Received message: Content-Length: 2760

{"method":"textDocument\/didChange","params":{"textDocument":{"version":134,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"i\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":134,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"i\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 105 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:43 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:43 Received message: Content-Length: 2761

{"method":"textDocument\/didChange","params":{"textDocument":{"version":135,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"ij\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":135,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"ij\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 105 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:43 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:43 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":13,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":55}}}
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/completion): {"method":"textDocument\/completion","id":13,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":55}}}
[seltabl-lsp]2024/06/13 20:39:43 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 51 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 52 44 34 99 104 97 114 97 99 116 101 114 34 58 53 53 125 125 125]
[seltabl-lsp]2024/06/13 20:39:43 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:43 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2cd48} []}
[seltabl-lsp]2024/06/13 20:39:43 Received message: Content-Length: 2760

{"method":"textDocument\/didChange","params":{"textDocument":{"version":138,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"i\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":138,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"i\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:43 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 105 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:43 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:43 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:44 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":139,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":139,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:44 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:44 Received message: Content-Length: 2760

{"method":"textDocument\/didChange","params":{"textDocument":{"version":140,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"j\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":140,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"j\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:44 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:44 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":14,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":54}}}
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/completion): {"method":"textDocument\/completion","id":14,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":54}}}
[seltabl-lsp]2024/06/13 20:39:44 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 52 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 52 44 34 99 104 97 114 97 99 116 101 114 34 58 53 52 125 125 125]
[seltabl-lsp]2024/06/13 20:39:44 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:44 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/completion) and replied:  {{2.0 0x14000a2cee0} []}
[seltabl-lsp]2024/06/13 20:39:44 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":143,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":143,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:44 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:44 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:44 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:45 Received message: Content-Length: 2760

{"method":"textDocument\/didChange","params":{"textDocument":{"version":144,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \" \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:45 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":144,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \" \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:45 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:45 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:45 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:47 Received message: Content-Length: 2759

{"method":"textDocument\/didChange","params":{"textDocument":{"version":145,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":145,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:47 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:47 Received message: Content-Length: 2757

{"method":"textDocument\/didChange","params":{"textDocument":{"version":146,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":146,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \" \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:47 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:48 Received message: Content-Length: 2756

{"method":"textDocument\/didChange","params":{"textDocument":{"version":147,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":147,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \"\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:48 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:48 Received message: Content-Length: 2754

{"method":"textDocument\/didChange","params":{"textDocument":{"version":148,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":148,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector + \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:48 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:48 Received message: Content-Length: 2753

{"method":"textDocument\/didChange","params":{"textDocument":{"version":149,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector +\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":149,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector +\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 43 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:48 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:48 Received message: Content-Length: 2752

{"method":"textDocument\/didChange","params":{"textDocument":{"version":150,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":150,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector \n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:48 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:48 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:48 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:49 Received message: Content-Length: 2751

{"method":"textDocument\/didChange","params":{"textDocument":{"version":151,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":151,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:49 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:49 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":15,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":47}}}
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/completion): {"method":"textDocument\/completion","id":15,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":44,"character":47}}}
[seltabl-lsp]2024/06/13 20:39:49 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 53 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 52 44 34 99 104 97 114 97 99 116 101 114 34 58 52 55 125 125 125]
[seltabl-lsp]2024/06/13 20:39:49 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:49 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/completion) and replied:  {{2.0 0x14000c08080} []}
[seltabl-lsp]2024/06/13 20:39:49 Received message: Content-Length: 2752

{"method":"textDocument\/didChange","params":{"textDocument":{"version":152,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelectorj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":152,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelectorj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:49 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:49 Received message: Content-Length: 2751

{"method":"textDocument\/didChange","params":{"textDocument":{"version":155,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":155,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:49 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:49 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:50 Received message: Content-Length: 2757

{"method":"textDocument\/didChange","params":{"textDocument":{"version":156,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:50 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":156,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:50 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:50 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:51 Received message: Content-Length: 2816

{"method":"textDocument\/didChange","params":{"textDocument":{"version":157,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:51 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":157,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:51 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:51 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:51 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:52 Received message: Content-Length: 2816

{"method":"textDocument\/didChange","params":{"textDocument":{"version":159,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":159,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:52 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:52 Received message: Content-Length: 2816

{"method":"textDocument\/didChange","params":{"textDocument":{"version":160,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":160,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:52 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:52 Received message: Content-Length: 2816

{"method":"textDocument\/didChange","params":{"textDocument":{"version":162,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":162,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:52 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:52 Received message: Content-Length: 2820

{"method":"textDocument\/didChange","params":{"textDocument":{"version":163,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":163,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:52 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:52 Received message: Content-Length: 2822

{"method":"textDocument\/didChange","params":{"textDocument":{"version":164,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":164,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:52 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:52 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:52 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:53 Received message: Content-Length: 2843

{"method":"textDocument\/didChange","params":{"textDocument":{"version":165,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:53 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":165,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:53 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:53 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:53 Received message: Content-Length: 2843

{"method":"textDocument\/didChange","params":{"textDocument":{"version":167,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:53 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":167,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:53 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:53 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:53 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":16,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":46,"character":23}}}
[seltabl-lsp]2024/06/13 20:39:53 Received message (textDocument/completion): {"method":"textDocument\/completion","id":16,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":46,"character":23}}}
[seltabl-lsp]2024/06/13 20:39:53 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 54 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 125]
[seltabl-lsp]2024/06/13 20:39:53 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:53 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:53 Received message (textDocument/completion) and replied:  {{2.0 0x14000a80218} []}
[seltabl-lsp]2024/06/13 20:39:54 Received message: Content-Length: 2848

{"method":"textDocument\/didChange","params":{"textDocument":{"version":168,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":168,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 54 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:54 Received message: Content-Length: 2848

{"method":"textDocument\/didChange","params":{"textDocument":{"version":170,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":170,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:54 Received message: Content-Length: 2849

{"method":"textDocument\/didChange","params":{"textDocument":{"version":171,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}j\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":171,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}j\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:54 Received message: Content-Length: 261

{"method":"textDocument\/completion","id":17,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":47,"character":3}}}
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/completion): {"method":"textDocument\/completion","id":17,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":47,"character":3}}}
[seltabl-lsp]2024/06/13 20:39:54 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 55 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 55 44 34 99 104 97 114 97 99 116 101 114 34 58 51 125 125 125]
[seltabl-lsp]2024/06/13 20:39:54 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:54 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/completion) and replied:  {{2.0 0x14000a803b0} []}
[seltabl-lsp]2024/06/13 20:39:54 Received message: Content-Length: 2848

{"method":"textDocument\/didChange","params":{"textDocument":{"version":174,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":174,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:54 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:55 Received message: Content-Length: 185

{"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:55 Received message (textDocument/didSave): {"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:55 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:39:56 Received message: Content-Length: 2852

{"method":"textDocument\/didChange","params":{"textDocument":{"version":176,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:56 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":176,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\t\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:56 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:56 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:56 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:57 Received message: Content-Length: 2874

{"method":"textDocument\/didChange","params":{"textDocument":{"version":177,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":177,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:57 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:57 Received message: Content-Length: 2874

{"method":"textDocument\/didChange","params":{"textDocument":{"version":179,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":179,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 55 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:57 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:57 Received message: Content-Length: 262

{"method":"textDocument\/completion","id":18,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":48,"character":23}}}
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/completion): {"method":"textDocument\/completion","id":18,"jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"line":48,"character":23}}}
[seltabl-lsp]2024/06/13 20:39:57 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 56 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 52 56 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 125]
[seltabl-lsp]2024/06/13 20:39:57 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:57 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/completion) and replied:  {{2.0 0x14000c083a8} []}
[seltabl-lsp]2024/06/13 20:39:57 Starting the server...
[seltabl-lsp]2024/06/13 20:39:57 Received message: Content-Length: 2875

{"method":"textDocument\/didChange","params":{"textDocument":{"version":180,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelectorj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":180,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelectorj\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 56 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 106 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:57 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:57 Received message: Content-Length: 2874

{"method":"textDocument\/didChange","params":{"textDocument":{"version":183,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange): {"method":"textDocument\/didChange","params":{"textDocument":{"version":183,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:57 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 56 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 125]
[seltabl-lsp]2024/06/13 20:39:57 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:39:57 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:39:58 Received message: Content-Length: 185

{"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:58 Received message (textDocument/didSave): {"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:39:58 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:40:00 Received message: Content-Length: 185

{"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:40:00 Received message (textDocument/didSave): {"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:40:00 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:40:03 Received message: Content-Length: 166

{"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:40:03 Received message (textDocument/didSave): {"method":"textDocument\/didSave","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:40:03 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:40:03 Received message: Content-Length: 45

{"method":"shutdown","id":19,"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:40:03 Received message (shutdown): {"method":"shutdown","id":19,"jsonrpc":"2.0"}
[seltabl-lsp]2024/06/13 20:40:03 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 20:40:05 Starting the server...
[seltabl-lsp]2024/06/13 20:40:06 Starting the server...
[seltabl-lsp]2024/06/13 20:40:06 Starting the server...
[seltabl-lsp]2024/06/13 20:40:06 Received message: Content-Length: 3585

{"method":"initialize","jsonrpc":"2.0","params":{"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"processId":42536,"workDoneToken":"1","capabilities":{"textDocument":{"rename":{"prepareSupport":true,"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"tagSupport":{"valueSet":[1,2]},"relatedInformation":true,"dataSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dynamicRegistration":true,"dataSupport":true},"implementation":{"linkSupport":true},"declaration":{"linkSupport":true},"references":{"dynamicRegistration":false},"synchronization":{"willSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true,"didSave":true},"typeDefinition":{"linkSupport":true},"documentSymbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"documentHighlight":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"]},"dynamicRegistration":false},"completion":{"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"]},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true}},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"general":{"positionEncodings":["utf-16"]},"workspace":{"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"semanticTokens":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"configuration":true}},"rootPath":null,"trace":"off","workspaceFolders":null,"rootUri":null},"id":1}
[seltabl-lsp]2024/06/13 20:40:06 Received message (initialize): {"method":"initialize","jsonrpc":"2.0","params":{"clientInfo":{"name":"Neovim","version":"0.10.0-dev"},"processId":42536,"workDoneToken":"1","capabilities":{"textDocument":{"rename":{"prepareSupport":true,"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"tagSupport":{"valueSet":[1,2]},"relatedInformation":true,"dataSupport":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dynamicRegistration":true,"dataSupport":true},"implementation":{"linkSupport":true},"declaration":{"linkSupport":true},"references":{"dynamicRegistration":false},"synchronization":{"willSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true,"didSave":true},"typeDefinition":{"linkSupport":true},"documentSymbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"documentHighlight":{"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"]},"dynamicRegistration":false},"completion":{"completionItem":{"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"]},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]}},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"]},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true}},"window":{"showDocument":{"support":true},"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}}},"general":{"positionEncodings":["utf-16"]},"workspace":{"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"semanticTokens":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"configuration":true}},"rootPath":null,"trace":"off","workspaceFolders":null,"rootUri":null},"id":1}
[seltabl-lsp]2024/06/13 20:40:06 received initialize request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 44 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 125 44 34 112 114 111 99 101 115 115 73 100 34 58 52 50 53 51 54 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 114 101 110 97 109 101 34 58 123 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 44 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 125 44 34 104 111 118 101 114 34 58 123 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 125 44 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 115 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 125 125 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 125 44 34 105 100 34 58 49 125]
[seltabl-lsp]2024/06/13 20:40:06 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 20:40:06 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 20:40:08 Received message: Content-Length: 52

{"method":"initialized","jsonrpc":"2.0","params":{}}
[seltabl-lsp]2024/06/13 20:40:08 Received message (initialized): {"method":"initialized","jsonrpc":"2.0","params":{}}
[seltabl-lsp]2024/06/13 20:40:08 received initialized request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 125 125]
[seltabl-lsp]2024/06/13 20:40:08 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 20:40:08 Received message: Content-Length: 1077

{"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"languageId":"go","version":0,"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:40:08 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"languageId":"go","version":0,"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:40:08 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 125 125]
[seltabl-lsp]2024/06/13 20:40:08 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:40:08 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:40:17 Received message: Content-Length: 1088

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:40:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:40:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:40:17 Received message: Content-Length: 1090

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":6,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":6,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:40:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:40:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:40:17 Received message: Content-Length: 1092

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":7,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:17 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":7,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:17 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 55 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:40:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:40:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:40:18 Received message: Content-Length: 1093

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ \n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:18 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ \n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:40:18 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:40:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:40:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:40:19 Received message: Content-Length: 241

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"context":{"triggerKind":1},"position":{"character":5,"line":17}},"id":2}
[seltabl-lsp]2024/06/13 20:40:19 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"context":{"triggerKind":1},"position":{"character":5,"line":17}},"id":2}
[seltabl-lsp]2024/06/13 20:40:19 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 53 44 34 108 105 110 101 34 58 49 55 125 125 44 34 105 100 34 58 50 125]
[seltabl-lsp]2024/06/13 20:40:19 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:40:20 Received message (textDocument/completion) and replied:  {{2.0 0x14000010f20} [{Neovim (BTW) Very cool editor Fun to watch in videos. Don't forget to like & subscribe to streamers using it :)} {html from: https://stats.ncaa.org/game_upload/team_codes A selector for the html} {html head from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head} {html head title from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head title} {html head [name=csrf-param] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head [name=csrf-param]} {html head [name=csrf-token] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head [name=csrf-token]} {html body from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body} {html body #contentArea from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea} {html body #contentArea table from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table} {html body #contentArea table tbody from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody} {html body #contentArea table tbody tr.heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.heading} {html body #contentArea table tbody tr.heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.heading td} {html body #contentArea table tbody tr.grey_heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.grey_heading} {html body #contentArea table tbody tr.grey_heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.grey_heading td} {html body #contentArea table tbody tr.row_even from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_even} {html body #contentArea table tbody tr.row_even td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_even td} {html body #contentArea table tbody tr.row_odd from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_odd} {html body #contentArea table tbody tr.row_odd td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #contentArea table tbody tr.row_odd td} {html body #footer from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer} {html body #footer div from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div} {html body #footer div span from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div span} {html body #footer div span [href=http://web1.ncaa.org/web_files/terms_and_conditions.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div span [href=http://web1.ncaa.org/web_files/terms_and_conditions.html]} {html body #footer div span [href=http://web1.ncaa.org/web_files/privacy.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body #footer div span [href=http://web1.ncaa.org/web_files/privacy.html]}]}
[seltabl-lsp]2024/06/13 20:41:57 Received message: Content-Length: 1094

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ j\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:57 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ j\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:57 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 106 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:41:57 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:41:57 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:41:58 Received message: Content-Length: 1096

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":10,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ jj\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:58 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":10,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ jj\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:58 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 106 106 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:41:58 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:41:58 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:41:58 Received message: Content-Length: 1095

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":13,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ j\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:58 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":13,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ j\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:58 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 106 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:41:58 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:41:58 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:41:58 Received message: Content-Length: 1083

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":14,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:58 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":14,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:41:58 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:41:58 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:41:58 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:41:59 Received message: Content-Length: 166

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:41:59 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:41:59 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:42:02 Starting the server...
[seltabl-lsp]2024/06/13 20:42:07 Received message: Content-Length: 2867

{"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"languageId":"go","version":0,"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n","uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:07 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"languageId":"go","version":0,"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n","uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:07 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 44 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 125]
[seltabl-lsp]2024/06/13 20:42:07 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:07 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:21 Received message: Content-Length: 2873

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":3,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:21 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":3,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:21 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:21 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:21 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:22 Received message: Content-Length: 2874

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":4,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:22 Received message: Content-Length: 261

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":28,"line":56}},"id":3}
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":28,"line":56}},"id":3}
[seltabl-lsp]2024/06/13 20:42:22 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 50 56 44 34 108 105 110 101 34 58 53 54 125 125 44 34 105 100 34 58 51 125]
[seltabl-lsp]2024/06/13 20:42:22 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:22 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/completion) and replied:  {{2.0 0x14000a86070} []}
[seltabl-lsp]2024/06/13 20:42:22 Received message: Content-Length: 2875

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":5,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 106 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:22 Received message: Content-Length: 2874

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":8,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:22 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:25 Received message: Content-Length: 2873

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", id\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":9,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", id\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 105 100 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:25 Received message: Content-Length: 261

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":36,"line":56}},"id":4}
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":36,"line":56}},"id":4}
[seltabl-lsp]2024/06/13 20:42:25 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 51 54 44 34 108 105 110 101 34 58 53 54 125 125 44 34 105 100 34 58 52 125]
[seltabl-lsp]2024/06/13 20:42:25 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:25 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/completion) and replied:  {{2.0 0x14000a0e090} []}
[seltabl-lsp]2024/06/13 20:42:25 Received message: Content-Length: 2873

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":10,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", i\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":10,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", i\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 105 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:25 Received message: Content-Length: 2872

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":11,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", \n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":11,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", \n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:25 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 49 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:26 Received message: Content-Length: 2904

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":12,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":12,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:26 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 50 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:26 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:26 Received message: Content-Length: 2904

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":14,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":14,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:26 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 52 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:26 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:26 Received message: Content-Length: 2905

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":15,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)j\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":15,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)j\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:26 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:26 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:26 Received message: Content-Length: 261

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":67,"line":56}},"id":5}
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":67,"line":56}},"id":5}
[seltabl-lsp]2024/06/13 20:42:26 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 54 55 44 34 108 105 110 101 34 58 53 54 125 125 44 34 105 100 34 58 53 125]
[seltabl-lsp]2024/06/13 20:42:26 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:26 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:42:26 Received message (textDocument/completion) and replied:  {{2.0 0x14000b2c148} []}
[seltabl-lsp]2024/06/13 20:42:27 Received message: Content-Length: 2904

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":18,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:27 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":18,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:27 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 56 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:27 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:27 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:29 Received message: Content-Length: 2905

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":19,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id),\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":19,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id),\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:29 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 49 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 44 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:29 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:29 Received message: Content-Length: 2906

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":20,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id),j\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":20,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id),j\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:29 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 48 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 44 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:29 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:29 Received message: Content-Length: 261

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":68,"line":56}},"id":6}
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":68,"line":56}},"id":6}
[seltabl-lsp]2024/06/13 20:42:29 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 54 56 44 34 108 105 110 101 34 58 53 54 125 125 44 34 105 100 34 58 54 125]
[seltabl-lsp]2024/06/13 20:42:29 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:29 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/completion) and replied:  {{2.0 0x14000b2c2c8} []}
[seltabl-lsp]2024/06/13 20:42:29 Received message: Content-Length: 2905

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":23,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id),\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":23,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id),\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:29 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 51 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 44 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:29 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:29 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:30 Received message: Content-Length: 185

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:30 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:30 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:42:32 Starting the server...
[seltabl-lsp]2024/06/13 20:42:34 Received message: Content-Length: 2904

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":25,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:34 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":25,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:34 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 53 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:34 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:34 Received message: Content-Length: 2905

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":26,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)j\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:34 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":26,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)j\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:34 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 54 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:34 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:34 Received message: Content-Length: 261

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":67,"line":56}},"id":7}
[seltabl-lsp]2024/06/13 20:42:34 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"context":{"triggerKind":1},"position":{"character":67,"line":56}},"id":7}
[seltabl-lsp]2024/06/13 20:42:34 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 99 104 97 114 97 99 116 101 114 34 58 54 55 44 34 108 105 110 101 34 58 53 54 125 125 44 34 105 100 34 58 55 125]
[seltabl-lsp]2024/06/13 20:42:34 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:34 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:42:34 Received message (textDocument/completion) and replied:  {{2.0 0x14000b2c478} []}
[seltabl-lsp]2024/06/13 20:42:35 Received message: Content-Length: 2904

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":29,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:35 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"textDocument":{"version":29,"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"},"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}]}}
[seltabl-lsp]2024/06/13 20:42:35 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 50 57 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 44 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 125 125]
[seltabl-lsp]2024/06/13 20:42:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:42:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:42:36 Received message: Content-Length: 185

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:36 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:36 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:42:40 Received message: Content-Length: 185

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:40 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:40 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:42:43 Starting the server...
[seltabl-lsp]2024/06/13 20:42:45 Received message: Content-Length: 185

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:45 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}}}
[seltabl-lsp]2024/06/13 20:42:45 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:42:45 Received message: Content-Length: 44

{"method":"shutdown","jsonrpc":"2.0","id":8}
[seltabl-lsp]2024/06/13 20:42:45 Received message (shutdown): {"method":"shutdown","jsonrpc":"2.0","id":8}
[seltabl-lsp]2024/06/13 20:42:45 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 20:42:46 Starting the server...
[seltabl-lsp]2024/06/13 20:42:47 Starting the server...
[seltabl-lsp]2024/06/13 20:42:48 Starting the server...
[seltabl-lsp]2024/06/13 20:42:48 Received message: Content-Length: 3585

{"params":{"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":47475,"workDoneToken":"1","capabilities":{"textDocument":{"publishDiagnostics":{"dataSupport":true,"tagSupport":{"valueSet":[1,2]},"relatedInformation":true},"rangeFormatting":{"dynamicRegistration":true},"diagnostic":{"dynamicRegistration":false},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"completion":{"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false}},"definition":{"dynamicRegistration":true,"linkSupport":true},"synchronization":{"didSave":true,"willSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true},"declaration":{"linkSupport":true},"typeDefinition":{"linkSupport":true},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"semanticTokens":{"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"]},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"rename":{"dynamicRegistration":true,"prepareSupport":true},"implementation":{"linkSupport":true},"codeAction":{"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"workspace":{"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"semanticTokens":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"configuration":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}}},"general":{"positionEncodings":["utf-16"]}},"workspaceFolders":null,"rootPath":null,"trace":"off"},"jsonrpc":"2.0","method":"initialize","id":1}
[seltabl-lsp]2024/06/13 20:42:48 Received message (initialize): {"params":{"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":47475,"workDoneToken":"1","capabilities":{"textDocument":{"publishDiagnostics":{"dataSupport":true,"tagSupport":{"valueSet":[1,2]},"relatedInformation":true},"rangeFormatting":{"dynamicRegistration":true},"diagnostic":{"dynamicRegistration":false},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"completion":{"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false,"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false}},"definition":{"dynamicRegistration":true,"linkSupport":true},"synchronization":{"didSave":true,"willSave":true,"dynamicRegistration":false,"willSaveWaitUntil":true},"declaration":{"linkSupport":true},"typeDefinition":{"linkSupport":true},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"formatting":{"dynamicRegistration":true},"signatureHelp":{"dynamicRegistration":false,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true},"activeParameterSupport":true}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"semanticTokens":{"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false,"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"]},"inlayHint":{"dynamicRegistration":true,"resolveSupport":{"properties":["textEdits","tooltip","location","command"]}},"rename":{"dynamicRegistration":true,"prepareSupport":true},"implementation":{"linkSupport":true},"codeAction":{"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true,"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false}},"window":{"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true},"workDoneProgress":true},"workspace":{"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":true},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"semanticTokens":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"configuration":true,"symbol":{"dynamicRegistration":false,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}}},"general":{"positionEncodings":["utf-16"]}},"workspaceFolders":null,"rootPath":null,"trace":"off"},"jsonrpc":"2.0","method":"initialize","id":1}
[seltabl-lsp]2024/06/13 20:42:48 received initialize request:  [123 34 112 97 114 97 109 115 34 58 123 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 44 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 125 44 34 112 114 111 99 101 115 115 73 100 34 58 52 55 52 55 53 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 44 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 104 111 118 101 114 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 125 44 34 114 101 110 97 109 101 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 125 44 34 119 105 110 100 111 119 34 58 123 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 115 121 109 98 111 108 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 125 125 44 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 125 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 116 114 97 99 101 34 58 34 111 102 102 34 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 105 100 34 58 49 125]
[seltabl-lsp]2024/06/13 20:42:48 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 20:42:48 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 20:42:51 Received message: Content-Length: 52

{"params":{},"jsonrpc":"2.0","method":"initialized"}
[seltabl-lsp]2024/06/13 20:42:51 Received message (initialized): {"params":{},"jsonrpc":"2.0","method":"initialized"}
[seltabl-lsp]2024/06/13 20:42:51 received initialized request:  [123 34 112 97 114 97 109 115 34 58 123 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 125]
[seltabl-lsp]2024/06/13 20:42:51 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 20:42:51 Received message: Content-Length: 1077

{"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","languageId":"go","version":0}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 20:42:51 Received message (textDocument/didOpen): {"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n","languageId":"go","version":0}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 20:42:51 Received didOpen message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 125]
[seltabl-lsp]2024/06/13 20:42:51 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:42:51 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:42:55 Received message: Content-Length: 1088

{"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":4}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:55 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":4}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:55 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:42:55 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:42:55 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:42:56 Received message: Content-Length: 1090

{"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":5}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:56 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":5}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:56 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 92 47 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:42:56 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:42:56 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:42:56 Received message: Content-Length: 1092

{"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":6}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:56 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":6}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:56 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 92 47 92 47 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:42:56 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:42:56 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:42:56 Received message: Content-Length: 1093

{"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/ \n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":7}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:56 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/ \n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":7}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:42:56 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:42:56 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:42:56 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:42:57 Received message: Content-Length: 241

{"params":{"context":{"triggerKind":1},"position":{"line":18,"character":5},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":2}
[seltabl-lsp]2024/06/13 20:42:57 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":18,"character":5},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":2}
[seltabl-lsp]2024/06/13 20:42:57 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 49 56 44 34 99 104 97 114 97 99 116 101 114 34 58 53 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 50 125]
[seltabl-lsp]2024/06/13 20:42:57 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:42:58 Received message (textDocument/completion) and replied:  {{2.0 0x140006c04c8} [{Neovim (BTW) Very cool editor Fun to watch in videos. Don't forget to like & subscribe to streamers using it :)} {html from: https://stats.ncaa.org/game_upload/team_codes A selector for the html} {html head from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head} {html head title from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head title} {html head [name=csrf-param] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head [name=csrf-param]} {html head [name=csrf-token] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head [name=csrf-token]} {html body from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body} {html body div#contentArea from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea} {html body div#contentArea table from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table} {html body div#contentArea table tbody from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody} {html body div#contentArea table tbody tr.heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.heading} {html body div#contentArea table tbody tr.heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.heading td} {html body div#contentArea table tbody tr.grey_heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.grey_heading} {html body div#contentArea table tbody tr.grey_heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.grey_heading td} {html body div#contentArea table tbody tr.row_even from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_even} {html body div#contentArea table tbody tr.row_even td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_even td} {html body div#contentArea table tbody tr.row_odd from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_odd} {html body div#contentArea table tbody tr.row_odd td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_odd td} {html body div#footer from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer} {html body div#footer div from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div} {html body div#footer div span from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div span} {html body div#footer div span [href=http://web1.ncaa.org/web_files/terms_and_conditions.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div span [href=http://web1.ncaa.org/web_files/terms_and_conditions.html]} {html body div#footer div span [href=http://web1.ncaa.org/web_files/privacy.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div span [href=http://web1.ncaa.org/web_files/privacy.html]}]}
[seltabl-lsp]2024/06/13 20:43:21 Received message: Content-Length: 2898

{"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n","languageId":"go","version":0}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 20:43:21 Received message (textDocument/didOpen): {"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n","languageId":"go","version":0}},"jsonrpc":"2.0","method":"textDocument\/didOpen"}
[seltabl-lsp]2024/06/13 20:43:21 Received didOpen message:  [123 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 118 101 114 115 105 111 110 34 58 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 125]
[seltabl-lsp]2024/06/13 20:43:21 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:21 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:33 Received message: Content-Length: 2904

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":3}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:33 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":3}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:33 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:33 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:33 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:34 Received message: Content-Length: 2905

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":4}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:34 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":4}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:34 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:34 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:34 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:34 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":60,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":3}
[seltabl-lsp]2024/06/13 20:43:34 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":60,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":3}
[seltabl-lsp]2024/06/13 20:43:34 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 51 125]
[seltabl-lsp]2024/06/13 20:43:34 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:34 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:34 Received message (textDocument/completion) and replied:  {{2.0 0x140009a3e00} []}
[seltabl-lsp]2024/06/13 20:43:35 Received message: Content-Length: 2906

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":5}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:35 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":5}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:35 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:36 Received message: Content-Length: 2907

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.j[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":6}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:36 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.j[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":6}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:36 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 106 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:36 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:36 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":60,"character":30},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":4}
[seltabl-lsp]2024/06/13 20:43:36 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":60,"character":30},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":4}
[seltabl-lsp]2024/06/13 20:43:36 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 48 44 34 99 104 97 114 97 99 116 101 114 34 58 51 48 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 52 125]
[seltabl-lsp]2024/06/13 20:43:36 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:36 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:36 Received message (textDocument/completion) and replied:  {{2.0 0x140009a3f58} []}
[seltabl-lsp]2024/06/13 20:43:36 Received message: Content-Length: 2906

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":9}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:36 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":9}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:36 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:36 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:36 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:38 Received message: Content-Length: 2902

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", \n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":10}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:38 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", \n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":10}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:38 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:38 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:38 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:39 Received message: Content-Length: 2936

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":11}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:39 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":11}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:39 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:39 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:39 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:39 Received message: Content-Length: 2936

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":13}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:39 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":13}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:39 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:39 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:39 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:40 Received message: Content-Length: 2937

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":14}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:40 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":14}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:40 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:40 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:40 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:40 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":60,"character":76},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":5}
[seltabl-lsp]2024/06/13 20:43:40 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":60,"character":76},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":5}
[seltabl-lsp]2024/06/13 20:43:40 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 48 44 34 99 104 97 114 97 99 116 101 114 34 58 55 54 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 53 125]
[seltabl-lsp]2024/06/13 20:43:40 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:40 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:40 Received message (textDocument/completion) and replied:  {{2.0 0x14000a9e0e8} []}
[seltabl-lsp]2024/06/13 20:43:40 Received message: Content-Length: 2936

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":17}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:40 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":17}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:40 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:40 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:40 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:49 Received message: Content-Length: 2937

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":18}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:49 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":18}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:49 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:49 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:49 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:50 Received message: Content-Length: 2938

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":19}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":19}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:50 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:50 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":62,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":6}
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":62,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":6}
[seltabl-lsp]2024/06/13 20:43:50 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 50 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 54 125]
[seltabl-lsp]2024/06/13 20:43:50 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:50 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/completion) and replied:  {{2.0 0x14000a9e280} []}
[seltabl-lsp]2024/06/13 20:43:50 Received message: Content-Length: 2939

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":20}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":20}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 106 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:50 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:50 Received message: Content-Length: 2940

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%sjk[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":21}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%sjk[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":21}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 106 107 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:50 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:50 Received message: Content-Length: 2938

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":23}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":23}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:50 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:50 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:50 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:53 Received message: Content-Length: 2939

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":24}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:53 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":24}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:53 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 106 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:53 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:53 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":62,"character":29},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":7}
[seltabl-lsp]2024/06/13 20:43:53 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":62,"character":29},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":7}
[seltabl-lsp]2024/06/13 20:43:53 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 50 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 55 125]
[seltabl-lsp]2024/06/13 20:43:53 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:53 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:53 Received message (textDocument/completion) and replied:  {{2.0 0x140000104e8} []}
[seltabl-lsp]2024/06/13 20:43:53 Received message: Content-Length: 2938

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":27}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:53 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":27}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:53 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:53 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:53 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:54 Received message: Content-Length: 2937

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":28}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:54 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":28}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:54 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:54 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:54 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:57 Received message: Content-Length: 2936

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":29}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:57 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", attr\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":29}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:57 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 50 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:57 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:57 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:57 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":62,"character":44},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":8}
[seltabl-lsp]2024/06/13 20:43:57 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":62,"character":44},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":8}
[seltabl-lsp]2024/06/13 20:43:57 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 50 44 34 99 104 97 114 97 99 116 101 114 34 58 52 52 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 56 125]
[seltabl-lsp]2024/06/13 20:43:57 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:57 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:57 Received message (textDocument/completion) and replied:  {{2.0 0x14000010a80} []}
[seltabl-lsp]2024/06/13 20:43:58 Received message: Content-Length: 2935

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", att\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":30}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:58 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", att\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":30}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:58 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 97 116 116 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 51 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:58 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:58 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:58 Received message: Content-Length: 2932

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", \n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":33}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:58 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", \n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":33}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:58 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 51 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:58 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:58 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:58 Received message: Content-Length: 2966

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":34}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:58 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":34}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:58 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 51 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:58 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:58 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:59 Received message: Content-Length: 2966

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":36}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":36}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:59 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 51 54 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:59 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:59 Received message: Content-Length: 2967

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":37}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":37}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:59 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 51 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:59 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:43:59 Received message: Content-Length: 261

{"params":{"context":{"triggerKind":1},"position":{"line":62,"character":75},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":9}
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":62,"character":75},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":9}
[seltabl-lsp]2024/06/13 20:43:59 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 50 44 34 99 104 97 114 97 99 116 101 114 34 58 55 53 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 57 125]
[seltabl-lsp]2024/06/13 20:43:59 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:59 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/completion) and replied:  {{2.0 0x14000a02128} []}
[seltabl-lsp]2024/06/13 20:43:59 Received message: Content-Length: 2966

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":40}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":40}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:43:59 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:43:59 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:43:59 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:04 Received message: Content-Length: 2967

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":41}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:04 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":41}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:04 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:04 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:04 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:04 Received message: Content-Length: 2968

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":42}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:04 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":42}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:04 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 50 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:04 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:04 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:04 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":64,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":10}
[seltabl-lsp]2024/06/13 20:44:04 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":64,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":10}
[seltabl-lsp]2024/06/13 20:44:04 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 52 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 48 125]
[seltabl-lsp]2024/06/13 20:44:04 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:04 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:04 Received message (textDocument/completion) and replied:  {{2.0 0x14000a022c0} []}
[seltabl-lsp]2024/06/13 20:44:05 Received message: Content-Length: 2969

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":43}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:05 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%sj[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":43}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:05 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 106 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:05 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:05 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:05 Received message: Content-Length: 2968

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":46}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:05 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":46}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:05 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 54 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:05 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:05 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:06 Received message: Content-Length: 2967

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", attr\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":47}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", attr\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":47}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:06 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:06 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":64,"character":51},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":11}
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":64,"character":51},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":11}
[seltabl-lsp]2024/06/13 20:44:06 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 52 44 34 99 104 97 114 97 99 116 101 114 34 58 53 49 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 49 125]
[seltabl-lsp]2024/06/13 20:44:06 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:06 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/completion) and replied:  {{2.0 0x14000a02450} []}
[seltabl-lsp]2024/06/13 20:44:06 Received message: Content-Length: 2966

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", att\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":48}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", att\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":48}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 116 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:06 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:06 Received message: Content-Length: 2965

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", at\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":49}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", at\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":49}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 116 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:06 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:06 Received message: Content-Length: 2964

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", a\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":50}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", a\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":50}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:06 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 97 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:06 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:06 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:07 Received message: Content-Length: 2963

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", \n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":51}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:07 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", \n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":51}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:07 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:07 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:07 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:08 Received message: Content-Length: 2997

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":52}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":52}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 50 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:08 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:08 Received message: Content-Length: 2997

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":54}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":54}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:08 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:08 Received message: Content-Length: 2998

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":55}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":55}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 53 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:08 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:08 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":64,"character":82},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":12}
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":64,"character":82},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":12}
[seltabl-lsp]2024/06/13 20:44:08 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 52 44 34 99 104 97 114 97 99 116 101 114 34 58 56 50 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 50 125]
[seltabl-lsp]2024/06/13 20:44:08 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:08 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/completion) and replied:  {{2.0 0x14000a026c0} []}
[seltabl-lsp]2024/06/13 20:44:08 Received message: Content-Length: 2997

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":58}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":58}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:08 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:08 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:08 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:12 Received message: Content-Length: 2998

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":59}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:12 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":59}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:12 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 53 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:12 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:12 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:12 Received message: Content-Length: 2999

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":60}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:12 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":60}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:12 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:12 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:12 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:12 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":66,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":13}
[seltabl-lsp]2024/06/13 20:44:12 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":66,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":13}
[seltabl-lsp]2024/06/13 20:44:12 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 51 125]
[seltabl-lsp]2024/06/13 20:44:12 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:12 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:12 Received message (textDocument/completion) and replied:  {{2.0 0x14000a02850} []}
[seltabl-lsp]2024/06/13 20:44:13 Received message: Content-Length: 3028

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":61}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":61}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:13 Received message: Content-Length: 3028

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":63}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":63}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:13 Received message: Content-Length: 3029

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":64}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":64}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 52 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:13 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":66,"character":76},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":14}
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":66,"character":76},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":14}
[seltabl-lsp]2024/06/13 20:44:13 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 54 44 34 99 104 97 114 97 99 116 101 114 34 58 55 54 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 52 125]
[seltabl-lsp]2024/06/13 20:44:13 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:13 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/completion) and replied:  {{2.0 0x14000a029e0} []}
[seltabl-lsp]2024/06/13 20:44:13 Received message: Content-Length: 3028

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":67}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":67}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:13 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:13 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:13 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:17 Received message: Content-Length: 3029

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":68}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:17 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":68}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:17 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:17 Received message: Content-Length: 3030

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":69}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:17 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":69}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:17 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:17 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:17 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:17 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":68,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":15}
[seltabl-lsp]2024/06/13 20:44:17 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":68,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":15}
[seltabl-lsp]2024/06/13 20:44:17 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 56 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 53 125]
[seltabl-lsp]2024/06/13 20:44:17 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:17 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:17 Received message (textDocument/completion) and replied:  {{2.0 0x14000a9e420} []}
[seltabl-lsp]2024/06/13 20:44:18 Received message: Content-Length: 3059

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":70}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":70}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 48 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:18 Received message: Content-Length: 3059

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":72}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":72}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 50 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:18 Received message: Content-Length: 3060

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":73}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)j\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":73}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 106 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 51 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:18 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":68,"character":74},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":16}
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":68,"character":74},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":16}
[seltabl-lsp]2024/06/13 20:44:18 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 54 56 44 34 99 104 97 114 97 99 116 101 114 34 58 55 52 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 54 125]
[seltabl-lsp]2024/06/13 20:44:18 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:18 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/completion) and replied:  {{2.0 0x14000a9e5b0} []}
[seltabl-lsp]2024/06/13 20:44:18 Received message: Content-Length: 3059

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":76}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":76}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:18 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 54 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:18 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:18 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:22 Received message: Content-Length: 3060

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":77}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:22 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":77}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:22 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 55 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:22 Received message: Content-Length: 3061

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":78}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:22 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":78}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:22 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 104 114 101 102 61 37 115 93 92 34 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:22 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:22 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:22 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":70,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":17}
[seltabl-lsp]2024/06/13 20:44:22 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":70,"character":28},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":17}
[seltabl-lsp]2024/06/13 20:44:22 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 55 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 55 125]
[seltabl-lsp]2024/06/13 20:44:22 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:22 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:22 Received message (textDocument/completion) and replied:  {{2.0 0x14000a9e740} []}
[seltabl-lsp]2024/06/13 20:44:24 Received message: Content-Length: 3090

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":79}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":79}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:24 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 104 114 101 102 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:24 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:24 Received message: Content-Length: 3090

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":81}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":81}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:24 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 104 114 101 102 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 56 49 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:24 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:24 Received message: Content-Length: 3091

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)j\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":82}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)j\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":82}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:24 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 104 114 101 102 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 106 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 56 50 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:24 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:24 Received message: Content-Length: 262

{"params":{"context":{"triggerKind":1},"position":{"line":70,"character":75},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":18}
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/completion): {"params":{"context":{"triggerKind":1},"position":{"line":70,"character":75},"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/completion","id":18}
[seltabl-lsp]2024/06/13 20:44:24 Received completion message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 55 48 44 34 99 104 97 114 97 99 116 101 114 34 58 55 53 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 105 100 34 58 49 56 125]
[seltabl-lsp]2024/06/13 20:44:24 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:24 failed to extract urls: no urls found in file
[seltabl-lsp]2024/06/13 20:44:24 Received message (textDocument/completion) and replied:  {{2.0 0x14000a9e8d0} []}
[seltabl-lsp]2024/06/13 20:44:25 Received message: Content-Length: 3090

{"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":85}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:25 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"package parsers\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com\/PuerkitoBio\/goquery\"\n)\n\n\/\/ GetAllSelectors retrieves all selectors from the given HTML document\nfunc GetAllSelectors(doc *goquery.Document) []string {\n\tstrs := []string{}\n\tdoc.Find(\"*\").Each(func(i int, s *goquery.Selection) {\n\t\tstr := getSelectorsFromSelection(s)\n\t\tif str != \"\" {\n\t\t\tfound := false\n\t\t\tfor _, str2 := range strs {\n\t\t\t\tif str2 == str {\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif !found {\n\t\t\t\tstrs = append(strs, str)\n\t\t\t}\n\t\t}\n\t})\n\treturn strs\n}\n\n\/\/ getSelectorsFromSelection returns the CSS selector for the given goquery selection\nfunc getSelectorsFromSelection(s *goquery.Selection) string {\n\tif s.Length() == 0 {\n\t\treturn \"\"\n\t}\n\t\/\/ Get the parent node\n\tparent := s.Parent()\n\t\/\/ Recursive call for the parent\n\tparentSelector := getSelectorsFromSelection(parent)\n\t\/\/ Get the selector for the current node\n\tcurrentSelector := singleSelector(s)\n\t\/\/ Combine the parent and current selectors\n\t\/\/ should output html body div#ContentArea table tbody tr.heading td a[href=https:\/\/example.com]\n\tif parentSelector != \"\" && currentSelector != \"\" {\n\t\treturn parentSelector + \" \" + currentSelector\n\t} else if parentSelector != \"\" && currentSelector == \"\" {\n\t\treturn parentSelector\n\t}\n\treturn currentSelector\n}\n\n\/\/ singleSelector returns a single CSS selector for the given node\nfunc singleSelector(selection *goquery.Selection) string {\n\tvar selector string\n\n\tif id, exists := selection.Attr(\"id\"); exists {\n\t\tselector = fmt.Sprintf(\"%s#%s\", goquery.NodeName(selection), id)\n\t} else if class, exists := selection.Attr(\"class\"); exists {\n\t\tselector = fmt.Sprintf(\"%s.%s\", goquery.NodeName(selection), strings.Join(strings.Fields(class), \".\"))\n\t} else if attr, exists := selection.Attr(\"name\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[name=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"type\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[type=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"placeholder\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[placeholder=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"value\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[value=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"src\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[src=%s]\", goquery.NodeName(selection), attr)\n\t} else if attr, exists := selection.Attr(\"href\"); exists {\n\t\tselector = fmt.Sprintf(\"%s[href=%s]\", goquery.NodeName(selection), attr)\n\t} else {\n\t\tselector = goquery.NodeName(selection)\n\t}\n\n\treturn selector\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go","version":85}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:25 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 112 97 99 107 97 103 101 32 112 97 114 115 101 114 115 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 115 116 114 105 110 103 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 80 117 101 114 107 105 116 111 66 105 111 92 47 103 111 113 117 101 114 121 92 34 92 110 41 92 110 92 110 92 47 92 47 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 32 114 101 116 114 105 101 118 101 115 32 97 108 108 32 115 101 108 101 99 116 111 114 115 32 102 114 111 109 32 116 104 101 32 103 105 118 101 110 32 72 84 77 76 32 100 111 99 117 109 101 110 116 92 110 102 117 110 99 32 71 101 116 65 108 108 83 101 108 101 99 116 111 114 115 40 100 111 99 32 42 103 111 113 117 101 114 121 46 68 111 99 117 109 101 110 116 41 32 91 93 115 116 114 105 110 103 32 123 92 110 92 116 115 116 114 115 32 58 61 32 91 93 115 116 114 105 110 103 123 125 92 110 92 116 100 111 99 46 70 105 110 100 40 92 34 42 92 34 41 46 69 97 99 104 40 102 117 110 99 40 105 32 105 110 116 44 32 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 123 92 110 92 116 92 116 115 116 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 41 92 110 92 116 92 116 105 102 32 115 116 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 92 116 102 111 117 110 100 32 58 61 32 102 97 108 115 101 92 110 92 116 92 116 92 116 102 111 114 32 95 44 32 115 116 114 50 32 58 61 32 114 97 110 103 101 32 115 116 114 115 32 123 92 110 92 116 92 116 92 116 92 116 105 102 32 115 116 114 50 32 61 61 32 115 116 114 32 123 92 110 92 116 92 116 92 116 92 116 92 116 102 111 117 110 100 32 61 32 116 114 117 101 92 110 92 116 92 116 92 116 92 116 92 116 98 114 101 97 107 92 110 92 116 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 92 116 105 102 32 33 102 111 117 110 100 32 123 92 110 92 116 92 116 92 116 92 116 115 116 114 115 32 61 32 97 112 112 101 110 100 40 115 116 114 115 44 32 115 116 114 41 92 110 92 116 92 116 92 116 125 92 110 92 116 92 116 125 92 110 92 116 125 41 92 110 92 116 114 101 116 117 114 110 32 115 116 114 115 92 110 125 92 110 92 110 92 47 92 47 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 32 114 101 116 117 114 110 115 32 116 104 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 103 111 113 117 101 114 121 32 115 101 108 101 99 116 105 111 110 92 110 102 117 110 99 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 115 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 105 102 32 115 46 76 101 110 103 116 104 40 41 32 61 61 32 48 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 92 34 92 34 92 110 92 116 125 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 112 97 114 101 110 116 32 110 111 100 101 92 110 92 116 112 97 114 101 110 116 32 58 61 32 115 46 80 97 114 101 110 116 40 41 92 110 92 116 92 47 92 47 32 82 101 99 117 114 115 105 118 101 32 99 97 108 108 32 102 111 114 32 116 104 101 32 112 97 114 101 110 116 92 110 92 116 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 103 101 116 83 101 108 101 99 116 111 114 115 70 114 111 109 83 101 108 101 99 116 105 111 110 40 112 97 114 101 110 116 41 92 110 92 116 92 47 92 47 32 71 101 116 32 116 104 101 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 99 117 114 114 101 110 116 32 110 111 100 101 92 110 92 116 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 58 61 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 41 92 110 92 116 92 47 92 47 32 67 111 109 98 105 110 101 32 116 104 101 32 112 97 114 101 110 116 32 97 110 100 32 99 117 114 114 101 110 116 32 115 101 108 101 99 116 111 114 115 92 110 92 116 92 47 92 47 32 115 104 111 117 108 100 32 111 117 116 112 117 116 32 104 116 109 108 32 98 111 100 121 32 100 105 118 35 67 111 110 116 101 110 116 65 114 101 97 32 116 97 98 108 101 32 116 98 111 100 121 32 116 114 46 104 101 97 100 105 110 103 32 116 100 32 97 91 104 114 101 102 61 104 116 116 112 115 58 92 47 92 47 101 120 97 109 112 108 101 46 99 111 109 93 92 110 92 116 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 43 32 92 34 32 92 34 32 43 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 32 101 108 115 101 32 105 102 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 32 33 61 32 92 34 92 34 32 38 38 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 32 61 61 32 92 34 92 34 32 123 92 110 92 116 92 116 114 101 116 117 114 110 32 112 97 114 101 110 116 83 101 108 101 99 116 111 114 92 110 92 116 125 92 110 92 116 114 101 116 117 114 110 32 99 117 114 114 101 110 116 83 101 108 101 99 116 111 114 92 110 125 92 110 92 110 92 47 92 47 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 32 114 101 116 117 114 110 115 32 97 32 115 105 110 103 108 101 32 67 83 83 32 115 101 108 101 99 116 111 114 32 102 111 114 32 116 104 101 32 103 105 118 101 110 32 110 111 100 101 92 110 102 117 110 99 32 115 105 110 103 108 101 83 101 108 101 99 116 111 114 40 115 101 108 101 99 116 105 111 110 32 42 103 111 113 117 101 114 121 46 83 101 108 101 99 116 105 111 110 41 32 115 116 114 105 110 103 32 123 92 110 92 116 118 97 114 32 115 101 108 101 99 116 111 114 32 115 116 114 105 110 103 92 110 92 110 92 116 105 102 32 105 100 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 105 100 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 35 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 105 100 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 99 108 97 115 115 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 99 108 97 115 115 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 46 37 115 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 115 116 114 105 110 103 115 46 74 111 105 110 40 115 116 114 105 110 103 115 46 70 105 101 108 100 115 40 99 108 97 115 115 41 44 32 92 34 46 92 34 41 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 110 97 109 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 110 97 109 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 116 121 112 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 116 121 112 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 112 108 97 99 101 104 111 108 100 101 114 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 112 108 97 99 101 104 111 108 100 101 114 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 118 97 108 117 101 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 118 97 108 117 101 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 115 114 99 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 115 114 99 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 105 102 32 97 116 116 114 44 32 101 120 105 115 116 115 32 58 61 32 115 101 108 101 99 116 105 111 110 46 65 116 116 114 40 92 34 104 114 101 102 92 34 41 59 32 101 120 105 115 116 115 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 102 109 116 46 83 112 114 105 110 116 102 40 92 34 37 115 91 104 114 101 102 61 37 115 93 92 34 44 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 44 32 97 116 116 114 41 92 110 92 116 125 32 101 108 115 101 32 123 92 110 92 116 92 116 115 101 108 101 99 116 111 114 32 61 32 103 111 113 117 101 114 121 46 78 111 100 101 78 97 109 101 40 115 101 108 101 99 116 105 111 110 41 92 110 92 116 125 92 110 92 110 92 116 114 101 116 117 114 110 32 115 101 108 101 99 116 111 114 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 112 107 103 92 47 112 97 114 115 101 114 115 92 47 115 101 108 101 99 116 111 114 115 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 56 53 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:25 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go
[seltabl-lsp]2024/06/13 20:44:25 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/pkg/parsers/selectors.go []}}
[seltabl-lsp]2024/06/13 20:44:25 Received message: Content-Length: 185

{"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 20:44:25 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 20:44:25 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:44:32 Received message: Content-Length: 185

{"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 20:44:32 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/pkg\/parsers\/selectors.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 20:44:32 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:44:33 Starting the server...
[seltabl-lsp]2024/06/13 20:44:34 Starting the server...
[seltabl-lsp]2024/06/13 20:44:35 Received message: Content-Length: 1082

{"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":8}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:35 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":8}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:35 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 56 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:44:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:44:35 Received message: Content-Length: 1092

{"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":9}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:35 Received message (textDocument/didChange): {"params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":9}},"jsonrpc":"2.0","method":"textDocument\/didChange"}
[seltabl-lsp]2024/06/13 20:44:35 Received didChange message:  [123 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 92 47 92 47 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 57 125 125 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 125]
[seltabl-lsp]2024/06/13 20:44:35 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:44:35 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:44:35 Received message: Content-Length: 166

{"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 20:44:35 Received message (textDocument/didSave): {"params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}},"jsonrpc":"2.0","method":"textDocument\/didSave"}
[seltabl-lsp]2024/06/13 20:44:35 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:44:35 Received message: Content-Length: 45

{"jsonrpc":"2.0","method":"shutdown","id":19}
[seltabl-lsp]2024/06/13 20:44:35 Received message (shutdown): {"jsonrpc":"2.0","method":"shutdown","id":19}
[seltabl-lsp]2024/06/13 20:44:35 Unknown method:  shutdown
[seltabl-lsp]2024/06/13 20:44:38 Starting the server...
[seltabl-lsp]2024/06/13 20:44:38 Received message: Content-Length: 3585

{"method":"initialize","jsonrpc":"2.0","params":{"capabilities":{"general":{"positionEncodings":["utf-16"]},"textDocument":{"implementation":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"declaration":{"linkSupport":true},"completion":{"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false},"semanticTokens":{"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"dataSupport":true,"tagSupport":{"valueSet":[1,2]}},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"synchronization":{"willSaveWaitUntil":true,"didSave":true,"willSave":true,"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"signatureHelp":{"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":false},"typeDefinition":{"linkSupport":true},"definition":{"linkSupport":true,"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true}},"workspace":{"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"semanticTokens":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"configuration":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":true}}},"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":52832,"workDoneToken":"1","trace":"off","rootPath":null,"workspaceFolders":null},"id":1}
[seltabl-lsp]2024/06/13 20:44:38 Received message (initialize): {"method":"initialize","jsonrpc":"2.0","params":{"capabilities":{"general":{"positionEncodings":["utf-16"]},"textDocument":{"implementation":{"linkSupport":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"declaration":{"linkSupport":true},"completion":{"contextSupport":false,"completionList":{"itemDefaults":["editRange","insertTextFormat","insertTextMode","data"]},"completionItem":{"documentationFormat":["markdown","plaintext"],"deprecatedSupport":false,"preselectSupport":false,"commitCharactersSupport":false,"snippetSupport":false},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"dynamicRegistration":false},"semanticTokens":{"augmentsSyntaxTokens":true,"serverCancelSupport":false,"multilineTokenSupport":false,"overlappingTokenSupport":true,"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator"],"requests":{"range":false,"full":{"delta":true}},"formats":["relative"],"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"dynamicRegistration":false},"inlayHint":{"resolveSupport":{"properties":["textEdits","tooltip","location","command"]},"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":false},"publishDiagnostics":{"relatedInformation":true,"dataSupport":true,"tagSupport":{"valueSet":[1,2]}},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"codeAction":{"dataSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dynamicRegistration":true,"resolveSupport":{"properties":["edit"]},"isPreferredSupport":true},"documentSymbol":{"hierarchicalDocumentSymbolSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"documentHighlight":{"dynamicRegistration":false},"references":{"dynamicRegistration":false},"synchronization":{"willSaveWaitUntil":true,"didSave":true,"willSave":true,"dynamicRegistration":false},"diagnostic":{"dynamicRegistration":false},"signatureHelp":{"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":false},"typeDefinition":{"linkSupport":true},"definition":{"linkSupport":true,"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{"messageActionItem":{"additionalPropertiesSupport":false}},"showDocument":{"support":true}},"workspace":{"symbol":{"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"dynamicRegistration":false},"workspaceEdit":{"resourceOperations":["rename","create","delete"]},"didChangeConfiguration":{"dynamicRegistration":false},"workspaceFolders":true,"applyEdit":true,"semanticTokens":{"refreshSupport":true},"inlayHint":{"refreshSupport":true},"configuration":true,"didChangeWatchedFiles":{"relativePatternSupport":true,"dynamicRegistration":true}}},"rootUri":null,"clientInfo":{"version":"0.10.0-dev","name":"Neovim"},"processId":52832,"workDoneToken":"1","trace":"off","rootPath":null,"workspaceFolders":null},"id":1}
[seltabl-lsp]2024/06/13 20:44:38 received initialize request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 97 112 97 98 105 108 105 116 105 101 115 34 58 123 34 103 101 110 101 114 97 108 34 58 123 34 112 111 115 105 116 105 111 110 69 110 99 111 100 105 110 103 115 34 58 91 34 117 116 102 45 49 54 34 93 125 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 105 109 112 108 101 109 101 110 116 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 114 101 110 97 109 101 34 58 123 34 112 114 101 112 97 114 101 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 100 101 99 108 97 114 97 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 109 112 108 101 116 105 111 110 34 58 123 34 99 111 110 116 101 120 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 112 108 101 116 105 111 110 76 105 115 116 34 58 123 34 105 116 101 109 68 101 102 97 117 108 116 115 34 58 91 34 101 100 105 116 82 97 110 103 101 34 44 34 105 110 115 101 114 116 84 101 120 116 70 111 114 109 97 116 34 44 34 105 110 115 101 114 116 84 101 120 116 77 111 100 101 34 44 34 100 97 116 97 34 93 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 34 58 123 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 101 112 114 101 99 97 116 101 100 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 112 114 101 115 101 108 101 99 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 99 111 109 109 105 116 67 104 97 114 97 99 116 101 114 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 115 110 105 112 112 101 116 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 44 34 99 111 109 112 108 101 116 105 111 110 73 116 101 109 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 97 117 103 109 101 110 116 115 83 121 110 116 97 120 84 111 107 101 110 115 34 58 116 114 117 101 44 34 115 101 114 118 101 114 67 97 110 99 101 108 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 109 117 108 116 105 108 105 110 101 84 111 107 101 110 83 117 112 112 111 114 116 34 58 102 97 108 115 101 44 34 111 118 101 114 108 97 112 112 105 110 103 84 111 107 101 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 111 107 101 110 84 121 112 101 115 34 58 91 34 110 97 109 101 115 112 97 99 101 34 44 34 116 121 112 101 34 44 34 99 108 97 115 115 34 44 34 101 110 117 109 34 44 34 105 110 116 101 114 102 97 99 101 34 44 34 115 116 114 117 99 116 34 44 34 116 121 112 101 80 97 114 97 109 101 116 101 114 34 44 34 112 97 114 97 109 101 116 101 114 34 44 34 118 97 114 105 97 98 108 101 34 44 34 112 114 111 112 101 114 116 121 34 44 34 101 110 117 109 77 101 109 98 101 114 34 44 34 101 118 101 110 116 34 44 34 102 117 110 99 116 105 111 110 34 44 34 109 101 116 104 111 100 34 44 34 109 97 99 114 111 34 44 34 107 101 121 119 111 114 100 34 44 34 109 111 100 105 102 105 101 114 34 44 34 99 111 109 109 101 110 116 34 44 34 115 116 114 105 110 103 34 44 34 110 117 109 98 101 114 34 44 34 114 101 103 101 120 112 34 44 34 111 112 101 114 97 116 111 114 34 44 34 100 101 99 111 114 97 116 111 114 34 93 44 34 114 101 113 117 101 115 116 115 34 58 123 34 114 97 110 103 101 34 58 102 97 108 115 101 44 34 102 117 108 108 34 58 123 34 100 101 108 116 97 34 58 116 114 117 101 125 125 44 34 102 111 114 109 97 116 115 34 58 91 34 114 101 108 97 116 105 118 101 34 93 44 34 116 111 107 101 110 77 111 100 105 102 105 101 114 115 34 58 91 34 100 101 99 108 97 114 97 116 105 111 110 34 44 34 100 101 102 105 110 105 116 105 111 110 34 44 34 114 101 97 100 111 110 108 121 34 44 34 115 116 97 116 105 99 34 44 34 100 101 112 114 101 99 97 116 101 100 34 44 34 97 98 115 116 114 97 99 116 34 44 34 97 115 121 110 99 34 44 34 109 111 100 105 102 105 99 97 116 105 111 110 34 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 34 44 34 100 101 102 97 117 108 116 76 105 98 114 97 114 121 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 116 101 120 116 69 100 105 116 115 34 44 34 116 111 111 108 116 105 112 34 44 34 108 111 99 97 116 105 111 110 34 44 34 99 111 109 109 97 110 100 34 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 102 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 97 108 108 72 105 101 114 97 114 99 104 121 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 112 117 98 108 105 115 104 68 105 97 103 110 111 115 116 105 99 115 34 58 123 34 114 101 108 97 116 101 100 73 110 102 111 114 109 97 116 105 111 110 34 58 116 114 117 101 44 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 116 97 103 83 117 112 112 111 114 116 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 93 125 125 44 34 104 111 118 101 114 34 58 123 34 99 111 110 116 101 110 116 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 114 97 110 103 101 70 111 114 109 97 116 116 105 110 103 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 44 34 99 111 100 101 65 99 116 105 111 110 34 58 123 34 100 97 116 97 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 99 111 100 101 65 99 116 105 111 110 76 105 116 101 114 97 108 83 117 112 112 111 114 116 34 58 123 34 99 111 100 101 65 99 116 105 111 110 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 34 34 44 34 113 117 105 99 107 102 105 120 34 44 34 114 101 102 97 99 116 111 114 34 44 34 114 101 102 97 99 116 111 114 46 101 120 116 114 97 99 116 34 44 34 114 101 102 97 99 116 111 114 46 105 110 108 105 110 101 34 44 34 114 101 102 97 99 116 111 114 46 114 101 119 114 105 116 101 34 44 34 115 111 117 114 99 101 34 44 34 115 111 117 114 99 101 46 111 114 103 97 110 105 122 101 73 109 112 111 114 116 115 34 93 125 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 44 34 114 101 115 111 108 118 101 83 117 112 112 111 114 116 34 58 123 34 112 114 111 112 101 114 116 105 101 115 34 58 91 34 101 100 105 116 34 93 125 44 34 105 115 80 114 101 102 101 114 114 101 100 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 111 99 117 109 101 110 116 83 121 109 98 111 108 34 58 123 34 104 105 101 114 97 114 99 104 105 99 97 108 68 111 99 117 109 101 110 116 83 121 109 98 111 108 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 111 99 117 109 101 110 116 72 105 103 104 108 105 103 104 116 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 114 101 102 101 114 101 110 99 101 115 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 121 110 99 104 114 111 110 105 122 97 116 105 111 110 34 58 123 34 119 105 108 108 83 97 118 101 87 97 105 116 85 110 116 105 108 34 58 116 114 117 101 44 34 100 105 100 83 97 118 101 34 58 116 114 117 101 44 34 119 105 108 108 83 97 118 101 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 100 105 97 103 110 111 115 116 105 99 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 115 105 103 110 97 116 117 114 101 72 101 108 112 34 58 123 34 115 105 103 110 97 116 117 114 101 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 97 99 116 105 118 101 80 97 114 97 109 101 116 101 114 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 111 99 117 109 101 110 116 97 116 105 111 110 70 111 114 109 97 116 34 58 91 34 109 97 114 107 100 111 119 110 34 44 34 112 108 97 105 110 116 101 120 116 34 93 44 34 112 97 114 97 109 101 116 101 114 73 110 102 111 114 109 97 116 105 111 110 34 58 123 34 108 97 98 101 108 79 102 102 115 101 116 83 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 116 121 112 101 68 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 100 101 102 105 110 105 116 105 111 110 34 58 123 34 108 105 110 107 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 125 44 34 119 105 110 100 111 119 34 58 123 34 119 111 114 107 68 111 110 101 80 114 111 103 114 101 115 115 34 58 116 114 117 101 44 34 115 104 111 119 77 101 115 115 97 103 101 34 58 123 34 109 101 115 115 97 103 101 65 99 116 105 111 110 73 116 101 109 34 58 123 34 97 100 100 105 116 105 111 110 97 108 80 114 111 112 101 114 116 105 101 115 83 117 112 112 111 114 116 34 58 102 97 108 115 101 125 125 44 34 115 104 111 119 68 111 99 117 109 101 110 116 34 58 123 34 115 117 112 112 111 114 116 34 58 116 114 117 101 125 125 44 34 119 111 114 107 115 112 97 99 101 34 58 123 34 115 121 109 98 111 108 34 58 123 34 115 121 109 98 111 108 75 105 110 100 34 58 123 34 118 97 108 117 101 83 101 116 34 58 91 49 44 50 44 51 44 52 44 53 44 54 44 55 44 56 44 57 44 49 48 44 49 49 44 49 50 44 49 51 44 49 52 44 49 53 44 49 54 44 49 55 44 49 56 44 49 57 44 50 48 44 50 49 44 50 50 44 50 51 44 50 52 44 50 53 44 50 54 93 125 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 69 100 105 116 34 58 123 34 114 101 115 111 117 114 99 101 79 112 101 114 97 116 105 111 110 115 34 58 91 34 114 101 110 97 109 101 34 44 34 99 114 101 97 116 101 34 44 34 100 101 108 101 116 101 34 93 125 44 34 100 105 100 67 104 97 110 103 101 67 111 110 102 105 103 117 114 97 116 105 111 110 34 58 123 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 102 97 108 115 101 125 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 116 114 117 101 44 34 97 112 112 108 121 69 100 105 116 34 58 116 114 117 101 44 34 115 101 109 97 110 116 105 99 84 111 107 101 110 115 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 105 110 108 97 121 72 105 110 116 34 58 123 34 114 101 102 114 101 115 104 83 117 112 112 111 114 116 34 58 116 114 117 101 125 44 34 99 111 110 102 105 103 117 114 97 116 105 111 110 34 58 116 114 117 101 44 34 100 105 100 67 104 97 110 103 101 87 97 116 99 104 101 100 70 105 108 101 115 34 58 123 34 114 101 108 97 116 105 118 101 80 97 116 116 101 114 110 83 117 112 112 111 114 116 34 58 116 114 117 101 44 34 100 121 110 97 109 105 99 82 101 103 105 115 116 114 97 116 105 111 110 34 58 116 114 117 101 125 125 125 44 34 114 111 111 116 85 114 105 34 58 110 117 108 108 44 34 99 108 105 101 110 116 73 110 102 111 34 58 123 34 118 101 114 115 105 111 110 34 58 34 48 46 49 48 46 48 45 100 101 118 34 44 34 110 97 109 101 34 58 34 78 101 111 118 105 109 34 125 44 34 112 114 111 99 101 115 115 73 100 34 58 53 50 56 51 50 44 34 119 111 114 107 68 111 110 101 84 111 107 101 110 34 58 34 49 34 44 34 116 114 97 99 101 34 58 34 111 102 102 34 44 34 114 111 111 116 80 97 116 104 34 58 110 117 108 108 44 34 119 111 114 107 115 112 97 99 101 70 111 108 100 101 114 115 34 58 110 117 108 108 125 44 34 105 100 34 58 49 125]
[seltabl-lsp]2024/06/13 20:44:38 Connected to: Neovim 0.10.0-dev
[seltabl-lsp]2024/06/13 20:44:38 Received message (initialize) and replied:  Content-Length: 244

{"jsonrpc":"2.0","id":1,"result":{"capabilities":{"textDocumentSync":1,"hoverProvider":true,"definitionProvider":true,"codeActionProvider":true,"completionProvider":{}},"serverInfo":{"name":"educationalsp","version":"0.0.0.0.0.0-beta1.final"}}}
[seltabl-lsp]2024/06/13 20:44:40 Received message: Content-Length: 52

{"method":"initialized","jsonrpc":"2.0","params":{}}
[seltabl-lsp]2024/06/13 20:44:40 Received message (initialized): {"method":"initialized","jsonrpc":"2.0","params":{}}
[seltabl-lsp]2024/06/13 20:44:40 received initialized request:  [123 34 109 101 116 104 111 100 34 58 34 105 110 105 116 105 97 108 105 122 101 100 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 125 125]
[seltabl-lsp]2024/06/13 20:44:40 Recovered from panic: runtime error: invalid memory address or nil pointer dereference
[seltabl-lsp]2024/06/13 20:44:40 Received message: Content-Length: 1087

{"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"version":0,"languageId":"go","uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}}}
[seltabl-lsp]2024/06/13 20:44:40 Received message (textDocument/didOpen): {"method":"textDocument\/didOpen","jsonrpc":"2.0","params":{"textDocument":{"version":0,"languageId":"go","uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\t\/\/\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}}}
[seltabl-lsp]2024/06/13 20:44:40 Received didOpen message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 79 112 101 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 118 101 114 115 105 111 110 34 58 48 44 34 108 97 110 103 117 97 103 101 73 100 34 58 34 103 111 34 44 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 92 47 92 47 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 125 125]
[seltabl-lsp]2024/06/13 20:44:40 Opened: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:44:40 Received message (textDocument/didOpen) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:44:41 Starting the server...
[seltabl-lsp]2024/06/13 20:44:47 Received message: Content-Length: 1082

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":4}}}
[seltabl-lsp]2024/06/13 20:44:47 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":4}}}
[seltabl-lsp]2024/06/13 20:44:47 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 52 125 125 125]
[seltabl-lsp]2024/06/13 20:44:47 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:44:47 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:44:47 Received message: Content-Length: 166

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:44:47 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:44:47 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:44:53 Starting the server...
[seltabl-lsp]2024/06/13 20:46:06 Received message: Content-Length: 1088

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":6}}}
[seltabl-lsp]2024/06/13 20:46:06 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":6}}}
[seltabl-lsp]2024/06/13 20:46:06 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 54 125 125 125]
[seltabl-lsp]2024/06/13 20:46:06 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:46:06 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:46:06 Received message: Content-Length: 1090

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":7}}}
[seltabl-lsp]2024/06/13 20:46:06 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":7}}}
[seltabl-lsp]2024/06/13 20:46:06 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 55 125 125 125]
[seltabl-lsp]2024/06/13 20:46:06 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:46:06 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:46:07 Received message: Content-Length: 1092

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":8}}}
[seltabl-lsp]2024/06/13 20:46:07 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":8}}}
[seltabl-lsp]2024/06/13 20:46:07 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 47 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 56 125 125 125]
[seltabl-lsp]2024/06/13 20:46:07 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:46:07 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:46:07 Received message: Content-Length: 1094

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":9}}}
[seltabl-lsp]2024/06/13 20:46:07 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":9}}}
[seltabl-lsp]2024/06/13 20:46:07 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 47 92 47 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 57 125 125 125]
[seltabl-lsp]2024/06/13 20:46:07 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:46:07 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:46:08 Received message: Content-Length: 1096

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/ \n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":10}}}
[seltabl-lsp]2024/06/13 20:46:08 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/ \n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":10}}}
[seltabl-lsp]2024/06/13 20:46:08 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 48 125 125 125]
[seltabl-lsp]2024/06/13 20:46:08 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:46:08 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:46:09 Received message: Content-Length: 241

{"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"position":{"line":20,"character":6},"context":{"triggerKind":1}},"id":2}
[seltabl-lsp]2024/06/13 20:46:09 Received message (textDocument/completion): {"method":"textDocument\/completion","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"},"position":{"line":20,"character":6},"context":{"triggerKind":1}},"id":2}
[seltabl-lsp]2024/06/13 20:46:09 Received completion message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 99 111 109 112 108 101 116 105 111 110 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 125 44 34 112 111 115 105 116 105 111 110 34 58 123 34 108 105 110 101 34 58 50 48 44 34 99 104 97 114 97 99 116 101 114 34 58 54 125 44 34 99 111 110 116 101 120 116 34 58 123 34 116 114 105 103 103 101 114 75 105 110 100 34 58 49 125 125 44 34 105 100 34 58 50 125]
[seltabl-lsp]2024/06/13 20:46:09 Received text document completion uri: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:46:09 Received message (textDocument/completion) and replied:  {{2.0 0x1400057b4e8} [{Neovim (BTW) Very cool editor Fun to watch in videos. Don't forget to like & subscribe to streamers using it :)} {html from: https://stats.ncaa.org/game_upload/team_codes A selector for the html} {html head from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head} {html head title from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head title} {html head meta[name=csrf-param] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head meta[name=csrf-param]} {html head meta[name=csrf-token] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html head meta[name=csrf-token]} {html body from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body} {html body div#contentArea from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea} {html body div#contentArea table from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table} {html body div#contentArea table tbody from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody} {html body div#contentArea table tbody tr.heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.heading} {html body div#contentArea table tbody tr.heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.heading td} {html body div#contentArea table tbody tr.grey_heading from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.grey_heading} {html body div#contentArea table tbody tr.grey_heading td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.grey_heading td} {html body div#contentArea table tbody tr.row_even from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_even} {html body div#contentArea table tbody tr.row_even td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_even td} {html body div#contentArea table tbody tr.row_odd from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_odd} {html body div#contentArea table tbody tr.row_odd td from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#contentArea table tbody tr.row_odd td} {html body div#footer from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer} {html body div#footer div from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div} {html body div#footer div span from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div span} {html body div#footer div span a[href=http://web1.ncaa.org/web_files/terms_and_conditions.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div span a[href=http://web1.ncaa.org/web_files/terms_and_conditions.html]} {html body div#footer div span a[href=http://web1.ncaa.org/web_files/privacy.html] from: https://stats.ncaa.org/game_upload/team_codes A selector for the html body div#footer div span a[href=http://web1.ncaa.org/web_files/privacy.html]}]}
[seltabl-lsp]2024/06/13 20:48:15 Received message: Content-Length: 1097

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/ j\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":11}}}
[seltabl-lsp]2024/06/13 20:48:15 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/ j\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":11}}}
[seltabl-lsp]2024/06/13 20:48:15 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 47 92 47 32 106 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 49 125 125 125]
[seltabl-lsp]2024/06/13 20:48:15 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:48:15 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:48:15 Received message: Content-Length: 1096

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/ \n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":14}}}
[seltabl-lsp]2024/06/13 20:48:15 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\t\/\/ \n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":14}}}
[seltabl-lsp]2024/06/13 20:48:15 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 92 47 92 47 32 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 52 125 125 125]
[seltabl-lsp]2024/06/13 20:48:15 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:48:15 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:48:16 Received message: Content-Length: 1083

{"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":15}}}
[seltabl-lsp]2024/06/13 20:48:16 Received message (textDocument/didChange): {"method":"textDocument\/didChange","jsonrpc":"2.0","params":{"contentChanges":[{"text":"\/\/ Package main is the entry point for the command line tool\n\/\/ a language server for the seltabl package\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com\/conneroisu\/seltabl\/tools\/cmd\"\n)\n\n\/\/ main is the entry point for the command line tool, a\n\/\/ language server for the seltabl package\n\/\/ @url: https:\/\/stats.ncaa.org\/game_upload\/team_codes\n\/\/ @ignore-elements: script, style, link, img, footer, header\nfunc main() {\n\tif err := cmd.Execute(); err != nil {\n\t\t\/\/ log to logs.txt\n\t\tfile, err := os.OpenFile(\"logs.txt\", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0666)\n\t\tif err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tos.Exit(1)\n\t\t}\n\t\tdefer file.Close()\n\t\t_, err = fmt.Println(err)\n\t\tif err != nil {\n\t\t\tfile.WriteString(err.Error())\n\t\t}\n\t\tfmt.Fprintf(file, \"%s\\n\", err)\n\t\tos.Exit(1)\n\t}\n}\n"}],"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go","version":15}}}
[seltabl-lsp]2024/06/13 20:48:16 Received didChange message:  [123 34 109 101 116 104 111 100 34 58 34 116 101 120 116 68 111 99 117 109 101 110 116 92 47 100 105 100 67 104 97 110 103 101 34 44 34 106 115 111 110 114 112 99 34 58 34 50 46 48 34 44 34 112 97 114 97 109 115 34 58 123 34 99 111 110 116 101 110 116 67 104 97 110 103 101 115 34 58 91 123 34 116 101 120 116 34 58 34 92 47 92 47 32 80 97 99 107 97 103 101 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 92 110 92 47 92 47 32 97 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 112 97 99 107 97 103 101 32 109 97 105 110 92 110 92 110 105 109 112 111 114 116 32 40 92 110 92 116 92 34 102 109 116 92 34 92 110 92 116 92 34 111 115 92 34 92 110 92 110 92 116 92 34 103 105 116 104 117 98 46 99 111 109 92 47 99 111 110 110 101 114 111 105 115 117 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 99 109 100 92 34 92 110 41 92 110 92 110 92 47 92 47 32 109 97 105 110 32 105 115 32 116 104 101 32 101 110 116 114 121 32 112 111 105 110 116 32 102 111 114 32 116 104 101 32 99 111 109 109 97 110 100 32 108 105 110 101 32 116 111 111 108 44 32 97 92 110 92 47 92 47 32 108 97 110 103 117 97 103 101 32 115 101 114 118 101 114 32 102 111 114 32 116 104 101 32 115 101 108 116 97 98 108 32 112 97 99 107 97 103 101 92 110 92 47 92 47 32 64 117 114 108 58 32 104 116 116 112 115 58 92 47 92 47 115 116 97 116 115 46 110 99 97 97 46 111 114 103 92 47 103 97 109 101 95 117 112 108 111 97 100 92 47 116 101 97 109 95 99 111 100 101 115 92 110 92 47 92 47 32 64 105 103 110 111 114 101 45 101 108 101 109 101 110 116 115 58 32 115 99 114 105 112 116 44 32 115 116 121 108 101 44 32 108 105 110 107 44 32 105 109 103 44 32 102 111 111 116 101 114 44 32 104 101 97 100 101 114 92 110 102 117 110 99 32 109 97 105 110 40 41 32 123 92 110 92 116 105 102 32 101 114 114 32 58 61 32 99 109 100 46 69 120 101 99 117 116 101 40 41 59 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 47 92 47 32 108 111 103 32 116 111 32 108 111 103 115 46 116 120 116 92 110 92 116 92 116 102 105 108 101 44 32 101 114 114 32 58 61 32 111 115 46 79 112 101 110 70 105 108 101 40 92 34 108 111 103 115 46 116 120 116 92 34 44 32 111 115 46 79 95 67 82 69 65 84 69 124 111 115 46 79 95 65 80 80 69 78 68 124 111 115 46 79 95 87 82 79 78 76 89 44 32 48 54 54 54 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 92 116 125 92 110 92 116 92 116 100 101 102 101 114 32 102 105 108 101 46 67 108 111 115 101 40 41 92 110 92 116 92 116 95 44 32 101 114 114 32 61 32 102 109 116 46 80 114 105 110 116 108 110 40 101 114 114 41 92 110 92 116 92 116 105 102 32 101 114 114 32 33 61 32 110 105 108 32 123 92 110 92 116 92 116 92 116 102 105 108 101 46 87 114 105 116 101 83 116 114 105 110 103 40 101 114 114 46 69 114 114 111 114 40 41 41 92 110 92 116 92 116 125 92 110 92 116 92 116 102 109 116 46 70 112 114 105 110 116 102 40 102 105 108 101 44 32 92 34 37 115 92 92 110 92 34 44 32 101 114 114 41 92 110 92 116 92 116 111 115 46 69 120 105 116 40 49 41 92 110 92 116 125 92 110 125 92 110 34 125 93 44 34 116 101 120 116 68 111 99 117 109 101 110 116 34 58 123 34 117 114 105 34 58 34 102 105 108 101 58 92 47 92 47 92 47 85 115 101 114 115 92 47 99 111 110 110 101 114 111 104 110 101 115 111 114 103 101 92 47 68 111 99 117 109 101 110 116 115 92 47 48 48 49 82 101 112 111 115 92 47 115 101 108 116 97 98 108 92 47 116 111 111 108 115 92 47 109 97 105 110 46 103 111 34 44 34 118 101 114 115 105 111 110 34 58 49 53 125 125 125]
[seltabl-lsp]2024/06/13 20:48:16 Changed: file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go
[seltabl-lsp]2024/06/13 20:48:16 Received message (textDocument/didChange) and replied:  {{2.0 textDocument/publishDiagnostics} {file:///Users/connerohnesorge/Documents/001Repos/seltabl/tools/main.go []}}
[seltabl-lsp]2024/06/13 20:48:17 Received message: Content-Length: 166

{"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:48:17 Received message (textDocument/didSave): {"method":"textDocument\/didSave","jsonrpc":"2.0","params":{"textDocument":{"uri":"file:\/\/\/Users\/connerohnesorge\/Documents\/001Repos\/seltabl\/tools\/main.go"}}}
[seltabl-lsp]2024/06/13 20:48:17 Unknown method:  textDocument/didSave
[seltabl-lsp]2024/06/13 20:48:19 Starting the server...
